
_build_lpc40xx_freertos/lpc40xx_freertos.elf:     file format elf32-littlearm
_build_lpc40xx_freertos/lpc40xx_freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000000e5

Program Header:
0x70000001 off    0x0001bd54 vaddr 0x0000bd54 paddr 0x0000bd54 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0000bd5c memsz 0x0000bd5c flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x0000bd5c align 2**16
         filesz 0x00000348 memsz 0x00001408 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000028 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            0000bd54  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx       00000008  0000bd54  0000bd54  0001bd54  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data            00000348  10000000  0000bd5c  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss             000010c0  10000348  0000c0a4  00020348  2**3  ALLOC
  4 .persistent_ram2 00000028  20000000  20000000  00030000  2**2  ALLOC
  5 .debug_info      00023960  00000000  00000000  00020348  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev    000063a0  00000000  00000000  00043ca8  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges   00000eb8  00000000  00000000  0004a048  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges    00001bf0  00000000  00000000  0004af00  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line      000110d4  00000000  00000000  0004caf0  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str       0000653e  00000000  00000000  0005dbc4  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment         00000076  00000000  00000000  00064102  2**0  CONTENTS, READONLY
 12 .ARM.attributes  00000032  00000000  00000000  00064178  2**0  CONTENTS, READONLY
 13 .debug_frame     000043b4  00000000  00000000  000641ac  2**2  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc       00011c42  00000000  00000000  00068560  2**0  CONTENTS, READONLY, DEBUGGING
 15 .stab            00000054  00000000  00000000  0007a1a4  2**2  CONTENTS, READONLY, DEBUGGING
 16 .stabstr         000000ab  00000000  00000000  0007a1f8  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000bd54 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000348 l    d  .bss	00000000 .bss
20000000 l    d  .persistent_ram2	00000000 .persistent_ram2
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000158 l     F .text	0000001a isr_hard_fault
0000016c l       .text	00000000 handler_address
00000174 l     F .text	0000005c halt
0000a9bc l     O .text	00000040 table.8042
00000000 l    df *ABS*	00000000 entry_point.c
0000a824 l     O .text	0000000c __FUNCTION__.6167
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 crash.c
20000000 l     O .persistent_ram2	00000028 crash_registers
00000000 l    df *ABS*	00000000 syscall.c
10000000 l     O .data	00000004 next_free_heap.5390
10000004 l     O .data	00000004 next_free_heap.5399
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 acceleration.c
00000000 l    df *ABS*	00000000 sensors.c
00000000 l    df *ABS*	00000000 ff.c
00000426 l     F .text	00000010 ld_dword
00000436 l     F .text	0000001c mem_cmp
00000452 l     F .text	0000002a get_ldnumber
0000047c l     F .text	00000040 sync_window.part.6
000004bc l     F .text	00000044 move_window
00000500 l     F .text	00000074 check_fs
00000574 l     F .text	000002c0 find_volume
00000834 l     F .text	00000016 unlock_fs
10000348 l     O .bss	00000004 FatFs
1000034c l     O .bss	00000002 Fsid
00000000 l    df *ABS*	00000000 ffsystem.c
00000000 l    df *ABS*	00000000 disk_glue_logic.c
00000000 l    df *ABS*	00000000 sd_card.c
0000096c l     F .text	00000028 sd_card__wait_for_ready
00000994 l     F .text	00000020 sd_card__power_off
000009b4 l     F .text	0000005a sd_card__transmit_datablock
00000a0e l     F .text	00000086 sd_card__send_command
00000a94 l     F .text	00000042 sd_card__read_datablock
1000034e l     O .bss	00000001 g_card_type
10000008 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 system_calls.c
00000d78 l     F .text	0000001e system_calls__print_and_halt
00000000 l    df *ABS*	00000000 app_cli.c
00000e4c l     F .text	00000098 app_cli__private_print_list_of_all_commands
00000000 l    df *ABS*	00000000 sj2_cli.c
00001038 l     F .text	00000012 sj2_cli__output_function
0000104c l     F .text	00000078 sj2_cli__task
10000350 l     O .bss	00000010 sj2_cli_struct.8621
10000360 l     O .bss	00000800 task_stack.8626
10000b60 l     O .bss	0000005c task_struct.8627
1000000c l     O .data	00000010 crash.8622
1000001c l     O .data	00000010 i2c.8623
1000002c l     O .data	00000010 task_list.8624
1000003c l     O .data	00000010 taskcontrol.8625
00000000 l    df *ABS*	00000000 handler_i2c.c
0000114c l     F .text	000000c8 cli__i2c_read
00001214 l     F .text	000000e8 cli__i2c_write
00000000 l    df *ABS*	00000000 handlers_general.c
0000b0a0 l     O .text	00000014 task_status_table.7881
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 peripherals_init.c
10000bbc l     O .bss	00000020 rxq_storage.9186
10000bdc l     O .bss	00000050 rxq_struct.9184
10000c2c l     O .bss	00000238 sd_card_drive.9178
10000e64 l     O .bss	00000080 txq_storage.9187
10000ee4 l     O .bss	00000050 txq_struct.9185
0000b0b4 l     O .text	00000011 __FUNCTION__.9166
00000000 l    df *ABS*	00000000 ssp2_mutex.c
10000f34 l     O .bss	00000004 spi2_mutex_handle
10000f38 l     O .bss	00000050 spi2_mutex_memory
00000000 l    df *ABS*	00000000 sys_time.c
0000164c l     F .text	00000024 sys_time__one_minute_isr
10000f88 l     O .bss	00000004 sys_time__one_minute_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 main.c
10000f8d l     O .bss	00000100 slave_memory
00000000 l    df *ABS*	00000000 rtos_hooks.c
10001090 l     O .bss	00000008 freertos_run_time_counter_offset
10001098 l     O .bss	00000190 uxIdleTaskStack.7843
10001228 l     O .bss	0000005c xIdleTaskTCB.7842
00000000 l    df *ABS*	00000000 sl_string.c
00000000 l    df *ABS*	00000000 freertos_interrupt_handlers.c
00000000 l    df *ABS*	00000000 port.c
00001da4 l     F .text	00000022 prvPortStartFirstTask
00001dcc l     F .text	0000000e vPortEnableVFP
00001de0 l     F .text	0000003c prvTaskExitError
00001e70 l       .text	00000000 pxCurrentTCBConst2
00001f40 l       .text	00000000 pxCurrentTCBConst
10001284 l     O .bss	00000001 ucMaxSysCallPriority
10001288 l     O .bss	00000004 ulMaxPRIGROUPValue
1000128c l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
000021b2 l     F .text	00000016 prvIsQueueEmpty
000021c8 l     F .text	0000006a prvCopyDataToQueue
00002232 l     F .text	0000002a prvCopyDataFromQueue
0000225c l     F .text	00000070 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
00002ab0 l     F .text	00000054 prvSearchForNameWithinSingleList
00002b04 l     F .text	0000002e prvResetRunTimeStatsInList
00002b34 l     F .text	000000f4 prvAddNewTaskToReadyList
00002c28 l     F .text	00000028 prvIdleTask
00002c50 l     F .text	00000024 prvResetNextTaskUnblockTime
00002c74 l     F .text	00000038 prvTaskIsTaskSuspended
00002cac l     F .text	00000098 prvInitialiseNewTask.isra.2
00002d44 l     F .text	0000008c prvAddCurrentTaskToDelayedList
000035d8 l     F .text	0000005a prvListTasksWithinSingleList
10001294 l     O .bss	00000004 pxDelayedTaskList
10001298 l     O .bss	00000004 pxOverflowDelayedTaskList
1000129c l     O .bss	000000c8 pxReadyTasksLists
10001364 l     O .bss	00000004 ulTaskSwitchedInTime
10001368 l     O .bss	00000004 uxCurrentNumberOfTasks
1000136c l     O .bss	00000004 uxPendedTicks
10001370 l     O .bss	00000004 uxSchedulerSuspended
10001374 l     O .bss	00000004 uxTaskNumber
10001378 l     O .bss	00000004 uxTopReadyPriority
1000137c l     O .bss	00000014 xDelayedTaskList1
10001390 l     O .bss	00000014 xDelayedTaskList2
100013a4 l     O .bss	00000004 xIdleTaskHandle
100013a8 l     O .bss	00000004 xNextTaskUnblockTime
100013ac l     O .bss	00000004 xNumOfOverflows
100013b0 l     O .bss	00000014 xPendingReadyList
100013c4 l     O .bss	00000004 xSchedulerRunning
100013c8 l     O .bss	00000014 xSuspendedTaskList
100013dc l     O .bss	00000004 xTickCount
100013e0 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 board_io.c
100013e4 l     O .bss	00000002 board_io__led0
100013e6 l     O .bss	00000002 board_io__led1
100013e8 l     O .bss	00000002 board_io__led2
100013ea l     O .bss	00000002 board_io__led3
00000000 l    df *ABS*	00000000 gpio.c
0000b984 l     O .text	00000018 gpio_memory_map
00000000 l    df *ABS*	00000000 hw_timer.c
0000b99c l     O .text	00000020 hw_timers
00000000 l    df *ABS*	00000000 i2c.c
00003d7c l     F .text	0000005e i2c__transfer_unprotected
00003ddc l     F .text	00000128 i2c__handle_interrupt
00003f04 l     F .text	0000000c i2c2_isr
00003f10 l     F .text	0000000c i2c1_isr
00003f1c l     F .text	0000000c i2c0_isr
1000004c l     O .data	00000054 i2c_structs
00000000 l    df *ABS*	00000000 lpc_peripherals.c
000040d8 l     F .text	00000002 lpc_peripheral__halt_handler
100013ec l     O .bss	00000004 memory_write_to_avoid_spurious_interrupt.7684
100000a0 l     O .data	000000a4 lpc_peripheral__isr_registrations
0000b9c8 l     O .text	00000025 lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 ssp2.c
00004180 l     F .text	00000098 ssp2__dma_transfer_block
00000000 l    df *ABS*	00000000 uart.c
000042a8 l     F .text	00000094 uart__isr_common
0000433c l     F .text	0000000c uart3_isr
00004348 l     F .text	0000000c uart2_isr
00004354 l     F .text	0000000c uart1_isr
00004360 l     F .text	0000000c uart0_isr
10000144 l     O .data	00000030 uarts
0000b9f0 l     O .text	00000010 uart__isrs
0000ba00 l     O .text	00000004 uart_peripheral_ids
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
000053b8 l     F .text	0000002e __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
000066f8 l     F .text	00000038 sulp
0000bb54 l     O .text	00000014 fpi.7522
0000bb68 l     O .text	00000014 fpinan.7558
0000bb80 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
000072d4 l     F .text	000000f0 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0000762c l     F .text	00000112 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000845c l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0000867c l     F .text	00000074 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00008b64 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0000bd20 l     O .text	0000000c p05.7444
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strtoul.c
0000a1d0 l     F .text	000000ec _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 refill.c
0000a430 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000178 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 lnumeric.c
100001d8 l     O .data	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 reent.c
0000a3fc g     F .text	00000010 _malloc_usable_size_r
0000565c g     F .text	000000ba __cvt
000062d4 g     F .text	00000028 putchar
00009d4c g     F .text	000000b0 _scanf_chars
00001c82 g     F .text	00000022 sl_string__erase_last
0000a66c g     F .text	0000002c .hidden __aeabi_dcmpun
000096b6 g     F .text	00000042 __any_on
0000a3b8 g     F .text	00000020 _isatty_r
0000a630 g     F .text	00000012 .hidden __aeabi_dcmple
00004550 g     F .text	00000084 uart__put
000062fc g     F .text	000000dc _puts_r
0000a56c g     F .text	0000007a .hidden __cmpdf2
0000a3d8 g     F .text	00000024 _lseek_r
00001a0e g     F .text	0000001a sl_string__is_full
0000a56c g     F .text	0000007a .hidden __eqdf2
00004218 g     F .text	0000002c ssp2__set_max_clock
00001eb8 g     F .text	00000028 vPortExitCritical
00000422 g     F .text	00000004 sensors__init
000048f0 g     F .text	0000005a .hidden __floatdidf
000043c4 g     F .text	00000028 uart__is_initialized
00000ee4 g     F .text	00000016 app_cli__initialize
000062a4 g     F .text	00000030 printf
100013f8 g     O .bss	00000001 __lock___atexit_recursive_mutex
00001670 g     F .text	0000002c sys_time__init
0000a1a2 g     F .text	00000024 __sseek
0000850c g     F .text	00000070 __sinit
0000355c g     F .text	0000007c vTaskGetInfo
000074ac g     F .text	000000a4 __swbuf_r
000084b0 g     F .text	0000002c __sfmoreglue
00007450 g     F .text	00000048 _vsiscanf_r
00008efc g     F .text	0000000c __malloc_unlock
000003e8 g     F .text	00000018 startup__initialize_interrupts
000072c8 g     F .text	0000000c _strtod_r
000086f0 g     F .text	0000002a __hexdig_fun
100013f9 g     O .bss	00000001 __lock___arc4random_mutex
00005224 g     F .text	00000034 memmove
00003b38 g     F .text	00000024 board_io__get_led3
000025d4 g     F .text	000000bc xQueueGenericSendFromISR
00008f08 g     F .text	00000068 _Balloc
0000bd5c g       .ARM.exidx	00000000 __exidx_end
00004158 g     F .text	00000028 lpc_peripheral__enable_interrupt
0000a55c g     F .text	0000008a .hidden __gtdf2
00003988 g     F .text	00000010 vRunTimeStatIsrExit
10001290 g     O .bss	00000004 pxCurrentTCB
0000a788 g     F .text	0000002e .hidden __aeabi_d2lz
0000a394 g     F .text	00000024 _fstat_r
00001cdc g     F .text	00000050 sl_string__erase_int
10001404 g     O .bss	00000004 errno
00009dfc g     F .text	000001e8 _scanf_i
0000a166 g     F .text	00000004 __seofread
0000bd5c g       .ARM.exidx	00000000 _etext
0000a5f8 g     F .text	00000010 .hidden __aeabi_cdcmple
000019bc g     F .text	00000028 sl_string__initialize
0000436c g     F .text	00000058 uart__init
00007498 g     F .text	00000014 vsscanf
0000022c g     F .text	00000040 clock__initialize_system_clock_96mhz
000034c4 g     F .text	00000018 vTaskInternalSetTimeOutState
00003d6c g     F .text	00000010 hw_timer__set_value
00004480 g     F .text	00000028 uart__polled_put
00008cd0 g     F .text	00000080 _getc_r
00001fa0 g     F .text	00000100 xPortStartScheduler
00005208 g     F .text	0000001c memcpy
00003414 g     F .text	00000030 vTaskPlaceOnEventList
00008bb0 g     F .text	00000120 __hexnan
0000a5e8 g     F .text	00000020 .hidden __aeabi_cdrcmple
00006408 g     F .text	00000184 setvbuf
000084a4 g     F .text	0000000c _cleanup_r
00001704 g     F .text	000001ac i2c_slave_functionc
00009818 g     F .text	000001f0 _svfprintf_r
00004878 g     F .text	00000022 .hidden __floatsidf
00001f70  w    F .text	00000030 vPortSetupTimerInterrupt
0000a564 g     F .text	00000082 .hidden __ltdf2
00001f44 g     F .text	0000002c xPortSysTickHandler
000008f6 g     F .text	0000001c disk_initialize
00004db0 g     F .text	00000000 .hidden __aeabi_uldivmod
000063d8 g     F .text	00000010 puts
00002584 g     F .text	0000002a xQueueCreateMutexStatic
00002116 g     F .text	0000001a vPortFree
00001a8a g     F .text	0000002e sl_string__set
0000961c g     F .text	00000066 __ratio
00003af0 g     F .text	00000024 board_io__get_led1
00002870 g     F .text	00000180 xQueueSemaphoreTake
00003ab8 g     F .text	00000014 board_io__sd_card_is_present
000008d0 g     F .text	0000000a ff_del_syncobj
000051e8 g     F .text	00000010 malloc
000020a0 g     F .text	00000058 vPortValidateInterruptPriority
00004134 g     F .text	00000024 lpc_peripheral__is_powered_on
0000a804 g     F .text	00000010 _fstat
0000bc58 g     O .text	000000c8 __mprec_tens
00003f28 g     F .text	000000b8 i2c__initialize
00001ee0 g     F .text	00000064 xPortPendSVHandler
00007434 g     F .text	0000001c vsnprintf
10000348 g       .bss	00000000 _bss_start
00004d70 g     F .text	00000040 .hidden __fixunsdfsi
0000214c g     F .text	00000018 vListInsertEnd
00009a82 g     F .text	0000003a __ssrefill_r
00000912 g     F .text	0000000a disk_status
00004858 g     F .text	0000001e .hidden __aeabi_ui2d
00008d50 g     F .text	00000008 _localeconv_r
20008000 g       *ABS*	00000000 __top_ram_32k
00009130 g     F .text	00000012 __i2b
00003c14 g     F .text	00000024 gpio__set_as_output
00004de0 g     F .text	000002d0 .hidden __udivmoddi4
000045d4 g     F .text	00000000 .hidden __aeabi_drsub
000063e8 g     F .text	00000020 _sbrk_r
00003bd0 g     F .text	00000028 gpio__set_as_input
00001d90 g     F .text	00000012 xPortSysTickHandler_wrapper
00003b8c g     F .text	0000001e gpio__construct_with_function
0000a40c g     F .text	00000024 _read_r
00002146 g     F .text	00000006 vListInitialiseItem
0000a61c g     F .text	00000012 .hidden __aeabi_dcmplt
00003208 g     F .text	0000007c xTaskGetHandle
00002734 g     F .text	0000013c xQueueReceive
00008438 g     F .text	00000024 fflush
0000489c g     F .text	00000042 .hidden __extendsfdf2
00009abc g     F .text	00000290 __ssvfscanf_r
00004ba0 g     F .text	000001d0 .hidden __aeabi_ddiv
000045e0 g     F .text	00000276 .hidden __adddf3
20008000 g       *ABS*	00000000 _heap_end
000094e0 g     F .text	000000a0 __b2d
0000bd54 g       .text	00000000 __exidx_start
100013fa g     O .bss	00000001 __lock___env_recursive_mutex
0000494c g     F .text	00000254 .hidden __aeabi_dmul
00000d98 g     F .text	00000028 _isatty
100013fb g     O .bss	00000001 __lock___sinit_recursive_mutex
0000bb08 g     O .text	00000004 _global_impure_ptr
00009714 g     F .text	0000004c _realloc_r
0000663c g     F .text	00000044 strncasecmp
00004404 g     F .text	0000007c uart__enable_queues
0000bc30 g     O .text	00000028 __mprec_bigtens
00009014 g     F .text	0000007c __s2b
00003c98 g     F .text	0000001c gpio__reset
00003c7c g     F .text	0000001c gpio__set
00004858 g     F .text	0000001e .hidden __floatunsidf
00004288 g     F .text	00000014 ssp2__exchange_byte
00000344 g     F .text	00000054 _sbrk
000093a6 g     F .text	00000034 __mcmp
000020f8 g     F .text	0000001e pvPortMalloc
10010000 g       *ABS*	00000000 __end_of_unused_ram64
10000f8c g     O .bss	00000001 memory_index
00001a28 g     F .text	00000004 sl_string__to_int
000019f6 g     F .text	0000000c sl_string__get_capacity_including_null_char
00002a8c g     F .text	00000024 vQueueDelete
00002130 g     F .text	00000016 vListInitialise
000073c8 g     F .text	00000014 strtol
000016da g     F .text	0000002a uart_puts__polled
0000a6e8 g     F .text	0000009e .hidden __aeabi_d2f
00080000 g       *ABS*	00000000 __top_flash
10001408 g       .bss	00000000 _bss_end
0000a7b8 g     F .text	0000003c .hidden __aeabi_d2ulz
00002428 g     F .text	0000015c xQueueGenericSend
000015f4 g     F .text	00000034 spi2_mutex__acquire
00006730 g     F .text	00000b98 _strtod_l
000040c0 g     F .text	00000018 i2c__write_single
00008b88 g     F .text	00000028 __match
00003d24 g     F .text	00000024 hw_timer__enable_match_isr
000014e4 g     F .text	00000110 peripherals_init
00007434 g     F .text	0000001c vsniprintf
00001a68 g     F .text	00000022 sl_string__scanf
00009090 g     F .text	00000040 __hi0bits
00003998 g     F .text	00000100 board_io__initialize
00003634 g     F .text	00000098 uxTaskGetSystemState
00001cc0 g     F .text	0000001c sl_string__erase_first_word
0000a698 g     F .text	0000004e .hidden __fixdfsi
00003790 g     F .text	0000009c xTaskPriorityDisinherit
20000028 g       .persistent_ram2	00000000 _heap_start
100013fc g     O .bss	00000001 __lock___malloc_recursive_mutex
00003c54 g     F .text	00000028 gpio__get
00001bae g     F .text	0000002e sl_string__begins_with_ignore_case
00000c44 g     F .text	0000008c sd_card__read
000038f4 g     F .text	0000006c vTaskResetRunTimeStats
00009fe4 g     F .text	00000090 _putc_r
10001408 g       .bss	00000000 __start_of_unused_ram64
00003444 g     F .text	00000080 xTaskRemoveFromEventList
0000191c g     F .text	00000010 vApplicationMallocFailedHook
000001d0 g     F .text	0000004c isr_hard_fault_handler
000050bc g     F .text	00000024 fprintf
000045e0 g     F .text	00000276 .hidden __aeabi_dadd
0000a564 g     F .text	00000082 .hidden __ledf2
10000000 g       .data	00000000 _bdata_vma
00001b22 g     F .text	00000038 sl_string__append
00009264 g     F .text	0000009c __pow5mult
000048e0 g     F .text	0000006a .hidden __aeabi_ul2d
0000bbb8 g     O .text	00000020 __sf_fake_stderr
00003cdc g     F .text	00000048 hw_timer__enable
000051e4 g     F .text	00000002 __retarget_lock_release_recursive
00000398 g     F .text	0000003c startup__initialize_ram
00000af8 g     F .text	0000013c sd_card__initialize
00009760 g     F .text	000000b6 __ssputs_r
00000224 g     F .text	00000008 clock__get_peripheral_clock_hz
000038dc g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000284 g     F .text	000000c0 crash__report_if_occurred
0000a658 g     F .text	00000012 .hidden __aeabi_dcmpgt
10010000 g       *ABS*	00000000 __top_ram_64k
000053e6 g     F .text	00000024 __sfputs_r
000084dc g     F .text	0000000c __sfp_lock_acquire
00008e50 g     F .text	00000000 memchr
0000577c  w    F .text	00000454 _printf_float
000034dc g     F .text	00000074 xTaskCheckForTimeOut
00005268 g     F .text	0000009c _free_r
000036ec g     F .text	000000a4 xTaskPriorityInherit
0000a644 g     F .text	00000012 .hidden __aeabi_dcmpge
0000a074 g     F .text	00000058 __srget_r
00009a08 g     F .text	0000007a _sungetc_r
000045dc g     F .text	0000027a .hidden __aeabi_dsub
00002fa0 g     F .text	00000010 vTaskSuspendAll
00002e3c g     F .text	0000006c eTaskGetState
000066ca g     F .text	0000002e strstr
000048e0 g     F .text	0000006a .hidden __floatundidf
0000a814 g     F .text	00000010 _lseek
00009300 g     F .text	000000a6 __lshift
00003cb4 g     F .text	00000026 gpio__toggle
00001a02 g     F .text	0000000c sl_string__get_length
00002192 g     F .text	00000020 uxListRemove
00001ca4 g     F .text	0000001c sl_string__erase_at_substring
0000193c g     F .text	00000040 configASSERT_callback
00006680 g     F .text	00000024 strncmp
00001344 g     F .text	00000006 cli__crash_me
00009142 g     F .text	00000120 __multiply
00002dd0 g     F .text	0000006c xTaskCreateStatic
000008bc g     F .text	00000014 ff_cre_syncobj
000066a4 g     F .text	00000026 strncpy
00002ea8 g     F .text	00000084 vTaskResume
00009580 g     F .text	0000009c __d2b
000065d8 g     F .text	00000038 strcasecmp
0000134c g     F .text	000000dc cli__task_list
00003284 g     F .text	000000bc vTaskSwitchContext
00004038 g     F .text	0000001e i2c__read_single
00003bf8 g     F .text	0000001c gpio__construct_as_input
0000a2bc g     F .text	00000004 _strtoul_r
00002348 g     F .text	00000094 xQueueGenericCreateStatic
00001d2c g     F .text	00000040 sl_string__trim_end
0000a374 g     F .text	00000020 _close_r
00004878 g     F .text	00000022 .hidden __aeabi_i2d
0000197c g     F .text	00000018 vApplicationGetIdleTaskMemory
00000cd0 g     F .text	000000a8 sd_card__write
10000348 g       .data	00000000 _data_end
00007550 g     F .text	000000dc __swsetup_r
0000429c g     F .text	00000006 ssp2__dma_write_block
00001900 g     F .text	0000001c vApplicationStackOverflowHook
000050b0  w    F .text	00000002 .hidden __aeabi_ldiv0
00003340 g     F .text	000000d4 vTaskSuspend
00004ba0 g     F .text	000001d0 .hidden __divdf3
0000857c g     F .text	0000008c __sfp
00009682 g     F .text	00000034 __copybits
00008500 g     F .text	0000000c __sinit_lock_release
00001c20 g     F .text	00000022 sl_string__ends_with_newline
000073dc g     F .text	00000058 _vsnprintf_r
000016c8 g     F .text	00000012 sys_time__get_uptime_ms
00000000 g       .text	00000000 __base_flash
0000494c g     F .text	00000254 .hidden __muldf3
00003b14 g     F .text	00000024 board_io__get_led2
0000a144 g     F .text	00000022 __sread
00008ef0 g     F .text	0000000c __malloc_lock
000083c0 g     F .text	00000078 _fflush_r
000044f8 g     F .text	00000058 uart__polled_get
000096f8 g     F .text	0000001c _calloc_r
0000169c g     F .text	0000002c sys_time__get_uptime_us
0000bbd8 g     O .text	00000020 __sf_fake_stdin
000051e2 g     F .text	00000002 __retarget_lock_acquire_recursive
00005258 g     F .text	00000010 memset
000040a8 g     F .text	00000018 i2c__detect
000018e0 g     F .text	00000020 main
000051e0 g     F .text	00000002 __retarget_lock_init_recursive
10000000 g       .text	00000000 __base_ram_64k
00002164 g     F .text	0000002e vListInsert
0000a1c6 g     F .text	00000008 __sclose
0000a6e8 g     F .text	0000009e .hidden __truncdfsf2
000073c4 g     F .text	00000004 _strtol_r
000051bc g     F .text	00000024 getchar
000000e4 g       .text	00000000 __init_array_end
00001e50 g     F .text	00000024 vPortSVCHandler
00007740 g     F .text	00000b74 _dtoa_r
00005304 g     F .text	000000b4 _malloc_r
0000a334 g     F .text	0000001a __ascii_wctomb
000048f0 g     F .text	0000005a .hidden __aeabi_l2d
00001b72 g     F .text	00000014 sl_string__equals_to_ignore_case
0000084c g     F .text	00000070 f_mount
0000a2c0 g     F .text	00000074 __submore
000019a8 g     F .text	00000014 freertos_hooks__reset_run_time_stats
00001c7a g     F .text	00000008 sl_string__erase_first
00008608 g     F .text	00000038 _fwalk
000029f0 g     F .text	0000009c xQueueReceiveFromISR
00000f04 g     F .text	00000134 app_cli__process_input
000023dc g     F .text	0000004c xQueueGenericCreate
000043ec g     F .text	00000018 uart__is_transmit_queue_initialized
00004244 g     F .text	00000044 ssp2__initialize
00000c34 g     F .text	00000010 sd_card__status
0000a7b8 g     F .text	0000003c .hidden __fixunsdfdi
0000a56c g     F .text	0000007a .hidden __nedf2
00001d7e g     F .text	00000012 xPortPendSVHandler_wrapper
00003fe0 g     F .text	00000058 i2c__read_slave_data
000062a4 g     F .text	00000030 iprintf
000008ec g     F .text	0000000a ff_rel_grant
000030d4 g     F .text	000000ec xTaskResumeAll
00006598 g     F .text	00000040 sprintf
00001d6c g     F .text	00000012 vPortSVCHandler_wrapper
00002f2c g     F .text	00000074 vTaskStartScheduler
00005716 g     F .text	00000064 __exponent
000040dc g     F .text	00000034 lpc_peripheral__interrupt_dispatcher
0000a788 g     F .text	0000002e .hidden __fixdfdi
000019e4 g     F .text	00000012 sl_string__get_capacity
0000a350 g     F .text	00000024 _write_r
0000021c g     F .text	00000008 clock__get_core_clock_hz
0000658c g     F .text	0000000c nanf
00005bd0 g     F .text	000000ea _printf_common
10000174 g     O .data	00000004 _impure_ptr
000082b4 g     F .text	0000010c __sflush_r
000000e4 g       .text	00000000 __preinit_array_end
00003baa g     F .text	00000026 gpio__enable_open_drain
00003a98 g     F .text	00000010 board_io__sd_card_cs
00001628 g     F .text	00000024 spi2_mutex__release
00009818 g     F .text	000001f0 _svfiprintf_r
0000a444 g     F .text	00000118 __srefill_r
00008e20 g     F .text	00000024 __ascii_mbtowc
00009494 g     F .text	0000004c __ulp
00003550 g     F .text	0000000c vTaskMissedYield
00003aa8 g     F .text	00000010 board_io__sd_card_ds
0000bc18 g     O .text	0000000c _C_numeric_locale
000018b0 g     F .text	00000030 i2c__init_slave
000073dc g     F .text	00000058 _vsniprintf_r
0000026c g     F .text	00000018 crash__record_get
00000ad8 g     F .text	00000020 sd_card__update_status
00004d70 g     F .text	00000040 .hidden __aeabi_d2uiz
0000a0d0 g     F .text	00000010 nan
00002fb0 g     F .text	00000124 xTaskIncrementTick
00009abc g     F .text	00000290 __ssvfiscanf_r
00001994 g     F .text	00000014 freertos_hooks__get_run_time_counter_value
00008d58 g     F .text	00000048 __swhatbuf_r
10010000 g       *ABS*	00000000 _estack
00001b86 g     F .text	00000028 sl_string__begins_with_limited_chars
00001a4e g     F .text	0000001a sl_string__printf
0000a608 g     F .text	00000012 .hidden __aeabi_dcmpeq
00000400 g     F .text	00000022 acceleration__init
000022cc g     F .text	0000007c xQueueGenericReset
00000dc0 g     F .text	00000070 _write
000014d8 g     F .text	0000000c delay__ms
00001ab8 g     F .text	00000016 sl_string__initialize_from
00000000 g     O .text	000000e4 interrupt_vector_table
00001428 g     F .text	00000070 cli__task_control
100013fd g     O .bss	00000001 __lock___at_quick_exit_mutex
000050e0 g     F .text	000000cc _fputs_r
20000000 g       .text	00000000 __base_ram_32k
00007450 g     F .text	00000048 _vsscanf_r
0000a16a g     F .text	00000038 __swrite
00000944 g     F .text	00000028 disk_write
000050bc g     F .text	00000024 fiprintf
0000540c g     F .text	00000250 _vfiprintf_r
00008640 g     F .text	0000003c _fwalk_reent
00003b5c g     F .text	00000030 gpio__set_function
00001a32 g     F .text	0000001c sl_string__vprintf
000093da g     F .text	000000ba __mdiff
0000a698 g     F .text	0000004e .hidden __aeabi_d2iz
000008da g     F .text	00000012 ff_req_grant
00007498 g     F .text	00000014 vsiscanf
0000bd5c g       *ABS*	00000000 _bdata_lma
000031c0 g     F .text	00000048 vTaskDelay
000084e8 g     F .text	0000000c __sfp_lock_release
1000108d g     O .bss	00000001 start
0000bbf8 g     O .text	00000020 __sf_fake_stdout
00006598 g     F .text	00000040 siprintf
0000a0e0 g     F .text	00000064 __sccl
000050b4 g     F .text	00000008 atoi
000036cc g     F .text	00000020 xTaskGetSchedulerState
0000ba04 g     O .text	00000101 _ctype_
0000382c g     F .text	000000b0 vTaskPriorityDisinheritAfterTimeout
00000e30 g     F .text	0000001c _read
000000e4 g       .text	00000000 __init_array_start
000050b0  w    F .text	00000002 .hidden __aeabi_idiv0
0000a66c g     F .text	0000002c .hidden __unorddf2
00003d48 g     F .text	00000014 hw_timer__acknowledge_interrupt
000003d4 g     F .text	00000014 startup__initialize_fpu
100013fe g     O .bss	00000001 __lock___dd_hash_mutex
00008da0 g     F .text	00000080 __smakebuf_r
100013ff g     O .bss	00000001 __lock___tz_mutex
0000662a g     F .text	00000010 strlen
0000091c g     F .text	00000028 disk_read
00001e1c g     F .text	0000002c pxPortInitialiseStack
00005cbc g     F .text	00000228 _printf_i
000044a8 g     F .text	00000050 uart__get
0000a5f8 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00003acc g     F .text	00000024 board_io__get_led0
0000a55c g     F .text	0000008a .hidden __gedf2
0000871c g     F .text	00000446 __gethex
100013f4 g     O .bss	00000004 __malloc_sbrk_start
00001b5a g     F .text	00000018 sl_string__append_char
00004058 g     F .text	00000050 i2c__write_slave_data
00001498 g     F .text	00000040 delay__us
00006610 g     F .text	0000001a strchr
00001bdc g     F .text	00000044 sl_string__begins_with_whole_word
0000489c g     F .text	00000042 .hidden __aeabi_f2d
000051ac g     F .text	00000010 fputs
00001e74 g     F .text	00000044 vPortEnterCritical
00004110 g     F .text	00000024 lpc_peripheral__turn_on_power_to
100013f0 g     O .bss	00000004 __malloc_free_list
00000efa g     F .text	0000000a app_cli__add_command_handler
000045dc g     F .text	0000027a .hidden __subdf3
0000540c g     F .text	00000250 _vfprintf_r
000000e4 g       .text	00000000 __preinit_array_start
00003d5c g     F .text	00000010 hw_timer__get_value
000090d0 g     F .text	00000060 __lo0bits
00003960 g     F .text	00000028 vRunTimeStatIsrEntry
000000e4 g     F .text	00000074 entry_point
00003c38 g     F .text	0000001c gpio__construct_as_output
000025ae g     F .text	00000024 xQueueCreateMutex
100001dc g     O .data	0000016c __global_locale
00001ace g     F .text	00000054 sl_string__insert_at
000010c4 g     F .text	00000088 sj2_cli__init
000042a2 g     F .text	00000006 ssp2__dma_read_block
10001400 g     O .bss	00000001 __lock___sfp_recursive_mutex
00002690 g     F .text	000000a4 xQueueGiveFromISR
00001c42 g     F .text	00000038 sl_string__erase_after
0000a7f4 g     F .text	00000010 _close
000051f8 g     F .text	00000010 free
000012fc g     F .text	00000048 cli__i2c
000084f4 g     F .text	0000000c __sinit_lock_acquire
00005ee4  w    F .text	000003c0 _scanf_float
00008f9e g     F .text	00000076 __multadd
1000108e g     O .bss	00000001 value
00008f70 g     F .text	0000002e _Bfree
00001a2c g     F .text	00000006 sl_string__clear
0000192c g     F .text	00000010 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
__base_flash():
       0:	00 00 01 10 e5 00 00 00 75 01 00 00 59 01 00 00     ........u...Y...
      10:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      20:	75 01 00 00 75 01 00 00 75 01 00 00 6d 1d 00 00     u...u...u...m...
      30:	75 01 00 00 75 01 00 00 7f 1d 00 00 91 1d 00 00     u...u...........
      40:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      50:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      60:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      70:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      80:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      90:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      a0:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      b0:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      c0:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      d0:	dd 40 00 00 dd 40 00 00 dd 40 00 00 dd 40 00 00     .@...@...@...@..
      e0:	dd 40 00 00                                         .@..

000000e4 <entry_point>:
entry_point():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:14

extern void main(void);
static void entry_point__halt(void);
static void entry_point__handle_crash_report(void);

void entry_point(void) {
      e4:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:15
  startup__initialize_ram();
      e6:	f000 f957 	bl	398 <startup__initialize_ram>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:16
  startup__initialize_fpu();
      ea:	f000 f973 	bl	3d4 <startup__initialize_fpu>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:17
  startup__initialize_interrupts();
      ee:	f000 f97b 	bl	3e8 <startup__initialize_interrupts>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:19

  clock__initialize_system_clock_96mhz();
      f2:	f000 f89b 	bl	22c <clock__initialize_system_clock_96mhz>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:20
  sys_time__init(clock__get_peripheral_clock_hz());
      f6:	f000 f895 	bl	224 <clock__get_peripheral_clock_hz>
      fa:	f001 fab9 	bl	1670 <sys_time__init>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:23

  // Peripherals init initializes UART and then we can print the crash report if applicable
  peripherals_init();
      fe:	f001 f9f1 	bl	14e4 <peripherals_init>
entry_point__handle_crash_report():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:43
  while (1) {
  }
}

static void entry_point__handle_crash_report(void) {
  if (crash__report_if_occurred()) {
     102:	f000 f8bf 	bl	284 <crash__report_if_occurred>
     106:	b140      	cbz	r0, 11a <entry_point+0x36>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:44
    while (sys_time__get_uptime_ms() < 5000) {
     108:	f241 3487 	movw	r4, #4999	; 0x1387
     10c:	2500      	movs	r5, #0
     10e:	f001 fadb 	bl	16c8 <sys_time__get_uptime_ms>
     112:	428d      	cmp	r5, r1
     114:	bf08      	it	eq
     116:	4284      	cmpeq	r4, r0
     118:	d2f9      	bcs.n	10e <entry_point+0x2a>
entry_point():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:26
  if (!sensors__init()) {
     11a:	f000 f982 	bl	422 <sensors__init>
     11e:	b918      	cbnz	r0, 128 <entry_point+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:27
    printf("\n%s(): WARNING: Sensor errors on this board\n", __FUNCTION__);
     120:	4908      	ldr	r1, [pc, #32]	; (144 <entry_point+0x60>)
     122:	4809      	ldr	r0, [pc, #36]	; (148 <entry_point+0x64>)
     124:	f006 f8be 	bl	62a4 <iprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:30
  printf("\n%s(): Entering main()\n", __FUNCTION__);
     128:	4906      	ldr	r1, [pc, #24]	; (144 <entry_point+0x60>)
     12a:	4808      	ldr	r0, [pc, #32]	; (14c <entry_point+0x68>)
     12c:	f006 f8ba 	bl	62a4 <iprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:31
  main();
     130:	f001 fbd6 	bl	18e0 <main>
entry_point__halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:37
  fprintf(stderr, "ERROR: main() should never return, program has been halted");
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <entry_point+0x6c>)
     136:	4807      	ldr	r0, [pc, #28]	; (154 <entry_point+0x70>)
     138:	681b      	ldr	r3, [r3, #0]
     13a:	68d9      	ldr	r1, [r3, #12]
     13c:	f005 f836 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/entry_point.c:39
  }
     140:	e7fe      	b.n	140 <entry_point+0x5c>
     142:	bf00      	nop
     144:	0000a824 	.word	0x0000a824
     148:	0000a830 	.word	0x0000a830
     14c:	0000a85d 	.word	0x0000a85d
     150:	10000174 	.word	0x10000174
     154:	0000a875 	.word	0x0000a875

00000158 <isr_hard_fault>:
isr_hard_fault():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:128
/**
 * Explanation of register usage dictated by ARM's EABI:
 * https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention
 */
static void isr_hard_fault(void) {
  __asm__ volatile("tst lr, #4                                    \n"
     158:	f01e 0f04 	tst.w	lr, #4
     15c:	bf0c      	ite	eq
     15e:	f3ef 8008 	mrseq	r0, MSP
     162:	f3ef 8009 	mrsne	r0, PSP
     166:	6981      	ldr	r1, [r0, #24]
     168:	4a00      	ldr	r2, [pc, #0]	; (16c <handler_address>)
     16a:	4710      	bx	r2

0000016c <handler_address>:
     16c:	000001d1 	.word	0x000001d1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:136
                   "mrsne r0, psp                                 \n"
                   "ldr r1, [r0, #24]                             \n"
                   "ldr r2, handler_address                       \n"
                   "bx r2                                         \n"
                   "handler_address: .word isr_hard_fault_handler \n");
}
     170:	4770      	bx	lr
handler_address():
     172:	Address 0x0000000000000172 is out of bounds.


00000174 <halt>:
halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:101
static void halt(void) {
     174:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:106
  fprintf(stderr, "Unexpected CPU exception ");
     176:	4c0f      	ldr	r4, [pc, #60]	; (1b4 <halt+0x40>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:105
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     178:	4b0f      	ldr	r3, [pc, #60]	; (1b8 <halt+0x44>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:106
  fprintf(stderr, "Unexpected CPU exception ");
     17a:	4810      	ldr	r0, [pc, #64]	; (1bc <halt+0x48>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:105
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     17c:	781d      	ldrb	r5, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:106
  fprintf(stderr, "Unexpected CPU exception ");
     17e:	6823      	ldr	r3, [r4, #0]
     180:	68d9      	ldr	r1, [r3, #12]
     182:	f005 f813 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:107
  fprintf(stderr, "%u (interrupt) has occured and the program will now halt\n", isr_num);
     186:	6823      	ldr	r3, [r4, #0]
     188:	490d      	ldr	r1, [pc, #52]	; (1c0 <halt+0x4c>)
     18a:	68d8      	ldr	r0, [r3, #12]
     18c:	462a      	mov	r2, r5
     18e:	f004 ff95 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:109
  if (isr_num < 16) {
     192:	2d0f      	cmp	r5, #15
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:113
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     194:	6823      	ldr	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:109
  if (isr_num < 16) {
     196:	d807      	bhi.n	1a8 <halt+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:113
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     198:	4a0a      	ldr	r2, [pc, #40]	; (1c4 <halt+0x50>)
     19a:	490b      	ldr	r1, [pc, #44]	; (1c8 <halt+0x54>)
     19c:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
     1a0:	68d8      	ldr	r0, [r3, #12]
     1a2:	f004 ff8b 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:119 (discriminator 1)
    ;
     1a6:	e7fe      	b.n	1a6 <halt+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:115
    fprintf(stderr, "Did you register the interrupt correctly using lpc_peripherals.h API?");
     1a8:	68d9      	ldr	r1, [r3, #12]
     1aa:	4808      	ldr	r0, [pc, #32]	; (1cc <halt+0x58>)
     1ac:	f004 fffe 	bl	51ac <fputs>
     1b0:	e7f9      	b.n	1a6 <halt+0x32>
     1b2:	bf00      	nop
     1b4:	10000174 	.word	0x10000174
     1b8:	e000ed04 	.word	0xe000ed04
     1bc:	0000a8b0 	.word	0x0000a8b0
     1c0:	0000a8ca 	.word	0x0000a8ca
     1c4:	0000a9bc 	.word	0x0000a9bc
     1c8:	0000a904 	.word	0x0000a904
     1cc:	0000a922 	.word	0x0000a922

000001d0 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:138

void isr_hard_fault_handler(unsigned long *hardfault_args) {
     1d0:	b510      	push	{r4, lr}
     1d2:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:139
  crash__registers_s *c = crash__record_get();
     1d4:	f000 f84a 	bl	26c <crash__record_get>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:141

  c->registers[0] = ((unsigned long)hardfault_args[0]);
     1d8:	6823      	ldr	r3, [r4, #0]
     1da:	6083      	str	r3, [r0, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:142
  c->registers[1] = ((unsigned long)hardfault_args[1]);
     1dc:	6863      	ldr	r3, [r4, #4]
     1de:	60c3      	str	r3, [r0, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:143
  c->registers[2] = ((unsigned long)hardfault_args[2]);
     1e0:	68a3      	ldr	r3, [r4, #8]
     1e2:	6103      	str	r3, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:144
  c->registers[3] = ((unsigned long)hardfault_args[3]);
     1e4:	68e3      	ldr	r3, [r4, #12]
     1e6:	6143      	str	r3, [r0, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:146

  c->r12 = ((unsigned long)hardfault_args[4]);
     1e8:	6923      	ldr	r3, [r4, #16]
     1ea:	6243      	str	r3, [r0, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:147
  c->lr = ((unsigned long)hardfault_args[5]) - 1;
     1ec:	6963      	ldr	r3, [r4, #20]
     1ee:	3b01      	subs	r3, #1
     1f0:	61c3      	str	r3, [r0, #28]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:148
  c->pc = ((unsigned long)hardfault_args[6]);
     1f2:	69a3      	ldr	r3, [r4, #24]
     1f4:	6183      	str	r3, [r0, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:149
  c->psr = ((unsigned long)hardfault_args[7]);
     1f6:	69e3      	ldr	r3, [r4, #28]
     1f8:	6203      	str	r3, [r0, #32]
__DSB():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     1fa:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     1fe:	4905      	ldr	r1, [pc, #20]	; (214 <isr_hard_fault_handler+0x44>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <isr_hard_fault_handler+0x48>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     202:	68ca      	ldr	r2, [r1, #12]
     204:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     208:	4313      	orrs	r3, r2
     20a:	60cb      	str	r3, [r1, #12]
__DSB():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
     20c:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1944
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
     210:	bf00      	nop
     212:	e7fd      	b.n	210 <isr_hard_fault_handler+0x40>
     214:	e000ed00 	.word	0xe000ed00
     218:	05fa0004 	.word	0x05fa0004

0000021c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:12
 * Then, the Cortex-M4 port uses that reference to configure the RTOS tick rate.
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz() configures
 * fixed CPU frequency. It is rare that anyone needs to change this (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
     21c:	4800      	ldr	r0, [pc, #0]	; (220 <clock__get_core_clock_hz+0x4>)
     21e:	4770      	bx	lr
     220:	05b8d800 	.word	0x05b8d800

00000224 <clock__get_peripheral_clock_hz>:
clock__get_peripheral_clock_hz():
     224:	4800      	ldr	r0, [pc, #0]	; (228 <clock__get_peripheral_clock_hz+0x4>)
     226:	4770      	bx	lr
     228:	05b8d800 	.word	0x05b8d800

0000022c <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:21

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
     22c:	4b0e      	ldr	r3, [pc, #56]	; (268 <clock__initialize_system_clock_96mhz+0x3c>)
     22e:	2207      	movs	r2, #7
     230:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:25
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
     234:	21aa      	movs	r1, #170	; 0xaa
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:22
  LPC_SC->PLL0CON = 1; // PLL enable
     236:	2201      	movs	r2, #1
     238:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:25
  LPC_SC->PLL0FEED = 0xAA;
     23c:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:26
  LPC_SC->PLL0FEED = 0x55;
     240:	2155      	movs	r1, #85	; 0x55
     242:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:29

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
     246:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:33 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
     24a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
     24e:	0552      	lsls	r2, r2, #21
     250:	d5fb      	bpl.n	24a <clock__initialize_system_clock_96mhz+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:38
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
     252:	681a      	ldr	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:39
  flash_cfg &= ~(0xF << 12);
     254:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:40
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
     258:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:41
  LPC_SC->FLASHCFG = flash_cfg;
     25c:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:45

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
     25e:	f240 1201 	movw	r2, #257	; 0x101
     262:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:46
}
     266:	4770      	bx	lr
     268:	400fc000 	.word	0x400fc000

0000026c <crash__record_get>:
crash__record_get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:17

static void crash__clear_record(void);

crash__registers_s *crash__record_get(void) {
  // Record the crash signature first before returning the struct
  crash_registers.signature = crash__signature;
     26c:	4802      	ldr	r0, [pc, #8]	; (278 <crash__record_get+0xc>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:18
  crash_registers.signature_inverted = ~crash__signature;
     26e:	4a03      	ldr	r2, [pc, #12]	; (27c <crash__record_get+0x10>)
     270:	4b03      	ldr	r3, [pc, #12]	; (280 <crash__record_get+0x14>)
     272:	e9c0 2300 	strd	r2, r3, [r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:21

  return &crash_registers;
}
     276:	4770      	bx	lr
     278:	20000000 	.word	0x20000000
     27c:	deadbeef 	.word	0xdeadbeef
     280:	21524110 	.word	0x21524110

00000284 <crash__report_if_occurred>:
crash__report_if_occurred():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:23

bool crash__report_if_occurred(void) {
     284:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:26
  bool crash_occured = false;

  if (crash__signature == crash_registers.signature && ~crash__signature == crash_registers.signature_inverted) {
     286:	4c22      	ldr	r4, [pc, #136]	; (310 <crash__report_if_occurred+0x8c>)
     288:	4b22      	ldr	r3, [pc, #136]	; (314 <crash__report_if_occurred+0x90>)
     28a:	6822      	ldr	r2, [r4, #0]
     28c:	429a      	cmp	r2, r3
     28e:	d13d      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:26 (discriminator 1)
     290:	6862      	ldr	r2, [r4, #4]
     292:	4b21      	ldr	r3, [pc, #132]	; (318 <crash__report_if_occurred+0x94>)
     294:	429a      	cmp	r2, r3
     296:	d139      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:29
    crash_occured = true;

    fprintf(stderr, "----------------------------------------\n"
     298:	4d20      	ldr	r5, [pc, #128]	; (31c <crash__report_if_occurred+0x98>)
     29a:	4821      	ldr	r0, [pc, #132]	; (320 <crash__report_if_occurred+0x9c>)
     29c:	682b      	ldr	r3, [r5, #0]
     29e:	68d9      	ldr	r1, [r3, #12]
     2a0:	f004 ff84 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:32
                    "---- WARNING: We crashed previously ----\n");

    fprintf(stderr, "  PC: 0x%08lX\n", crash_registers.pc);
     2a4:	682b      	ldr	r3, [r5, #0]
     2a6:	69a2      	ldr	r2, [r4, #24]
     2a8:	491e      	ldr	r1, [pc, #120]	; (324 <crash__report_if_occurred+0xa0>)
     2aa:	68d8      	ldr	r0, [r3, #12]
     2ac:	f004 ff06 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:33
    fprintf(stderr, "  LR: 0x%08lX\n", crash_registers.lr);
     2b0:	682b      	ldr	r3, [r5, #0]
     2b2:	69e2      	ldr	r2, [r4, #28]
     2b4:	491c      	ldr	r1, [pc, #112]	; (328 <crash__report_if_occurred+0xa4>)
     2b6:	68d8      	ldr	r0, [r3, #12]
     2b8:	f004 ff00 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:34
    fprintf(stderr, " PSR: 0x%08lX\n", crash_registers.psr);
     2bc:	682b      	ldr	r3, [r5, #0]
     2be:	6a22      	ldr	r2, [r4, #32]
     2c0:	491a      	ldr	r1, [pc, #104]	; (32c <crash__report_if_occurred+0xa8>)
     2c2:	68d8      	ldr	r0, [r3, #12]
     2c4:	f004 fefa 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:36

    fprintf(stderr, "  R0: 0x%08lX\n", crash_registers.registers[0]);
     2c8:	682b      	ldr	r3, [r5, #0]
     2ca:	68a2      	ldr	r2, [r4, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <crash__report_if_occurred+0xac>)
     2ce:	68d8      	ldr	r0, [r3, #12]
     2d0:	f004 fef4 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:37
    fprintf(stderr, "  R1: 0x%08lX\n", crash_registers.registers[1]);
     2d4:	682b      	ldr	r3, [r5, #0]
     2d6:	68e2      	ldr	r2, [r4, #12]
     2d8:	4916      	ldr	r1, [pc, #88]	; (334 <crash__report_if_occurred+0xb0>)
     2da:	68d8      	ldr	r0, [r3, #12]
     2dc:	f004 feee 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:38
    fprintf(stderr, "  R2: 0x%08lX\n", crash_registers.registers[2]);
     2e0:	682b      	ldr	r3, [r5, #0]
     2e2:	6922      	ldr	r2, [r4, #16]
     2e4:	4914      	ldr	r1, [pc, #80]	; (338 <crash__report_if_occurred+0xb4>)
     2e6:	68d8      	ldr	r0, [r3, #12]
     2e8:	f004 fee8 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:39
    fprintf(stderr, "  R3: 0x%08lX\n", crash_registers.registers[3]);
     2ec:	682b      	ldr	r3, [r5, #0]
     2ee:	6962      	ldr	r2, [r4, #20]
     2f0:	4912      	ldr	r1, [pc, #72]	; (33c <crash__report_if_occurred+0xb8>)
     2f2:	68d8      	ldr	r0, [r3, #12]
     2f4:	f004 fee2 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:41

    fprintf(stderr, "\n"
     2f8:	682b      	ldr	r3, [r5, #0]
     2fa:	4811      	ldr	r0, [pc, #68]	; (340 <crash__report_if_occurred+0xbc>)
     2fc:	68d9      	ldr	r1, [r3, #12]
     2fe:	f004 ff55 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:27
    crash_occured = true;
     302:	2001      	movs	r0, #1
crash__clear_record():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:53
  crash__clear_record();
  return crash_occured;
}

static void crash__clear_record(void) {
  crash_registers.signature = 0;
     304:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:54
  crash_registers.signature_inverted = 0;
     306:	e9c4 3300 	strd	r3, r3, [r4]
crash__report_if_occurred():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:50
}
     30a:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/crash.c:24
  bool crash_occured = false;
     30c:	2000      	movs	r0, #0
     30e:	e7f9      	b.n	304 <crash__report_if_occurred+0x80>
     310:	20000000 	.word	0x20000000
     314:	deadbeef 	.word	0xdeadbeef
     318:	21524110 	.word	0x21524110
     31c:	10000174 	.word	0x10000174
     320:	0000a9fc 	.word	0x0000a9fc
     324:	0000aa4f 	.word	0x0000aa4f
     328:	0000aa5e 	.word	0x0000aa5e
     32c:	0000aa6d 	.word	0x0000aa6d
     330:	0000aa7c 	.word	0x0000aa7c
     334:	0000aa8b 	.word	0x0000aa8b
     338:	0000aa9a 	.word	0x0000aa9a
     33c:	0000aaa9 	.word	0x0000aaa9
     340:	0000aab8 	.word	0x0000aab8

00000344 <_sbrk>:
sbrk_ram1():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:31
  // These symbols are defined by the linker script
  extern uint32_t _heap_start;
  extern uint32_t _heap_end;

  static void *next_free_heap = (void *)&_heap_start;
  void *memory_to_return = next_free_heap;
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_sbrk+0x3c>)
     346:	6813      	ldr	r3, [r2, #0]
_sbrk():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:11
void *_sbrk(size_t requested_byte_count) {
     348:	b510      	push	{r4, lr}
sbrk_ram1():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:40
   * If our next pointer is outside our valid RAM region, then we cannot return memory back
   * In addition, we need to subtract next_free_heap because of a couple of reasons:
   *   1. Maybe we still have a small chunk we could still serve in the future
   *   2. We do not want to increment next_free_heap and go out of bounds to wrap
   */
  if (!((next_free_heap >= (void *)&_heap_start) && (next_free_heap < (void *)&_heap_end))) {
     34a:	4c0e      	ldr	r4, [pc, #56]	; (384 <_sbrk+0x40>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:32
  next_free_heap += requested_byte_count;
     34c:	1819      	adds	r1, r3, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:40
  if (!((next_free_heap >= (void *)&_heap_start) && (next_free_heap < (void *)&_heap_end))) {
     34e:	42a1      	cmp	r1, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:32
  next_free_heap += requested_byte_count;
     350:	6011      	str	r1, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:40
  if (!((next_free_heap >= (void *)&_heap_start) && (next_free_heap < (void *)&_heap_end))) {
     352:	d302      	bcc.n	35a <_sbrk+0x16>
     354:	4c0c      	ldr	r4, [pc, #48]	; (388 <_sbrk+0x44>)
     356:	42a1      	cmp	r1, r4
     358:	d30b      	bcc.n	372 <_sbrk+0x2e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:42
    memory_to_return = NULL;
    next_free_heap -= requested_byte_count;
     35a:	6013      	str	r3, [r2, #0]
sbrk_ram2():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:53
static void *sbrk_ram2(size_t requested_byte_count) {
  extern uint32_t __start_of_unused_ram64;
  extern uint32_t __end_of_unused_ram64;

  static void *next_free_heap = (void *)&__start_of_unused_ram64;
  void *memory_to_return = next_free_heap;
     35c:	4a0b      	ldr	r2, [pc, #44]	; (38c <_sbrk+0x48>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:56
  next_free_heap += requested_byte_count;

  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) && (next_free_heap < (void *)&__end_of_unused_ram64))) {
     35e:	490c      	ldr	r1, [pc, #48]	; (390 <_sbrk+0x4c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:53
  void *memory_to_return = next_free_heap;
     360:	6813      	ldr	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:54
  next_free_heap += requested_byte_count;
     362:	4418      	add	r0, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:56
  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) && (next_free_heap < (void *)&__end_of_unused_ram64))) {
     364:	4288      	cmp	r0, r1
     366:	d308      	bcc.n	37a <_sbrk+0x36>
     368:	490a      	ldr	r1, [pc, #40]	; (394 <_sbrk+0x50>)
     36a:	4288      	cmp	r0, r1
     36c:	d205      	bcs.n	37a <_sbrk+0x36>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:54
  next_free_heap += requested_byte_count;
     36e:	6010      	str	r0, [r2, #0]
     370:	e001      	b.n	376 <_sbrk+0x32>
_sbrk():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:18
  if (NULL == memory_to_return) {
     372:	2b00      	cmp	r3, #0
     374:	d0f2      	beq.n	35c <_sbrk+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:23
}
     376:	4618      	mov	r0, r3
     378:	bd10      	pop	{r4, pc}
sbrk_ram2():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:57
    memory_to_return = NULL;
     37a:	2300      	movs	r3, #0
_sbrk():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:22
  return memory_to_return;
     37c:	e7fb      	b.n	376 <_sbrk+0x32>
     37e:	bf00      	nop
     380:	10000000 	.word	0x10000000
     384:	20000028 	.word	0x20000028
     388:	20008000 	.word	0x20008000
     38c:	10000004 	.word	0x10000004
     390:	10001408 	.word	0x10001408
     394:	10010000 	.word	0x10010000

00000398 <startup__initialize_ram>:
startup__init_data_sram():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:58
  extern void *_bdata_vma;
  extern void *_data_end;

  uint8_t *src = (uint8_t *)&_bdata_lma;
  uint8_t *dest = (uint8_t *)&_bdata_vma;
  while (dest < (uint8_t *)&_data_end) {
     398:	4a09      	ldr	r2, [pc, #36]	; (3c0 <startup__initialize_ram+0x28>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:57
  uint8_t *dest = (uint8_t *)&_bdata_vma;
     39a:	4b0a      	ldr	r3, [pc, #40]	; (3c4 <startup__initialize_ram+0x2c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:58
  while (dest < (uint8_t *)&_data_end) {
     39c:	490a      	ldr	r1, [pc, #40]	; (3c8 <startup__initialize_ram+0x30>)
     39e:	428b      	cmp	r3, r1
     3a0:	d305      	bcc.n	3ae <startup__initialize_ram+0x16>
startup__init_bss_sram():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:69

static void startup__init_bss_sram(void) {
  extern void *_bss_start;
  extern void *_bss_end;

  uint8_t *ptr = (uint8_t *)&_bss_start;
     3a2:	4b0a      	ldr	r3, [pc, #40]	; (3cc <startup__initialize_ram+0x34>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:70
  while (ptr < (uint8_t *)&_bss_end) {
     3a4:	4a0a      	ldr	r2, [pc, #40]	; (3d0 <startup__initialize_ram+0x38>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:71
    *ptr = 0U;
     3a6:	2100      	movs	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:70
  while (ptr < (uint8_t *)&_bss_end) {
     3a8:	4293      	cmp	r3, r2
     3aa:	d305      	bcc.n	3b8 <startup__initialize_ram+0x20>
startup__initialize_ram():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:14
}
     3ac:	4770      	bx	lr
startup__init_data_sram():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:59
    *dest = *src;
     3ae:	f812 0b01 	ldrb.w	r0, [r2], #1
     3b2:	f803 0b01 	strb.w	r0, [r3], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:61
    src++;
     3b6:	e7f2      	b.n	39e <startup__initialize_ram+0x6>
startup__init_bss_sram():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:71
    *ptr = 0U;
     3b8:	f803 1b01 	strb.w	r1, [r3], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:72
    ptr++;
     3bc:	e7f4      	b.n	3a8 <startup__initialize_ram+0x10>
     3be:	bf00      	nop
     3c0:	0000bd5c 	.word	0x0000bd5c
     3c4:	10000000 	.word	0x10000000
     3c8:	10000348 	.word	0x10000348
     3cc:	10000348 	.word	0x10000348
     3d0:	10001408 	.word	0x10001408

000003d4 <startup__initialize_fpu>:
startup__initialize_fpu():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:21
  SCB->CPACR |= (0xF << 20); // Set [23:20]
     3d4:	4a03      	ldr	r2, [pc, #12]	; (3e4 <startup__initialize_fpu+0x10>)
     3d6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
     3da:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     3de:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:22
}
     3e2:	4770      	bx	lr
     3e4:	e000ed00 	.word	0xe000ed00

000003e8 <startup__initialize_interrupts>:
__NVIC_SetPriority():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     3e8:	4804      	ldr	r0, [pc, #16]	; (3fc <startup__initialize_interrupts+0x14>)
startup__initialize_interrupts():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:37
  for (int peripheral = first_peripheral; peripheral <= last_peripheral; peripheral++) {
     3ea:	2300      	movs	r3, #0
__NVIC_SetPriority():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3ec:	2120      	movs	r1, #32
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813 (discriminator 3)
     3ee:	18c2      	adds	r2, r0, r3
startup__initialize_interrupts():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:37 (discriminator 3)
     3f0:	3301      	adds	r3, #1
     3f2:	2b29      	cmp	r3, #41	; 0x29
__NVIC_SetPriority():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813 (discriminator 3)
     3f4:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
startup__initialize_interrupts():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:37 (discriminator 3)
     3f8:	d1f9      	bne.n	3ee <startup__initialize_interrupts+0x6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:49
}
     3fa:	4770      	bx	lr
     3fc:	e000e100 	.word	0xe000e100

00000400 <acceleration__init>:
acceleration__init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:14
  acceleration__memory_axis_base = 0x01,
  acceleration__memory_control = 0x2A,
  acceleration__memory_who_am_i = 0x0D,
} acceleration__memory_e;

bool acceleration__init(void) {
     400:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:16
  const uint8_t active_mode_with_100Hz = (1 << 0) | (3 << 3);
  i2c__write_single(acceleration__sensor_bus, acceleration__address, acceleration__memory_control,
     402:	222a      	movs	r2, #42	; 0x2a
     404:	2319      	movs	r3, #25
     406:	2138      	movs	r1, #56	; 0x38
     408:	2002      	movs	r0, #2
     40a:	f003 fe59 	bl	40c0 <i2c__write_single>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:21
                    active_mode_with_100Hz);

  const uint8_t who_am_i_expected_value = 0x2A;
  const uint8_t who_am_i_actual_value =
      i2c__read_single(acceleration__sensor_bus, acceleration__address, acceleration__memory_who_am_i);
     40e:	220d      	movs	r2, #13
     410:	2138      	movs	r1, #56	; 0x38
     412:	2002      	movs	r0, #2
     414:	f003 fe10 	bl	4038 <i2c__read_single>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:24

  return (who_am_i_expected_value == who_am_i_actual_value);
}
     418:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
     41c:	4258      	negs	r0, r3
     41e:	4158      	adcs	r0, r3
     420:	bd08      	pop	{r3, pc}

00000422 <sensors__init>:
sensors__init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sensors/sources/sensors.c:8
#include "acceleration.h"

bool sensors__init(void) {
  bool status = true;

  status &= acceleration__init();
     422:	f7ff bfed 	b.w	400 <acceleration__init>

00000426 <ld_dword>:
ld_dword():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:594
static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
	DWORD rv;

	rv = ptr[3];
	rv = rv << 8 | ptr[2];
     426:	8842      	ldrh	r2, [r0, #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     428:	7843      	ldrb	r3, [r0, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:596
	rv = rv << 8 | ptr[0];
     42a:	7800      	ldrb	r0, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     42c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:598
	return rv;
}
     430:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
     434:	4770      	bx	lr

00000436 <mem_cmp>:
mem_cmp():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:680
}


/* Compare memory block */
static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
{
     436:	b510      	push	{r4, lr}
     438:	4402      	add	r2, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
	int r = 0;

	do {
		r = *d++ - *s++;
     43a:	f810 3b01 	ldrb.w	r3, [r0], #1
     43e:	f811 4b01 	ldrb.w	r4, [r1], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     442:	4290      	cmp	r0, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
		r = *d++ - *s++;
     444:	eba3 0304 	sub.w	r3, r3, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     448:	d001      	beq.n	44e <mem_cmp+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 1)
     44a:	2b00      	cmp	r3, #0
     44c:	d0f5      	beq.n	43a <mem_cmp+0x4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:689

	return r;
}
     44e:	4618      	mov	r0, r3
     450:	bd10      	pop	{r4, pc}

00000452 <get_ldnumber>:
get_ldnumber():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3123
#if FF_STR_VOLUME_ID		/* Find string volume ID */
	const char *sp;
	char c;
#endif

	tt = tp = *path;
     452:	6802      	ldr	r2, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     454:	b14a      	cbz	r2, 46a <get_ldnumber+0x18>
     456:	4613      	mov	r3, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 2)
	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the path */
     458:	f813 1b01 	ldrb.w	r1, [r3], #1
     45c:	291f      	cmp	r1, #31
     45e:	d90b      	bls.n	478 <get_ldnumber+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 1)
     460:	293a      	cmp	r1, #58	; 0x3a
     462:	d1f9      	bne.n	458 <get_ldnumber+0x6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3129

	if (tc == ':') {	/* DOS/Windows style volume ID? */
		i = FF_VOLUMES;
		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
     464:	1c91      	adds	r1, r2, #2
     466:	428b      	cmp	r3, r1
     468:	d002      	beq.n	470 <get_ldnumber+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     46a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3176
	vol = CurrVol;	/* Default drive is current drive */
#else
	vol = 0;		/* Default drive is 0 */
#endif
	return vol;		/* Return the default drive */
}
     46e:	4770      	bx	lr
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3145
		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
     470:	7812      	ldrb	r2, [r2, #0]
     472:	2a30      	cmp	r2, #48	; 0x30
     474:	d1f9      	bne.n	46a <get_ldnumber+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3147
			*path = tt;		/* Snip the drive prefix off */
     476:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3175
	return vol;		/* Return the default drive */
     478:	2000      	movs	r0, #0
     47a:	4770      	bx	lr

0000047c <sync_window.part.6>:
sync_window():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     47c:	b570      	push	{r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     47e:	f100 0638 	add.w	r6, r0, #56	; 0x38
     482:	6b42      	ldr	r2, [r0, #52]	; 0x34
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     484:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     486:	2301      	movs	r3, #1
     488:	4631      	mov	r1, r6
     48a:	7840      	ldrb	r0, [r0, #1]
     48c:	f000 fa5a 	bl	944 <disk_write>
     490:	4605      	mov	r5, r0
     492:	b988      	cbnz	r0, 4b8 <sync_window.part.6+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     494:	6b61      	ldr	r1, [r4, #52]	; 0x34
     496:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     498:	6a22      	ldr	r2, [r4, #32]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1051
			fs->wflag = 0;	/* Clear window dirty flag */
     49a:	70e0      	strb	r0, [r4, #3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     49c:	1acb      	subs	r3, r1, r3
     49e:	4293      	cmp	r3, r2
     4a0:	d208      	bcs.n	4b4 <sync_window.part.6+0x38>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1053
				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
     4a2:	78a3      	ldrb	r3, [r4, #2]
     4a4:	2b02      	cmp	r3, #2
     4a6:	d105      	bne.n	4b4 <sync_window.part.6+0x38>
     4a8:	440a      	add	r2, r1
     4aa:	2301      	movs	r3, #1
     4ac:	4631      	mov	r1, r6
     4ae:	7860      	ldrb	r0, [r4, #1]
     4b0:	f000 fa48 	bl	944 <disk_write>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1060
}
     4b4:	4628      	mov	r0, r5
     4b6:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1056
			res = FR_DISK_ERR;
     4b8:	2501      	movs	r5, #1
     4ba:	e7fb      	b.n	4b4 <sync_window.part.6+0x38>

000004bc <move_window>:
move_window():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     4bc:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     4be:	6b43      	ldr	r3, [r0, #52]	; 0x34
     4c0:	428b      	cmp	r3, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     4c2:	4604      	mov	r4, r0
     4c4:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     4c6:	d019      	beq.n	4fc <move_window+0x40>
sync_window():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     4c8:	78c3      	ldrb	r3, [r0, #3]
     4ca:	b98b      	cbnz	r3, 4f0 <move_window+0x34>
move_window():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     4cc:	2301      	movs	r3, #1
     4ce:	462a      	mov	r2, r5
     4d0:	f104 0138 	add.w	r1, r4, #56	; 0x38
     4d4:	7860      	ldrb	r0, [r4, #1]
     4d6:	f000 fa21 	bl	91c <disk_read>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     4da:	2800      	cmp	r0, #0
     4dc:	bf18      	it	ne
     4de:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     4e2:	4603      	mov	r3, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1081
			fs->winsect = sector;
     4e4:	6365      	str	r5, [r4, #52]	; 0x34
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     4e6:	bf0c      	ite	eq
     4e8:	4603      	moveq	r3, r0
     4ea:	2301      	movne	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
}
     4ec:	4618      	mov	r0, r3
     4ee:	bd38      	pop	{r3, r4, r5, pc}
sync_window():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
     4f0:	f7ff ffc4 	bl	47c <sync_window.part.6>
move_window():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1076
		if (res == FR_OK) {			/* Fill sector window with new data */
     4f4:	4603      	mov	r3, r0
     4f6:	2800      	cmp	r0, #0
     4f8:	d1f8      	bne.n	4ec <move_window+0x30>
     4fa:	e7e7      	b.n	4cc <move_window+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1069
	FRESULT res = FR_OK;
     4fc:	2300      	movs	r3, #0
     4fe:	e7f5      	b.n	4ec <move_window+0x30>

00000500 <check_fs>:
check_fs():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189

static BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,			/* Filesystem object */
	DWORD sect			/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
     500:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3190
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
     502:	2300      	movs	r3, #0
     504:	70c3      	strb	r3, [r0, #3]
     506:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     50a:	6343      	str	r3, [r0, #52]	; 0x34
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189
{
     50c:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     50e:	f7ff ffd5 	bl	4bc <move_window>
     512:	4604      	mov	r4, r0
     514:	bb18      	cbnz	r0, 55e <check_fs+0x5e>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     516:	f895 2237 	ldrb.w	r2, [r5, #567]	; 0x237
     51a:	f895 3236 	ldrb.w	r3, [r5, #566]	; 0x236
     51e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
check_fs():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     522:	f64a 2255 	movw	r2, #43605	; 0xaa55
     526:	4293      	cmp	r3, r2
     528:	d11b      	bne.n	562 <check_fs+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198

#if FF_FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR */
#endif
	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/* Valid JumpBoot code? */
     52a:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
     52e:	2beb      	cmp	r3, #235	; 0xeb
     530:	d003      	beq.n	53a <check_fs+0x3a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198 (discriminator 2)
     532:	3318      	adds	r3, #24
     534:	b2db      	uxtb	r3, r3
     536:	2b01      	cmp	r3, #1
     538:	d815      	bhi.n	566 <check_fs+0x66>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3199
		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
     53a:	2203      	movs	r2, #3
     53c:	490b      	ldr	r1, [pc, #44]	; (56c <check_fs+0x6c>)
     53e:	f105 006e 	add.w	r0, r5, #110	; 0x6e
     542:	f7ff ff78 	bl	436 <mem_cmp>
     546:	b140      	cbz	r0, 55a <check_fs+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3200
		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
     548:	2205      	movs	r2, #5
     54a:	4909      	ldr	r1, [pc, #36]	; (570 <check_fs+0x70>)
     54c:	f105 008a 	add.w	r0, r5, #138	; 0x8a
     550:	f7ff ff71 	bl	436 <mem_cmp>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	}
	return 2;	/* Valid BS but not FAT */
     554:	2800      	cmp	r0, #0
     556:	bf18      	it	ne
     558:	2402      	movne	r4, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3203
}
     55a:	4620      	mov	r0, r4
     55c:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     55e:	2404      	movs	r4, #4
     560:	e7fb      	b.n	55a <check_fs+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     562:	2403      	movs	r4, #3
     564:	e7f9      	b.n	55a <check_fs+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	return 2;	/* Valid BS but not FAT */
     566:	2402      	movs	r4, #2
     568:	e7f7      	b.n	55a <check_fs+0x5a>
     56a:	bf00      	nop
     56c:	0000ab8c 	.word	0x0000ab8c
     570:	0000ab90 	.word	0x0000ab90

00000574 <find_volume>:
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
static FRESULT find_volume (	/* FR_OK(0): successful, !=0: an error occurred */
	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
	BYTE mode					/* !=0: Check write protection for write access */
)
{
     574:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
     578:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     57a:	b085      	sub	sp, #20
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	*rfs = 0;
     57c:	600b      	str	r3, [r1, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     57e:	460f      	mov	r7, r1
     580:	4615      	mov	r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3229
	vol = get_ldnumber(path);
     582:	f7ff ff66 	bl	452 <get_ldnumber>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     586:	1e06      	subs	r6, r0, #0
     588:	f2c0 8139 	blt.w	7fe <find_volume+0x28a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3233

	/* Check if the filesystem object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the filesystem object */
     58c:	4ba4      	ldr	r3, [pc, #656]	; (820 <find_volume+0x2ac>)
     58e:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     592:	2c00      	cmp	r4, #0
     594:	f000 8135 	beq.w	802 <find_volume+0x28e>
lock_fs():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     598:	6920      	ldr	r0, [r4, #16]
     59a:	f000 f99e 	bl	8da <ff_req_grant>
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
#if FF_FS_REENTRANT
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     59e:	2800      	cmp	r0, #0
     5a0:	f000 8131 	beq.w	806 <find_volume+0x292>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3238
#endif
	*rfs = fs;							/* Return pointer to the filesystem object */
     5a4:	603c      	str	r4, [r7, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     5a6:	7823      	ldrb	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3240
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
     5a8:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     5ac:	b16b      	cbz	r3, 5ca <find_volume+0x56>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3242
		stat = disk_status(fs->pdrv);
     5ae:	7860      	ldrb	r0, [r4, #1]
     5b0:	f000 f9af 	bl	912 <disk_status>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3243
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
     5b4:	07c1      	lsls	r1, r0, #31
     5b6:	d408      	bmi.n	5ca <find_volume+0x56>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244
			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
     5b8:	b11d      	cbz	r5, 5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244 (discriminator 1)
     5ba:	f010 0504 	ands.w	r5, r0, #4
     5be:	d000      	beq.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3245
				return FR_WRITE_PROTECTED;
     5c0:	250a      	movs	r5, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3444
#endif
#if FF_FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
     5c2:	4628      	mov	r0, r5
     5c4:	b005      	add	sp, #20
     5c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     5ca:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     5cc:	b2f0      	uxtb	r0, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     5ce:	7023      	strb	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     5d0:	7060      	strb	r0, [r4, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3256
	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
     5d2:	f000 f990 	bl	8f6 <disk_initialize>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3257
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
     5d6:	07c2      	lsls	r2, r0, #31
     5d8:	f100 8117 	bmi.w	80a <find_volume+0x296>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260
	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
     5dc:	b10d      	cbz	r5, 5e2 <find_volume+0x6e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260 (discriminator 1)
     5de:	0743      	lsls	r3, r0, #29
     5e0:	d4ee      	bmi.n	5c0 <find_volume+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3270
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
     5e2:	2100      	movs	r1, #0
     5e4:	4620      	mov	r0, r4
     5e6:	f7ff ff8b 	bl	500 <check_fs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3271
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
     5ea:	2802      	cmp	r0, #2
     5ec:	f040 80ee 	bne.w	7cc <find_volume+0x258>
     5f0:	466f      	mov	r7, sp
     5f2:	f504 71ff 	add.w	r1, r4, #510	; 0x1fe
     5f6:	f204 263e 	addw	r6, r4, #574	; 0x23e
     5fa:	463d      	mov	r5, r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     5fc:	f811 0c04 	ldrb.w	r0, [r1, #-4]
     600:	b110      	cbz	r0, 608 <find_volume+0x94>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 1)
     602:	4608      	mov	r0, r1
     604:	f7ff ff0f 	bl	426 <ld_dword>
     608:	3110      	adds	r1, #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     60a:	428e      	cmp	r6, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 4)
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     60c:	f845 0b04 	str.w	r0, [r5], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     610:	d1f4      	bne.n	5fc <find_volume+0x88>
     612:	2500      	movs	r5, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3279
			bsect = br[i];
     614:	f857 6b04 	ldr.w	r6, [r7], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     618:	2e00      	cmp	r6, #0
     61a:	f000 80ce 	beq.w	7ba <find_volume+0x246>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280 (discriminator 1)
     61e:	4631      	mov	r1, r6
     620:	4620      	mov	r0, r4
     622:	f7ff ff6d 	bl	500 <check_fs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     626:	2801      	cmp	r0, #1
     628:	f200 80c8 	bhi.w	7bc <find_volume+0x248>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     62c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
     630:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
     634:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3352
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
     638:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     63c:	f040 80ca 	bne.w	7d4 <find_volume+0x260>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     640:	f894 304f 	ldrb.w	r3, [r4, #79]	; 0x4f
     644:	f894 504e 	ldrb.w	r5, [r4, #78]	; 0x4e
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
     648:	ea55 2503 	orrs.w	r5, r5, r3, lsl #8
     64c:	d104      	bne.n	658 <find_volume+0xe4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355 (discriminator 1)
     64e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
     652:	f7ff fee8 	bl	426 <ld_dword>
     656:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     658:	f894 1048 	ldrb.w	r1, [r4, #72]	; 0x48
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3356
		fs->fsize = fasize;
     65c:	6225      	str	r5, [r4, #32]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     65e:	1e4b      	subs	r3, r1, #1
     660:	2b01      	cmp	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     662:	70a1      	strb	r1, [r4, #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     664:	f200 80b6 	bhi.w	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3362
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
     668:	f894 9045 	ldrb.w	r9, [r4, #69]	; 0x45
     66c:	fa1f f389 	uxth.w	r3, r9
     670:	8163      	strh	r3, [r4, #10]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
     672:	2b00      	cmp	r3, #0
     674:	f000 80ae 	beq.w	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363 (discriminator 2)
     678:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
     67c:	ea13 0f09 	tst.w	r3, r9
     680:	f040 80a8 	bne.w	7d4 <find_volume+0x260>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     684:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
     688:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
     68c:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
     690:	b23f      	sxth	r7, r7
     692:	fa1f f887 	uxth.w	r8, r7
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     696:	f018 0f0f 	tst.w	r8, #15
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3365
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
     69a:	f8a4 8008 	strh.w	r8, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     69e:	f040 8099 	bne.w	7d4 <find_volume+0x260>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     6a2:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
     6a6:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
     6aa:	ea50 2003 	orrs.w	r0, r0, r3, lsl #8
     6ae:	d103      	bne.n	6b8 <find_volume+0x144>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369 (discriminator 1)
     6b0:	f104 0058 	add.w	r0, r4, #88	; 0x58
     6b4:	f7ff feb7 	bl	426 <ld_dword>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     6b8:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
     6bc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3372
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
     6c0:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     6c4:	f000 8086 	beq.w	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3360
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
     6c8:	fb05 fc01 	mul.w	ip, r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3375
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
     6cc:	eb03 1218 	add.w	r2, r3, r8, lsr #4
     6d0:	4462      	add	r2, ip
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3376
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
     6d2:	4290      	cmp	r0, r2
     6d4:	d37e      	bcc.n	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     6d6:	1a80      	subs	r0, r0, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     6d8:	4548      	cmp	r0, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     6da:	fbb0 f1f9 	udiv	r1, r0, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     6de:	d379      	bcc.n	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     6e0:	4850      	ldr	r0, [pc, #320]	; (824 <find_volume+0x2b0>)
     6e2:	4281      	cmp	r1, r0
     6e4:	d876      	bhi.n	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3381
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
     6e6:	f64f 70f5 	movw	r0, #65525	; 0xfff5
     6ea:	4281      	cmp	r1, r0
     6ec:	f240 808f 	bls.w	80e <find_volume+0x29a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     6f0:	f04f 0903 	mov.w	r9, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     6f4:	3102      	adds	r1, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     6f6:	4433      	add	r3, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     6f8:	4432      	add	r2, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     6fa:	f1b9 0f03 	cmp.w	r9, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     6fe:	61e1      	str	r1, [r4, #28]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3387
		fs->volbase = bsect;							/* Volume start sector */
     700:	6266      	str	r6, [r4, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     702:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     704:	6322      	str	r2, [r4, #48]	; 0x30
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     706:	d169      	bne.n	7dc <find_volume+0x268>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     708:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
     70c:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
     710:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3391
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
     714:	431f      	orrs	r7, r3
     716:	b23f      	sxth	r7, r7
     718:	2f00      	cmp	r7, #0
     71a:	d15b      	bne.n	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3393
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
     71c:	f104 0064 	add.w	r0, r4, #100	; 0x64
     720:	f7ff fe81 	bl	426 <ld_dword>
     724:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3394
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
     726:	0089      	lsls	r1, r1, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3401
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
     728:	f201 11ff 	addw	r1, r1, #511	; 0x1ff
     72c:	ebb5 2f51 	cmp.w	r5, r1, lsr #9
     730:	d350      	bcc.n	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3405
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
     732:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     736:	e9c4 3305 	strd	r3, r3, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     73a:	f1b9 0f03 	cmp.w	r9, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3406
		fs->fsi_flag = 0x80;
     73e:	f04f 0380 	mov.w	r3, #128	; 0x80
     742:	7123      	strb	r3, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     744:	d12f      	bne.n	7a6 <find_volume+0x232>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     746:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
     74a:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
     74e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3409
			&& ld_word(fs->win + BPB_FSInfo32) == 1
     752:	2b01      	cmp	r3, #1
     754:	d127      	bne.n	7a6 <find_volume+0x232>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3410
			&& move_window(fs, bsect + 1) == FR_OK)
     756:	1c71      	adds	r1, r6, #1
     758:	4620      	mov	r0, r4
     75a:	f7ff feaf 	bl	4bc <move_window>
     75e:	bb10      	cbnz	r0, 7a6 <find_volume+0x232>
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     760:	f894 2237 	ldrb.w	r2, [r4, #567]	; 0x237
     764:	f894 3236 	ldrb.w	r3, [r4, #566]	; 0x236
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3412
			fs->fsi_flag = 0;
     768:	7120      	strb	r0, [r4, #4]
ld_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     76a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3413
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
     76e:	f64a 2255 	movw	r2, #43605	; 0xaa55
     772:	4293      	cmp	r3, r2
     774:	d117      	bne.n	7a6 <find_volume+0x232>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3414
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
     776:	f104 0038 	add.w	r0, r4, #56	; 0x38
     77a:	f7ff fe54 	bl	426 <ld_dword>
     77e:	4b2a      	ldr	r3, [pc, #168]	; (828 <find_volume+0x2b4>)
     780:	4298      	cmp	r0, r3
     782:	d110      	bne.n	7a6 <find_volume+0x232>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3415
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
     784:	f504 7007 	add.w	r0, r4, #540	; 0x21c
     788:	f7ff fe4d 	bl	426 <ld_dword>
     78c:	4b27      	ldr	r3, [pc, #156]	; (82c <find_volume+0x2b8>)
     78e:	4298      	cmp	r0, r3
     790:	d109      	bne.n	7a6 <find_volume+0x232>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3418
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
     792:	f504 7008 	add.w	r0, r4, #544	; 0x220
     796:	f7ff fe46 	bl	426 <ld_dword>
     79a:	61a0      	str	r0, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3421
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
     79c:	f504 7009 	add.w	r0, r4, #548	; 0x224
     7a0:	f7ff fe41 	bl	426 <ld_dword>
     7a4:	6160      	str	r0, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     7a6:	4a22      	ldr	r2, [pc, #136]	; (830 <find_volume+0x2bc>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3429
	fs->fs_type = fmt;		/* FAT sub-type */
     7a8:	f884 9000 	strb.w	r9, [r4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     7ac:	8813      	ldrh	r3, [r2, #0]
     7ae:	3301      	adds	r3, #1
     7b0:	b29b      	uxth	r3, r3
     7b2:	8013      	strh	r3, [r2, #0]
     7b4:	80e3      	strh	r3, [r4, #6]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3443
	return FR_OK;
     7b6:	2500      	movs	r5, #0
     7b8:	e703      	b.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     7ba:	2003      	movs	r0, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     7bc:	3501      	adds	r5, #1
     7be:	2d04      	cmp	r5, #4
     7c0:	f47f af28 	bne.w	614 <find_volume+0xa0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3283
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
     7c4:	2804      	cmp	r0, #4
     7c6:	d105      	bne.n	7d4 <find_volume+0x260>
     7c8:	2501      	movs	r5, #1
     7ca:	e6fa      	b.n	5c2 <find_volume+0x4e>
     7cc:	2804      	cmp	r0, #4
     7ce:	d0fb      	beq.n	7c8 <find_volume+0x254>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3284
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
     7d0:	2801      	cmp	r0, #1
     7d2:	d901      	bls.n	7d8 <find_volume+0x264>
     7d4:	250d      	movs	r5, #13
     7d6:	e6f4      	b.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3269
	bsect = 0;
     7d8:	2600      	movs	r6, #0
     7da:	e727      	b.n	62c <find_volume+0xb8>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3396
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
     7dc:	f1b8 0f00 	cmp.w	r8, #0
     7e0:	d0f8      	beq.n	7d4 <find_volume+0x260>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     7e2:	4463      	add	r3, ip
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     7e4:	f1b9 0f02 	cmp.w	r9, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     7e8:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3398
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
     7ea:	ea4f 0341 	mov.w	r3, r1, lsl #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     7ee:	bf1b      	ittet	ne
     7f0:	185b      	addne	r3, r3, r1
     7f2:	f001 0101 	andne.w	r1, r1, #1
     7f6:	4619      	moveq	r1, r3
     7f8:	eb01 0153 	addne.w	r1, r1, r3, lsr #1
     7fc:	e794      	b.n	728 <find_volume+0x1b4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     7fe:	250b      	movs	r5, #11
     800:	e6df      	b.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     802:	250c      	movs	r5, #12
     804:	e6dd      	b.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     806:	250f      	movs	r5, #15
     808:	e6db      	b.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3258
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
     80a:	2503      	movs	r5, #3
     80c:	e6d9      	b.n	5c2 <find_volume+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3382
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
     80e:	f640 79f5 	movw	r9, #4085	; 0xff5
     812:	4549      	cmp	r1, r9
     814:	bf8c      	ite	hi
     816:	f04f 0902 	movhi.w	r9, #2
     81a:	f04f 0901 	movls.w	r9, #1
     81e:	e769      	b.n	6f4 <find_volume+0x180>
     820:	10000348 	.word	0x10000348
     824:	0ffffff5 	.word	0x0ffffff5
     828:	41615252 	.word	0x41615252
     82c:	61417272 	.word	0x61417272
     830:	1000034c 	.word	0x1000034c

00000834 <unlock_fs>:
unlock_fs():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
     834:	b140      	cbz	r0, 848 <unlock_fs+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920 (discriminator 2)
     836:	f1a1 030b 	sub.w	r3, r1, #11
     83a:	2b01      	cmp	r3, #1
     83c:	d904      	bls.n	848 <unlock_fs+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
     83e:	290f      	cmp	r1, #15
     840:	d002      	beq.n	848 <unlock_fs+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:921
		ff_rel_grant(fs->sobj);
     842:	6900      	ldr	r0, [r0, #16]
     844:	f000 b852 	b.w	8ec <ff_rel_grant>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:923
}
     848:	4770      	bx	lr
     84a:	Address 0x000000000000084a is out of bounds.


0000084c <f_mount>:
f_mount():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
     84c:	b5f0      	push	{r4, r5, r6, r7, lr}
     84e:	b085      	sub	sp, #20
     850:	e9cd 1000 	strd	r1, r0, [sp]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
     854:	a803      	add	r0, sp, #12
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
{
     856:	4614      	mov	r4, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3506
	const TCHAR *rp = path;
     858:	9103      	str	r1, [sp, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	vol = get_ldnumber(&rp);
     85a:	f7ff fdfa 	bl	452 <get_ldnumber>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
     85e:	1e05      	subs	r5, r0, #0
     860:	db28      	blt.n	8b4 <f_mount+0x68>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3512
	cfs = FatFs[vol];					/* Pointer to fs object */
     862:	4f15      	ldr	r7, [pc, #84]	; (8b8 <f_mount+0x6c>)
     864:	f857 6025 	ldr.w	r6, [r7, r5, lsl #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3514

	if (cfs) {
     868:	b14e      	cbz	r6, 87e <f_mount+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3519
#if FF_FS_LOCK != 0
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
     86a:	6930      	ldr	r0, [r6, #16]
     86c:	f000 f830 	bl	8d0 <ff_del_syncobj>
     870:	b918      	cbnz	r0, 87a <f_mount+0x2e>
     872:	2402      	movs	r4, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3536 (discriminator 1)

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
     874:	4620      	mov	r0, r4
     876:	b005      	add	sp, #20
     878:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3521
		cfs->fs_type = 0;				/* Clear old fs object */
     87a:	2300      	movs	r3, #0
     87c:	7033      	strb	r3, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3524
	if (fs) {
     87e:	9901      	ldr	r1, [sp, #4]
     880:	b979      	cbnz	r1, 8a2 <f_mount+0x56>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3530
	FatFs[vol] = fs;					/* Register new fs object */
     882:	9b01      	ldr	r3, [sp, #4]
     884:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3532
	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
     888:	2c00      	cmp	r4, #0
     88a:	d0f3      	beq.n	874 <f_mount+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3534
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
     88c:	a901      	add	r1, sp, #4
     88e:	2200      	movs	r2, #0
     890:	4668      	mov	r0, sp
     892:	f7ff fe6f 	bl	574 <find_volume>
     896:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3535
	LEAVE_FF(fs, res);
     898:	4601      	mov	r1, r0
     89a:	9801      	ldr	r0, [sp, #4]
     89c:	f7ff ffca 	bl	834 <unlock_fs>
     8a0:	e7e8      	b.n	874 <f_mount+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3525
		fs->fs_type = 0;				/* Clear new fs object */
     8a2:	2300      	movs	r3, #0
     8a4:	f801 3b10 	strb.w	r3, [r1], #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3527
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
     8a8:	b2e8      	uxtb	r0, r5
     8aa:	f000 f807 	bl	8bc <ff_cre_syncobj>
     8ae:	2800      	cmp	r0, #0
     8b0:	d1e7      	bne.n	882 <f_mount+0x36>
     8b2:	e7de      	b.n	872 <f_mount+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
     8b4:	240b      	movs	r4, #11
     8b6:	e7dd      	b.n	874 <f_mount+0x28>
     8b8:	10000348 	.word	0x10000348

000008bc <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:55

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	FF_SYNC_t* sobj		/* Pointer to return the created sync object */
)
{
     8bc:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:71
//	OS_ERR err;
//	*sobj = OSMutexCreate(0, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	*sobj = xSemaphoreCreateMutex();
     8be:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:55
{
     8c0:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:71
	*sobj = xSemaphoreCreateMutex();
     8c2:	f001 fe74 	bl	25ae <xQueueCreateMutex>
     8c6:	6020      	str	r0, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:77
	return (int)(*sobj != NULL);

	/* CMSIS-RTOS */
//	*sobj = osMutexCreate(&Mutex[vol]);
//	return (int)(*sobj != NULL);
}
     8c8:	3000      	adds	r0, #0
     8ca:	bf18      	it	ne
     8cc:	2001      	movne	r0, #1
     8ce:	bd10      	pop	{r4, pc}

000008d0 <ff_del_syncobj>:
ff_del_syncobj():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:91
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to an error */
	FF_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
     8d0:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:104
//	OS_ERR err;
//	OSMutexDel(sobj, OS_DEL_ALWAYS, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
    vSemaphoreDelete(sobj);
     8d2:	f002 f8db 	bl	2a8c <vQueueDelete>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:109
	return 1;

	/* CMSIS-RTOS */
//	return (int)(osMutexDelete(sobj) == osOK);
}
     8d6:	2001      	movs	r0, #1
     8d8:	bd08      	pop	{r3, pc}

000008da <ff_req_grant>:
ff_req_grant():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:122
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	FF_SYNC_t sobj	/* Sync object to wait */
)
{
     8da:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:135
//	OS_ERR err;
//	OSMutexPend(sobj, FF_FS_TIMEOUT, &err));
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	return (int)(xSemaphoreTake(sobj, FF_FS_TIMEOUT) == pdTRUE);
     8dc:	f640 31b8 	movw	r1, #3000	; 0xbb8
     8e0:	f001 ffc6 	bl	2870 <xQueueSemaphoreTake>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:139

	/* CMSIS-RTOS */
//	return (int)(osMutexWait(sobj, FF_FS_TIMEOUT) == osOK);
}
     8e4:	1e43      	subs	r3, r0, #1
     8e6:	4258      	negs	r0, r3
     8e8:	4158      	adcs	r0, r3
     8ea:	bd08      	pop	{r3, pc}

000008ec <ff_rel_grant>:
ff_rel_grant():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:162

	/* uC/OS-II */
//	OSMutexPost(sobj);

	/* FreeRTOS */
	xSemaphoreGive(sobj);
     8ec:	2300      	movs	r3, #0
     8ee:	461a      	mov	r2, r3
     8f0:	4619      	mov	r1, r3
     8f2:	f001 bd99 	b.w	2428 <xQueueGenericSend>

000008f6 <disk_initialize>:
disk_initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:19
 */
typedef enum {
  DRIVE__SD_CARD = 0,
} drive_e;

DSTATUS disk_initialize(BYTE drv) {
     8f6:	b510      	push	{r4, lr}
     8f8:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:22
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
     8fa:	f000 fe7b 	bl	15f4 <spi2_mutex__acquire>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:24
  {
    switch (drv) {
     8fe:	b934      	cbnz	r4, 90e <disk_initialize+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:26
    case DRIVE__SD_CARD:
      status = sd_card__initialize();
     900:	f000 f8fa 	bl	af8 <sd_card__initialize>
     904:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:33
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
     906:	f000 fe8f 	bl	1628 <spi2_mutex__release>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:36

  return status;
}
     90a:	4620      	mov	r0, r4
     90c:	bd10      	pop	{r4, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:29
      status = RES_PARERR;
     90e:	2404      	movs	r4, #4
     910:	e7f9      	b.n	906 <disk_initialize+0x10>

00000912 <disk_status>:
disk_status():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:43
DSTATUS disk_status(BYTE drv) {
  DSTATUS status = RES_PARERR;

  // No mutex needed here
  {
    switch (drv) {
     912:	b908      	cbnz	r0, 918 <disk_status+0x6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:45
    case DRIVE__SD_CARD:
      status = sd_card__status();
     914:	f000 b98e 	b.w	c34 <sd_card__status>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:54
      break;
    }
  }

  return status;
}
     918:	2004      	movs	r0, #4
     91a:	4770      	bx	lr

0000091c <disk_read>:
disk_read():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:56

DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, UINT count) {
     91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     91e:	4607      	mov	r7, r0
     920:	460c      	mov	r4, r1
     922:	4615      	mov	r5, r2
     924:	461e      	mov	r6, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:59
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
     926:	f000 fe65 	bl	15f4 <spi2_mutex__acquire>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:61
  {
    switch (drv) {
     92a:	b94f      	cbnz	r7, 940 <disk_read+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:63
    case DRIVE__SD_CARD:
      status = sd_card__read(buff, sector, count);
     92c:	4620      	mov	r0, r4
     92e:	b2f2      	uxtb	r2, r6
     930:	4629      	mov	r1, r5
     932:	f000 f987 	bl	c44 <sd_card__read>
     936:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:70
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
     938:	f000 fe76 	bl	1628 <spi2_mutex__release>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:73

  return status;
}
     93c:	4620      	mov	r0, r4
     93e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:66
      status = RES_PARERR;
     940:	2404      	movs	r4, #4
     942:	e7f9      	b.n	938 <disk_read+0x1c>

00000944 <disk_write>:
disk_write():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:75

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, UINT count) {
     944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     946:	4607      	mov	r7, r0
     948:	460c      	mov	r4, r1
     94a:	4615      	mov	r5, r2
     94c:	461e      	mov	r6, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:78
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
     94e:	f000 fe51 	bl	15f4 <spi2_mutex__acquire>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:80
  {
    switch (drv) {
     952:	b94f      	cbnz	r7, 968 <disk_write+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:82
    case DRIVE__SD_CARD:
      status = sd_card__write(buff, sector, count);
     954:	4620      	mov	r0, r4
     956:	b2f2      	uxtb	r2, r6
     958:	4629      	mov	r1, r5
     95a:	f000 f9b9 	bl	cd0 <sd_card__write>
     95e:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:89
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
     960:	f000 fe62 	bl	1628 <spi2_mutex__release>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:92

  return status;
}
     964:	4620      	mov	r0, r4
     966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:85
      status = RES_PARERR;
     968:	2404      	movs	r4, #4
     96a:	e7f9      	b.n	960 <disk_write+0x1c>

0000096c <sd_card__wait_for_ready>:
sd_card__wait_for_ready():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:56
#endif

static volatile DSTATUS g_disk_status = STA_NOINIT; ///< Disk status
static BYTE g_card_type;                            ///< Card type flags

static BYTE sd_card__wait_for_ready(void) {
     96c:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:60
  BYTE res;

  /* Wait for ready in timeout of 500ms */
  const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 500;
     96e:	f000 feab 	bl	16c8 <sys_time__get_uptime_ms>
     972:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:61
  SD_CARD__RECEIVE_BYTE();
     976:	20ff      	movs	r0, #255	; 0xff
     978:	f003 fc86 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)

  do {
    res = SD_CARD__RECEIVE_BYTE();
     97c:	20ff      	movs	r0, #255	; 0xff
     97e:	f003 fc83 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
     982:	28ff      	cmp	r0, #255	; 0xff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)
    res = SD_CARD__RECEIVE_BYTE();
     984:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
     986:	d003      	beq.n	990 <sd_card__wait_for_ready+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 1)
     988:	f000 fe9e 	bl	16c8 <sys_time__get_uptime_ms>
     98c:	4285      	cmp	r5, r0
     98e:	d8f5      	bhi.n	97c <sd_card__wait_for_ready+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:68

  return res;
}
     990:	4620      	mov	r0, r4
     992:	bd38      	pop	{r3, r4, r5, pc}

00000994 <sd_card__power_off>:
sd_card__power_off():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:74

static void sd_card__power_on(void) {
  // Power on the SD-Card Socket if hardware allows
}

static void sd_card__power_off(void) {
     994:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:75
  SD_CARD__SELECT();
     996:	f003 f87f 	bl	3a98 <board_io__sd_card_cs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:76
  sd_card__wait_for_ready();
     99a:	f7ff ffe7 	bl	96c <sd_card__wait_for_ready>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:77
  SD_CARD__DESELECT();
     99e:	f003 f883 	bl	3aa8 <board_io__sd_card_ds>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:80

  // Power off the SD-Card Socket if hardware allows
  g_disk_status |= STA_NOINIT; // Set STA_NOINIT
     9a2:	4a03      	ldr	r2, [pc, #12]	; (9b0 <sd_card__power_off+0x1c>)
     9a4:	7813      	ldrb	r3, [r2, #0]
     9a6:	f043 0301 	orr.w	r3, r3, #1
     9aa:	7013      	strb	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:81
}
     9ac:	bd08      	pop	{r3, pc}
     9ae:	bf00      	nop
     9b0:	10000008 	.word	0x10000008

000009b4 <sd_card__transmit_datablock>:
sd_card__transmit_datablock():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:129
}

#if SD_CARD__READONLY == 0
static int sd_card__transmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
                                       BYTE token        /* Data/Stop token */
) {
     9b4:	b538      	push	{r3, r4, r5, lr}
     9b6:	4605      	mov	r5, r0
     9b8:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:132
  BYTE resp;

  if (sd_card__wait_for_ready() != 0xFF) {
     9ba:	f7ff ffd7 	bl	96c <sd_card__wait_for_ready>
     9be:	28ff      	cmp	r0, #255	; 0xff
     9c0:	d121      	bne.n	a06 <sd_card__transmit_datablock+0x52>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:136
    return 0;
  }

  SD_CARD__TRANSMIT_BYTE(token);
     9c2:	4620      	mov	r0, r4
     9c4:	f003 fc60 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:138
  /* Xmit data token */
  if (token != 0xFD) { /* Is data token */
     9c8:	2cfd      	cmp	r4, #253	; 0xfd
     9ca:	d01e      	beq.n	a0a <sd_card__transmit_datablock+0x56>
     9cc:	1cac      	adds	r4, r5, #2
     9ce:	f205 2502 	addw	r5, r5, #514	; 0x202
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:144 (discriminator 1)
#if OPTIMIZE_SSP_SPI_WRITE
    SD_CARD__WRITE_BLOCK(buff, 512);
#else
    unsigned char wc = 0;
    do { /* Xmit the 512 byte data block to MMC */
      SD_CARD__TRANSMIT_BYTE(*buff++);
     9d2:	f814 0c02 	ldrb.w	r0, [r4, #-2]
     9d6:	f003 fc57 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:145 (discriminator 1)
      SD_CARD__TRANSMIT_BYTE(*buff++);
     9da:	3402      	adds	r4, #2
     9dc:	f814 0c03 	ldrb.w	r0, [r4, #-3]
     9e0:	f003 fc52 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:146 (discriminator 1)
    } while (--wc);
     9e4:	42ac      	cmp	r4, r5
     9e6:	d1f4      	bne.n	9d2 <sd_card__transmit_datablock+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:149
#endif

    SD_CARD__TRANSMIT_BYTE(0xFF);
     9e8:	20ff      	movs	r0, #255	; 0xff
     9ea:	f003 fc4d 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:151
    /* CRC (Dummy) */
    SD_CARD__TRANSMIT_BYTE(0xFF);
     9ee:	20ff      	movs	r0, #255	; 0xff
     9f0:	f003 fc4a 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:152
    resp = SD_CARD__RECEIVE_BYTE(); /* Reveive data response */
     9f4:	20ff      	movs	r0, #255	; 0xff
     9f6:	f003 fc47 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:153
    if ((resp & 0x1F) != 0x05) {      /* If not accepted, return with error */
     9fa:	f000 001f 	and.w	r0, r0, #31
     9fe:	1f43      	subs	r3, r0, #5
     a00:	4258      	negs	r0, r3
     a02:	4158      	adcs	r0, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:159
      return 0;
    }
  }

  return 1;
}
     a04:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:133
    return 0;
     a06:	2000      	movs	r0, #0
     a08:	e7fc      	b.n	a04 <sd_card__transmit_datablock+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:158
  return 1;
     a0a:	2001      	movs	r0, #1
     a0c:	e7fa      	b.n	a04 <sd_card__transmit_datablock+0x50>

00000a0e <sd_card__send_command>:
sd_card__send_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
#endif /* SD_CARD__READONLY */

static BYTE sd_card__send_command(BYTE cmd, /* Command byte */
                                  DWORD arg /* Argument */
) {
     a0e:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  BYTE n, res;

  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
     a10:	0602      	lsls	r2, r0, #24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
) {
     a12:	4604      	mov	r4, r0
     a14:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
     a16:	d507      	bpl.n	a28 <sd_card__send_command+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:169
    cmd &= 0x7F;
    res = sd_card__send_command(CMD55, 0);
     a18:	2100      	movs	r1, #0
     a1a:	2077      	movs	r0, #119	; 0x77
     a1c:	f7ff fff7 	bl	a0e <sd_card__send_command>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:170
    if (res > 1) {
     a20:	2801      	cmp	r0, #1
     a22:	d831      	bhi.n	a88 <sd_card__send_command+0x7a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:168
    cmd &= 0x7F;
     a24:	f004 047f 	and.w	r4, r4, #127	; 0x7f
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:177
      return res;
    }
  }

  /* Select the card and wait for ready */
  SD_CARD__DESELECT();
     a28:	f003 f83e 	bl	3aa8 <board_io__sd_card_ds>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:178
  SD_CARD__SELECT(); // Wait for card ready
     a2c:	f003 f834 	bl	3a98 <board_io__sd_card_cs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:180

  if (sd_card__wait_for_ready() != 0xFF) {
     a30:	f7ff ff9c 	bl	96c <sd_card__wait_for_ready>
     a34:	28ff      	cmp	r0, #255	; 0xff
     a36:	d12b      	bne.n	a90 <sd_card__send_command+0x82>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:185
    SD_CARD__DEBUG_PRINTF("ERROR: sd_card__wait_for_ready() did not return 0xFF\n");
    return 0xFF;
  }

  if (cmd == CMD0) {
     a38:	2c40      	cmp	r4, #64	; 0x40
     a3a:	d027      	beq.n	a8c <sd_card__send_command+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x95; /* Valid CRC for CMD0(0) */
  }
  else if (cmd == CMD8) {
    n = 0x87; /* Valid CRC for CMD8(0x1AA) */
  } else {
    n = 0x01; /* Dummy CRC + Stop */
     a3c:	2c48      	cmp	r4, #72	; 0x48
     a3e:	bf0c      	ite	eq
     a40:	2387      	moveq	r3, #135	; 0x87
     a42:	2301      	movne	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  }

  /* Start + Command index + 32-bit arguments */
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
     a44:	0e2a      	lsrs	r2, r5, #24
     a46:	f88d 2001 	strb.w	r2, [sp, #1]
     a4a:	0c2a      	lsrs	r2, r5, #16
     a4c:	f88d 2002 	strb.w	r2, [sp, #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
     a50:	2106      	movs	r1, #6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
     a52:	0a2a      	lsrs	r2, r5, #8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
     a54:	4668      	mov	r0, sp
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
     a56:	f88d 4000 	strb.w	r4, [sp]
     a5a:	f88d 2003 	strb.w	r2, [sp, #3]
     a5e:	f88d 5004 	strb.w	r5, [sp, #4]
     a62:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
     a66:	f003 fc19 	bl	429c <ssp2__dma_write_block>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:199

  /* Receive command response */
  if (cmd == CMD12) {
     a6a:	2c4c      	cmp	r4, #76	; 0x4c
     a6c:	d102      	bne.n	a74 <sd_card__send_command+0x66>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:200
    SD_CARD__RECEIVE_BYTE(); /* Skip a stuff byte when stop reading */
     a6e:	20ff      	movs	r0, #255	; 0xff
     a70:	f003 fc0a 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x01; /* Dummy CRC + Stop */
     a74:	240a      	movs	r4, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:205
  }
  
  n = 10; /* Wait for a valid response in timeout of 10 attempts */
  do {
    res = SD_CARD__RECEIVE_BYTE();
     a76:	20ff      	movs	r0, #255	; 0xff
     a78:	f003 fc06 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:206
  } while ((res & 0x80) && --n);
     a7c:	0603      	lsls	r3, r0, #24
     a7e:	d503      	bpl.n	a88 <sd_card__send_command+0x7a>
     a80:	3c01      	subs	r4, #1
     a82:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
     a86:	d1f6      	bne.n	a76 <sd_card__send_command+0x68>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:213
  if (n == 0) {
    SD_CARD__DEBUG_PRINTF("Timeout during card read\n");
  }

  return res; /* Return with the response value */
}
     a88:	b003      	add	sp, #12
     a8a:	bd30      	pop	{r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:186
    n = 0x95; /* Valid CRC for CMD0(0) */
     a8c:	2395      	movs	r3, #149	; 0x95
     a8e:	e7d9      	b.n	a44 <sd_card__send_command+0x36>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:182
    return 0xFF;
     a90:	20ff      	movs	r0, #255	; 0xff
     a92:	e7f9      	b.n	a88 <sd_card__send_command+0x7a>

00000a94 <sd_card__read_datablock>:
sd_card__read_datablock():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:85
) {
     a94:	b570      	push	{r4, r5, r6, lr}
     a96:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:87
  const uint32_t time_now = SD_CARD__PLATFORM_GET_MS();
     a98:	f000 fe16 	bl	16c8 <sys_time__get_uptime_ms>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:88
  const uint32_t timeout = time_now + 100;
     a9c:	f100 0664 	add.w	r6, r0, #100	; 0x64
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:92
    token = SD_CARD__RECEIVE_BYTE();
     aa0:	20ff      	movs	r0, #255	; 0xff
     aa2:	f003 fbf1 	bl	4288 <ssp2__exchange_byte>
     aa6:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:95
    if (SD_CARD__PLATFORM_GET_MS() > timeout) {
     aa8:	f000 fe0e 	bl	16c8 <sys_time__get_uptime_ms>
     aac:	4286      	cmp	r6, r0
     aae:	d301      	bcc.n	ab4 <sd_card__read_datablock+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:98
  } while (token == 0xFF);
     ab0:	2cff      	cmp	r4, #255	; 0xff
     ab2:	d0f5      	beq.n	aa0 <sd_card__read_datablock+0xc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:100
  if (token != 0xFE) {
     ab4:	2cfe      	cmp	r4, #254	; 0xfe
     ab6:	d10c      	bne.n	ad2 <sd_card__read_datablock+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:109
    SD_CARD__READ_BLOCK(buff, 512);
     ab8:	f44f 7100 	mov.w	r1, #512	; 0x200
     abc:	4628      	mov	r0, r5
     abe:	f003 fbf0 	bl	42a2 <ssp2__dma_read_block>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:120
  SD_CARD__RECEIVE_BYTE(); /* Discard CRC */
     ac2:	20ff      	movs	r0, #255	; 0xff
     ac4:	f003 fbe0 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:121
  SD_CARD__RECEIVE_BYTE();
     ac8:	20ff      	movs	r0, #255	; 0xff
     aca:	f003 fbdd 	bl	4288 <ssp2__exchange_byte>
     ace:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:124
}
     ad0:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:102
    return 0; /* If not valid data token, return with error */
     ad2:	2000      	movs	r0, #0
     ad4:	e7fc      	b.n	ad0 <sd_card__read_datablock+0x3c>
     ad6:	Address 0x0000000000000ad6 is out of bounds.


00000ad8 <sd_card__update_status>:
sd_card__update_status():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:527

  return res;
}
#endif /* SD_CARD__USE_IOCTL != 0 */

void sd_card__update_status(void) {
     ad8:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:528
  BYTE s = g_disk_status;
     ada:	4d06      	ldr	r5, [pc, #24]	; (af4 <sd_card__update_status+0x1c>)
     adc:	782c      	ldrb	r4, [r5, #0]
     ade:	b2e4      	uxtb	r4, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:530

  if (SD_CARD__IS_PRESENT()) {
     ae0:	f002 ffea 	bl	3ab8 <board_io__sd_card_is_present>
     ae4:	b118      	cbz	r0, aee <sd_card__update_status+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:531
    s &= ~STA_NODISK;
     ae6:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:536
  } else {
    s |= (STA_NODISK | STA_NOINIT);
  }

  g_disk_status = s;
     aea:	702c      	strb	r4, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:537
}
     aec:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:533
    s |= (STA_NODISK | STA_NOINIT);
     aee:	f044 0403 	orr.w	r4, r4, #3
     af2:	e7fa      	b.n	aea <sd_card__update_status+0x12>
     af4:	10000008 	.word	0x10000008

00000af8 <sd_card__initialize>:
sd_card__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:215
DSTATUS sd_card__initialize() {
     af8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:218
  sd_card__update_status();
     afc:	f7ff ffec 	bl	ad8 <sd_card__update_status>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:220
  if (g_disk_status & STA_NODISK) {
     b00:	4b4a      	ldr	r3, [pc, #296]	; (c2c <sd_card__initialize+0x134>)
     b02:	781a      	ldrb	r2, [r3, #0]
     b04:	f012 0f02 	tst.w	r2, #2
     b08:	461e      	mov	r6, r3
     b0a:	d004      	beq.n	b16 <sd_card__initialize+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:221
    return g_disk_status; /* No card in the socket */
     b0c:	7818      	ldrb	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
     b0e:	b2c0      	uxtb	r0, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:293
}
     b10:	b002      	add	sp, #8
     b12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:225
  SD_CARD__SET_SLOW_SPEED();
     b16:	20c8      	movs	r0, #200	; 0xc8
     b18:	f003 fb7e 	bl	4218 <ssp2__set_max_clock>
     b1c:	250a      	movs	r5, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:227 (discriminator 3)
    SD_CARD__RECEIVE_BYTE(); /* 80 dummy clocks */
     b1e:	20ff      	movs	r0, #255	; 0xff
     b20:	3d01      	subs	r5, #1
     b22:	f003 fbb1 	bl	4288 <ssp2__exchange_byte>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:226 (discriminator 3)
  for (n = 10; n; n--) {
     b26:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
     b2a:	d1f8      	bne.n	b1e <sd_card__initialize+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:230
  SD_CARD__SELECT();
     b2c:	f002 ffb4 	bl	3a98 <board_io__sd_card_cs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:233
  if (sd_card__send_command(CMD0, 0) == 1) { /* Enter Idle state */
     b30:	4629      	mov	r1, r5
     b32:	2040      	movs	r0, #64	; 0x40
     b34:	f7ff ff6b 	bl	a0e <sd_card__send_command>
     b38:	2801      	cmp	r0, #1
     b3a:	4604      	mov	r4, r0
     b3c:	d171      	bne.n	c22 <sd_card__initialize+0x12a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
     b3e:	f000 fdc3 	bl	16c8 <sys_time__get_uptime_ms>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
     b42:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
     b46:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
     b4a:	2048      	movs	r0, #72	; 0x48
     b4c:	f7ff ff5f 	bl	a0e <sd_card__send_command>
     b50:	2801      	cmp	r0, #1
     b52:	d148      	bne.n	be6 <sd_card__initialize+0xee>
     b54:	ad01      	add	r5, sp, #4
     b56:	46a8      	mov	r8, r5
     b58:	2404      	movs	r4, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
     b5a:	20ff      	movs	r0, #255	; 0xff
     b5c:	f003 fb94 	bl	4288 <ssp2__exchange_byte>
     b60:	3c01      	subs	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
     b62:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
     b66:	f808 0b01 	strb.w	r0, [r8], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
     b6a:	d1f6      	bne.n	b5a <sd_card__initialize+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240
      if (ocr[2] == 0x01 && ocr[3] == 0xAA) { /* The card can work at vdd range of 2.7-3.6V */
     b6c:	f89d 3006 	ldrb.w	r3, [sp, #6]
     b70:	2b01      	cmp	r3, #1
     b72:	d156      	bne.n	c22 <sd_card__initialize+0x12a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240 (discriminator 1)
     b74:	f89d 3007 	ldrb.w	r3, [sp, #7]
     b78:	2baa      	cmp	r3, #170	; 0xaa
     b7a:	d152      	bne.n	c22 <sd_card__initialize+0x12a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 2)
        while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(ACMD41, 1UL << 30)) {
     b7c:	f000 fda4 	bl	16c8 <sys_time__get_uptime_ms>
     b80:	4287      	cmp	r7, r0
     b82:	d906      	bls.n	b92 <sd_card__initialize+0x9a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 1)
     b84:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
     b88:	20e9      	movs	r0, #233	; 0xe9
     b8a:	f7ff ff40 	bl	a0e <sd_card__send_command>
     b8e:	2800      	cmp	r0, #0
     b90:	d1f4      	bne.n	b7c <sd_card__initialize+0x84>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
     b92:	f000 fd99 	bl	16c8 <sys_time__get_uptime_ms>
     b96:	4287      	cmp	r7, r0
     b98:	d943      	bls.n	c22 <sd_card__initialize+0x12a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:248 (discriminator 1)
            sd_card__send_command(CMD58, 0) == 0) { /* Check CCS bit in the OCR */
     b9a:	2100      	movs	r1, #0
     b9c:	207a      	movs	r0, #122	; 0x7a
     b9e:	f7ff ff36 	bl	a0e <sd_card__send_command>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247 (discriminator 1)
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
     ba2:	2800      	cmp	r0, #0
     ba4:	d13d      	bne.n	c22 <sd_card__initialize+0x12a>
     ba6:	2404      	movs	r4, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
     ba8:	20ff      	movs	r0, #255	; 0xff
     baa:	f003 fb6d 	bl	4288 <ssp2__exchange_byte>
     bae:	3c01      	subs	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
     bb0:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
     bb4:	f805 0b01 	strb.w	r0, [r5], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
     bb8:	d1f6      	bne.n	ba8 <sd_card__initialize+0xb0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:252
          ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
     bba:	f89d 3004 	ldrb.w	r3, [sp, #4]
     bbe:	f013 0f40 	tst.w	r3, #64	; 0x40
     bc2:	bf14      	ite	ne
     bc4:	240c      	movne	r4, #12
     bc6:	2404      	moveq	r4, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:282
  g_card_type = ty;
     bc8:	4b19      	ldr	r3, [pc, #100]	; (c30 <sd_card__initialize+0x138>)
     bca:	701c      	strb	r4, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:283
  SD_CARD__DESELECT();
     bcc:	f002 ff6c 	bl	3aa8 <board_io__sd_card_ds>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:285
  if (ty) {                       /* Initialization succeded */
     bd0:	b34c      	cbz	r4, c26 <sd_card__initialize+0x12e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
     bd2:	7833      	ldrb	r3, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
     bd4:	f645 50c0 	movw	r0, #24000	; 0x5dc0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
     bd8:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
     bdc:	7033      	strb	r3, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
     bde:	f003 fb1b 	bl	4218 <ssp2__set_max_clock>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
     be2:	7830      	ldrb	r0, [r6, #0]
     be4:	e793      	b.n	b0e <sd_card__initialize+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:260
      if (sd_card__send_command(ACMD41, 0) <= 1) {
     be6:	4629      	mov	r1, r5
     be8:	20e9      	movs	r0, #233	; 0xe9
     bea:	f7ff ff10 	bl	a0e <sd_card__send_command>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:265
        cmd = CMD1; /* MMC */
     bee:	2802      	cmp	r0, #2
     bf0:	bf36      	itet	cc
     bf2:	25e9      	movcc	r5, #233	; 0xe9
     bf4:	2541      	movcs	r5, #65	; 0x41
     bf6:	2402      	movcc	r4, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 2)
      while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(cmd, 0)) {
     bf8:	f000 fd66 	bl	16c8 <sys_time__get_uptime_ms>
     bfc:	4287      	cmp	r7, r0
     bfe:	d905      	bls.n	c0c <sd_card__initialize+0x114>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 1)
     c00:	2100      	movs	r1, #0
     c02:	4628      	mov	r0, r5
     c04:	f7ff ff03 	bl	a0e <sd_card__send_command>
     c08:	2800      	cmp	r0, #0
     c0a:	d1f5      	bne.n	bf8 <sd_card__initialize+0x100>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
     c0c:	f000 fd5c 	bl	16c8 <sys_time__get_uptime_ms>
     c10:	4287      	cmp	r7, r0
     c12:	d806      	bhi.n	c22 <sd_card__initialize+0x12a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:272 (discriminator 1)
          sd_card__send_command(CMD16, 512) != 0) /* Set R/W block length to 512 */
     c14:	f44f 7100 	mov.w	r1, #512	; 0x200
     c18:	2050      	movs	r0, #80	; 0x50
     c1a:	f7ff fef8 	bl	a0e <sd_card__send_command>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271 (discriminator 1)
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
     c1e:	2800      	cmp	r0, #0
     c20:	d0d2      	beq.n	bc8 <sd_card__initialize+0xd0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:275
        ty = 0;
     c22:	2400      	movs	r4, #0
     c24:	e7d0      	b.n	bc8 <sd_card__initialize+0xd0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:289
    sd_card__power_off();
     c26:	f7ff feb5 	bl	994 <sd_card__power_off>
     c2a:	e7da      	b.n	be2 <sd_card__initialize+0xea>
     c2c:	10000008 	.word	0x10000008
     c30:	1000034e 	.word	0x1000034e

00000c34 <sd_card__status>:
sd_card__status():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:295
DSTATUS sd_card__status() {
     c34:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:296
  sd_card__update_status();
     c36:	f7ff ff4f 	bl	ad8 <sd_card__update_status>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:297
  return g_disk_status;
     c3a:	4b01      	ldr	r3, [pc, #4]	; (c40 <sd_card__status+0xc>)
     c3c:	7818      	ldrb	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:298
}
     c3e:	bd08      	pop	{r3, pc}
     c40:	10000008 	.word	0x10000008

00000c44 <sd_card__read>:
sd_card__read():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:303
) {
     c44:	b570      	push	{r4, r5, r6, lr}
     c46:	4614      	mov	r4, r2
     c48:	4605      	mov	r5, r0
     c4a:	460e      	mov	r6, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:304
  sd_card__update_status();
     c4c:	f7ff ff44 	bl	ad8 <sd_card__update_status>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:306
  if (!count) {
     c50:	2c00      	cmp	r4, #0
     c52:	d035      	beq.n	cc0 <sd_card__read+0x7c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:310
  if (g_disk_status & STA_NOINIT) {
     c54:	4b1c      	ldr	r3, [pc, #112]	; (cc8 <sd_card__read+0x84>)
     c56:	781b      	ldrb	r3, [r3, #0]
     c58:	07da      	lsls	r2, r3, #31
     c5a:	d433      	bmi.n	cc4 <sd_card__read+0x80>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:315
  SD_CARD__SELECT();
     c5c:	f002 ff1c 	bl	3a98 <board_io__sd_card_cs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:316
  if (!(g_card_type & CT_BLOCK)) {
     c60:	4b1a      	ldr	r3, [pc, #104]	; (ccc <sd_card__read+0x88>)
     c62:	781b      	ldrb	r3, [r3, #0]
     c64:	071b      	lsls	r3, r3, #28
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:317
    sector *= 512; /* Convert to byte address if needed */
     c66:	bf58      	it	pl
     c68:	0276      	lslpl	r6, r6, #9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
     c6a:	2c01      	cmp	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
     c6c:	4631      	mov	r1, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
     c6e:	d111      	bne.n	c94 <sd_card__read+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
     c70:	2051      	movs	r0, #81	; 0x51
     c72:	f7ff fecc 	bl	a0e <sd_card__send_command>
     c76:	b938      	cbnz	r0, c88 <sd_card__read+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:322
      if (sd_card__read_datablock(buff, 512)) {
     c78:	f44f 7100 	mov.w	r1, #512	; 0x200
     c7c:	4628      	mov	r0, r5
     c7e:	f7ff ff09 	bl	a94 <sd_card__read_datablock>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:323
        count = 0;
     c82:	fab0 f480 	clz	r4, r0
     c86:	0964      	lsrs	r4, r4, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:340
  SD_CARD__DESELECT();
     c88:	f002 ff0e 	bl	3aa8 <board_io__sd_card_ds>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:342
  return count ? RES_ERROR : RES_OK;
     c8c:	1c20      	adds	r0, r4, #0
     c8e:	bf18      	it	ne
     c90:	2001      	movne	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:343
}
     c92:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:331
    if (sd_card__send_command(CMD18, sector) == 0) { /* READ_MULTIPLE_BLOCK */
     c94:	2052      	movs	r0, #82	; 0x52
     c96:	f7ff feba 	bl	a0e <sd_card__send_command>
     c9a:	2800      	cmp	r0, #0
     c9c:	d1f4      	bne.n	c88 <sd_card__read+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:333
        if (!sd_card__read_datablock(buff, 512))
     c9e:	f44f 7100 	mov.w	r1, #512	; 0x200
     ca2:	4628      	mov	r0, r5
     ca4:	f7ff fef6 	bl	a94 <sd_card__read_datablock>
     ca8:	b128      	cbz	r0, cb6 <sd_card__read+0x72>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
     caa:	3c01      	subs	r4, #1
     cac:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:335
        buff += 512;
     cb0:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
     cb4:	d1f3      	bne.n	c9e <sd_card__read+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:337
      sd_card__send_command(CMD12, 0); /* STOP_TRANSMISSION */
     cb6:	2100      	movs	r1, #0
     cb8:	204c      	movs	r0, #76	; 0x4c
     cba:	f7ff fea8 	bl	a0e <sd_card__send_command>
     cbe:	e7e3      	b.n	c88 <sd_card__read+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:308
    return RES_PARERR;
     cc0:	2004      	movs	r0, #4
     cc2:	e7e6      	b.n	c92 <sd_card__read+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:312
    return RES_NOTRDY;
     cc4:	2003      	movs	r0, #3
     cc6:	e7e4      	b.n	c92 <sd_card__read+0x4e>
     cc8:	10000008 	.word	0x10000008
     ccc:	1000034e 	.word	0x1000034e

00000cd0 <sd_card__write>:
sd_card__write():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:349
) {
     cd0:	b570      	push	{r4, r5, r6, lr}
     cd2:	4614      	mov	r4, r2
     cd4:	4605      	mov	r5, r0
     cd6:	460e      	mov	r6, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:350
  sd_card__update_status();
     cd8:	f7ff fefe 	bl	ad8 <sd_card__update_status>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:352
  if (!count) {
     cdc:	2c00      	cmp	r4, #0
     cde:	d041      	beq.n	d64 <sd_card__write+0x94>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:355
  if (g_disk_status & STA_NOINIT) {
     ce0:	4b23      	ldr	r3, [pc, #140]	; (d70 <sd_card__write+0xa0>)
     ce2:	781a      	ldrb	r2, [r3, #0]
     ce4:	07d0      	lsls	r0, r2, #31
     ce6:	d43f      	bmi.n	d68 <sd_card__write+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:358
  if (g_disk_status & STA_PROTECT) {
     ce8:	781b      	ldrb	r3, [r3, #0]
     cea:	0759      	lsls	r1, r3, #29
     cec:	d43e      	bmi.n	d6c <sd_card__write+0x9c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:362
  SD_CARD__SELECT();
     cee:	f002 fed3 	bl	3a98 <board_io__sd_card_cs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:363
  if (!(g_card_type & CT_BLOCK)) {
     cf2:	4b20      	ldr	r3, [pc, #128]	; (d74 <sd_card__write+0xa4>)
     cf4:	781b      	ldrb	r3, [r3, #0]
     cf6:	071a      	lsls	r2, r3, #28
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:364
    sector *= 512; /* Convert to byte address if needed */
     cf8:	bf58      	it	pl
     cfa:	0276      	lslpl	r6, r6, #9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:367
  if (count == 1) { /* Single block write */
     cfc:	2c01      	cmp	r4, #1
     cfe:	d111      	bne.n	d24 <sd_card__write+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368
    if ((sd_card__send_command(CMD24, sector) == 0) && sd_card__transmit_datablock(buff, 0xFE)) {
     d00:	4631      	mov	r1, r6
     d02:	2058      	movs	r0, #88	; 0x58
     d04:	f7ff fe83 	bl	a0e <sd_card__send_command>
     d08:	bb50      	cbnz	r0, d60 <sd_card__write+0x90>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368 (discriminator 1)
     d0a:	21fe      	movs	r1, #254	; 0xfe
     d0c:	4628      	mov	r0, r5
     d0e:	f7ff fe51 	bl	9b4 <sd_card__transmit_datablock>
     d12:	fab0 f480 	clz	r4, r0
     d16:	0964      	lsrs	r4, r4, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:388
  SD_CARD__DESELECT();
     d18:	f002 fec6 	bl	3aa8 <board_io__sd_card_ds>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:390
  return count ? RES_ERROR : RES_OK;
     d1c:	1c20      	adds	r0, r4, #0
     d1e:	bf18      	it	ne
     d20:	2001      	movne	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:391
}
     d22:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:372
    if (g_card_type & CT_SDC) {
     d24:	f013 0f06 	tst.w	r3, #6
     d28:	d003      	beq.n	d32 <sd_card__write+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:373
      sd_card__send_command(ACMD23, count);
     d2a:	4621      	mov	r1, r4
     d2c:	20d7      	movs	r0, #215	; 0xd7
     d2e:	f7ff fe6e 	bl	a0e <sd_card__send_command>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:376
    if (sd_card__send_command(CMD25, sector) == 0) { /* WRITE_MULTIPLE_BLOCK */
     d32:	4631      	mov	r1, r6
     d34:	2059      	movs	r0, #89	; 0x59
     d36:	f7ff fe6a 	bl	a0e <sd_card__send_command>
     d3a:	2800      	cmp	r0, #0
     d3c:	d1ec      	bne.n	d18 <sd_card__write+0x48>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:378
        if (!sd_card__transmit_datablock(buff, 0xFC)) {
     d3e:	21fc      	movs	r1, #252	; 0xfc
     d40:	4628      	mov	r0, r5
     d42:	f7ff fe37 	bl	9b4 <sd_card__transmit_datablock>
     d46:	b128      	cbz	r0, d54 <sd_card__write+0x84>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
     d48:	3c01      	subs	r4, #1
     d4a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:381
        buff += 512;
     d4e:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
     d52:	d1f4      	bne.n	d3e <sd_card__write+0x6e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:383
      if (!sd_card__transmit_datablock(0, 0xFD)) {/* STOP_TRAN token */
     d54:	21fd      	movs	r1, #253	; 0xfd
     d56:	2000      	movs	r0, #0
     d58:	f7ff fe2c 	bl	9b4 <sd_card__transmit_datablock>
     d5c:	2800      	cmp	r0, #0
     d5e:	d1db      	bne.n	d18 <sd_card__write+0x48>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:384
        count = 1;
     d60:	2401      	movs	r4, #1
     d62:	e7d9      	b.n	d18 <sd_card__write+0x48>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:353
    return RES_PARERR;
     d64:	2004      	movs	r0, #4
     d66:	e7dc      	b.n	d22 <sd_card__write+0x52>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:356
    return RES_NOTRDY;
     d68:	2003      	movs	r0, #3
     d6a:	e7da      	b.n	d22 <sd_card__write+0x52>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:359
    return RES_WRPRT;
     d6c:	2002      	movs	r0, #2
     d6e:	e7d8      	b.n	d22 <sd_card__write+0x52>
     d70:	10000008 	.word	0x10000008
     d74:	1000034e 	.word	0x1000034e

00000d78 <system_calls__print_and_halt>:
system_calls__print_and_halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:45
  for (int i = 0; i < len; i++) {
    uart__polled_put(system_calls__uart_type, ptr[i]);
  }
}

static void system_calls__print_and_halt(const char *string) {
     d78:	b508      	push	{r3, lr}
     d7a:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:46
  system_calls__polled_put(string, strlen(string));
     d7c:	f005 fc55 	bl	662a <strlen>
system_calls__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     d80:	2400      	movs	r4, #0
system_calls__print_and_halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:46
  system_calls__polled_put(string, strlen(string));
     d82:	4605      	mov	r5, r0
system_calls__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     d84:	42a5      	cmp	r5, r4
     d86:	dc00      	bgt.n	d8a <system_calls__print_and_halt+0x12>
system_calls__print_and_halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:48 (discriminator 1)
  while (1) {
  }
     d88:	e7fe      	b.n	d88 <system_calls__print_and_halt+0x10>
system_calls__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
    uart__polled_put(system_calls__uart_type, ptr[i]);
     d8a:	5d31      	ldrb	r1, [r6, r4]
     d8c:	2000      	movs	r0, #0
     d8e:	f003 fb77 	bl	4480 <uart__polled_put>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     d92:	3401      	adds	r4, #1
     d94:	e7f6      	b.n	d84 <system_calls__print_and_halt+0xc>
system_calls__print_and_halt():
     d96:	Address 0x0000000000000d96 is out of bounds.


00000d98 <_isatty>:
_isatty():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:84
 * libc.pdf: 'Query whether output stream is a terminal'
 */
int _isatty(int file_descriptor) {
  int is_atty = 0;

  switch (file_descriptor) {
     d98:	2802      	cmp	r0, #2
     d9a:	d90c      	bls.n	db6 <_isatty+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:94
    is_atty = 1;
    break;

  // Pointer based values defined by <stdio.h>
  default:
    if ((int)stdin == file_descriptor || (int)stdout == file_descriptor || (int)stderr == file_descriptor) {
     d9c:	4b07      	ldr	r3, [pc, #28]	; (dbc <_isatty+0x24>)
     d9e:	681b      	ldr	r3, [r3, #0]
     da0:	685a      	ldr	r2, [r3, #4]
     da2:	4282      	cmp	r2, r0
     da4:	d007      	beq.n	db6 <_isatty+0x1e>
     da6:	689a      	ldr	r2, [r3, #8]
     da8:	4282      	cmp	r2, r0
     daa:	d004      	beq.n	db6 <_isatty+0x1e>
     dac:	68db      	ldr	r3, [r3, #12]
     dae:	1a1b      	subs	r3, r3, r0
     db0:	4258      	negs	r0, r3
     db2:	4158      	adcs	r0, r3
     db4:	4770      	bx	lr
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:95
      is_atty = 1;
     db6:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:100
    }
  }

  return is_atty;
}
     db8:	4770      	bx	lr
     dba:	bf00      	nop
     dbc:	10000174 	.word	0x10000174

00000dc0 <_write>:
_write():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:113
}

/**
 * Low level write routine used by standard output (printf) and also file writes after fopen() has been called
 */
int _write(int file_descriptor, const char *ptr, int bytes_to_write) {
     dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     dc2:	4604      	mov	r4, r0
     dc4:	460e      	mov	r6, r1
     dc6:	4615      	mov	r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:114
  if (_isatty(file_descriptor)) {
     dc8:	f7ff ffe6 	bl	d98 <_isatty>
     dcc:	b348      	cbz	r0, e22 <_write+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:115
    const bool is_standard_error = ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
     dce:	4b16      	ldr	r3, [pc, #88]	; (e28 <_write+0x68>)
     dd0:	681b      	ldr	r3, [r3, #0]
     dd2:	68db      	ldr	r3, [r3, #12]
     dd4:	42a3      	cmp	r3, r4
     dd6:	d010      	beq.n	dfa <_write+0x3a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:115 (discriminator 2)
     dd8:	1ea3      	subs	r3, r4, #2
     dda:	425c      	negs	r4, r3
     ddc:	415c      	adcs	r4, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:116 (discriminator 6)
    const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
     dde:	f002 fc75 	bl	36cc <xTaskGetSchedulerState>
     de2:	4607      	mov	r7, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:117 (discriminator 6)
    const bool transmit_queue_enabled = uart__is_transmit_queue_initialized(system_calls__uart_type);
     de4:	2000      	movs	r0, #0
     de6:	f003 fb01 	bl	43ec <uart__is_transmit_queue_initialized>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:122 (discriminator 6)

    /* If the RTOS is running with the UART queue enabled, AND it is not an error printf, then queue
     * the output and return quickly, otherwise there is no choice but to use system_calls__polled_put()
     */
    if (rtos_is_running && transmit_queue_enabled && !is_standard_error) {
     dea:	2f02      	cmp	r7, #2
     dec:	d117      	bne.n	e1e <_write+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:122 (discriminator 1)
     dee:	b1b0      	cbz	r0, e1e <_write+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:122 (discriminator 2)
     df0:	b9ac      	cbnz	r4, e1e <_write+0x5e>
system_calls__queued_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
     df2:	42a5      	cmp	r5, r4
     df4:	dc03      	bgt.n	dfe <_write+0x3e>
_write():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:132
  } else {
    system_calls__print_and_halt("ERROR: Call to _write() with an unsupported handle");
  }

  return bytes_to_write;
}
     df6:	4628      	mov	r0, r5
     df8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:115
    const bool is_standard_error = ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
     dfa:	2401      	movs	r4, #1
     dfc:	e7ef      	b.n	dde <_write+0x1e>
system_calls__queued_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:34
    uart__put(system_calls__uart_type, ptr[i], forever_timeout);
     dfe:	5d31      	ldrb	r1, [r6, r4]
     e00:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     e04:	2000      	movs	r0, #0
     e06:	f003 fba3 	bl	4550 <uart__put>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
     e0a:	3401      	adds	r4, #1
     e0c:	e7f1      	b.n	df2 <_write+0x32>
system_calls__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
    uart__polled_put(system_calls__uart_type, ptr[i]);
     e0e:	5d31      	ldrb	r1, [r6, r4]
     e10:	2000      	movs	r0, #0
     e12:	f003 fb35 	bl	4480 <uart__polled_put>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     e16:	3401      	adds	r4, #1
     e18:	42a5      	cmp	r5, r4
     e1a:	dcf8      	bgt.n	e0e <_write+0x4e>
     e1c:	e7eb      	b.n	df6 <_write+0x36>
_write():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
     e1e:	2400      	movs	r4, #0
     e20:	e7fa      	b.n	e18 <_write+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:128
    system_calls__print_and_halt("ERROR: Call to _write() with an unsupported handle");
     e22:	4802      	ldr	r0, [pc, #8]	; (e2c <_write+0x6c>)
     e24:	f7ff ffa8 	bl	d78 <system_calls__print_and_halt>
     e28:	10000174 	.word	0x10000174
     e2c:	0000abc8 	.word	0x0000abc8

00000e30 <_read>:
_read():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:137

/**
 * Low level read routine used by standard input (scanf) and also file reads after fopen() has been called
 */
int _read(int file_descriptor, char *ptr, int len) {
     e30:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:140
  int bytes_read = 0;

  if (_isatty(file_descriptor)) {
     e32:	f7ff ffb1 	bl	d98 <_isatty>
     e36:	b118      	cbz	r0, e40 <_read+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:142
    // This is a little awkward but uart__polled_get() will not poll if RTOS is running with UART RX queue enabled
    if (uart__polled_get(system_calls__uart_type, &ptr[0])) {
     e38:	2000      	movs	r0, #0
     e3a:	f003 fb5d 	bl	44f8 <uart__polled_get>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:151
  } else {
    system_calls__print_and_halt("ERROR: Call to _read() with an unsupported handle");
  }

  return bytes_read;
}
     e3e:	bd08      	pop	{r3, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/newlib/system_calls.c:147
    system_calls__print_and_halt("ERROR: Call to _read() with an unsupported handle");
     e40:	4801      	ldr	r0, [pc, #4]	; (e48 <_read+0x18>)
     e42:	f7ff ff99 	bl	d78 <system_calls__print_and_halt>
     e46:	bf00      	nop
     e48:	0000ab96 	.word	0x0000ab96

00000e4c <app_cli__private_print_list_of_all_commands>:
app_cli__private_print_list_of_all_commands():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:79
    cli->output_function(cli_argument, output_string);
  }
}

static void app_cli__private_print_list_of_all_commands(const app_cli_s *cli, app_cli__argument_t cli_argument,
                                                        sl_string_t output) {
     e4c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e50:	4606      	mov	r6, r0
     e52:	4614      	mov	r4, r2
     e54:	4688      	mov	r8, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:80
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to get full help if you see ...): \r\n");
     e56:	4610      	mov	r0, r2
     e58:	491b      	ldr	r1, [pc, #108]	; (ec8 <app_cli__private_print_list_of_all_commands+0x7c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:90

  while (NULL != iterator) {
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
    } else {
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name, iterator->help_message_for_command);
     e5a:	f8df 907c 	ldr.w	r9, [pc, #124]	; ed8 <app_cli__private_print_list_of_all_commands+0x8c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:88
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
     e5e:	f8df a07c 	ldr.w	sl, [pc, #124]	; edc <app_cli__private_print_list_of_all_commands+0x90>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:94
    }

    // If a command's help is multi-line, truncate it at that position and add "...." to indicate 'see more help'
    const bool ends_with_carriage_return = sl_string__erase_at_substring(output, "\r");
     e62:	f8df b07c 	ldr.w	fp, [pc, #124]	; ee0 <app_cli__private_print_list_of_all_commands+0x94>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:80
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to get full help if you see ...): \r\n");
     e66:	f000 fdf2 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:81
  cli->output_function(cli_argument, output);
     e6a:	68b3      	ldr	r3, [r6, #8]
     e6c:	4621      	mov	r1, r4
     e6e:	4640      	mov	r0, r8
     e70:	4798      	blx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:84
  app_cli__command_s *iterator = cli->commands_head_pointer;
     e72:	6835      	ldr	r5, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:86
  while (NULL != iterator) {
     e74:	b90d      	cbnz	r5, e7a <app_cli__private_print_list_of_all_commands+0x2e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:105
    (void)sl_string__append(output, "\r\n");
    cli->output_function(cli_argument, output);

    iterator = iterator->pointer_of_next_command;
  }
}
     e76:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:87
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
     e7a:	686f      	ldr	r7, [r5, #4]
     e7c:	4638      	mov	r0, r7
     e7e:	f005 fbd4 	bl	662a <strlen>
     e82:	2832      	cmp	r0, #50	; 0x32
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:88
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
     e84:	bf8c      	ite	hi
     e86:	4651      	movhi	r1, sl
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:90
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name, iterator->help_message_for_command);
     e88:	4649      	movls	r1, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:88
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
     e8a:	463b      	mov	r3, r7
     e8c:	682a      	ldr	r2, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:90
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name, iterator->help_message_for_command);
     e8e:	4620      	mov	r0, r4
     e90:	f000 fddd 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:94
    const bool ends_with_carriage_return = sl_string__erase_at_substring(output, "\r");
     e94:	4659      	mov	r1, fp
     e96:	4620      	mov	r0, r4
     e98:	f000 ff04 	bl	1ca4 <sl_string__erase_at_substring>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:95
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
     e9c:	490b      	ldr	r1, [pc, #44]	; (ecc <app_cli__private_print_list_of_all_commands+0x80>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:94
    const bool ends_with_carriage_return = sl_string__erase_at_substring(output, "\r");
     e9e:	4607      	mov	r7, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:95
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
     ea0:	4620      	mov	r0, r4
     ea2:	f000 feff 	bl	1ca4 <sl_string__erase_at_substring>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:96
    if (ends_with_carriage_return || ends_with_newline) {
     ea6:	b907      	cbnz	r7, eaa <app_cli__private_print_list_of_all_commands+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:96 (discriminator 1)
     ea8:	b118      	cbz	r0, eb2 <app_cli__private_print_list_of_all_commands+0x66>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:97
      (void)sl_string__append(output, "...");
     eaa:	4909      	ldr	r1, [pc, #36]	; (ed0 <app_cli__private_print_list_of_all_commands+0x84>)
     eac:	4620      	mov	r0, r4
     eae:	f000 fe38 	bl	1b22 <sl_string__append>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:100
    (void)sl_string__append(output, "\r\n");
     eb2:	4908      	ldr	r1, [pc, #32]	; (ed4 <app_cli__private_print_list_of_all_commands+0x88>)
     eb4:	4620      	mov	r0, r4
     eb6:	f000 fe34 	bl	1b22 <sl_string__append>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:101
    cli->output_function(cli_argument, output);
     eba:	68b3      	ldr	r3, [r6, #8]
     ebc:	4621      	mov	r1, r4
     ebe:	4640      	mov	r0, r8
     ec0:	4798      	blx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:103
    iterator = iterator->pointer_of_next_command;
     ec2:	68ed      	ldr	r5, [r5, #12]
     ec4:	e7d6      	b.n	e74 <app_cli__private_print_list_of_all_commands+0x28>
     ec6:	bf00      	nop
     ec8:	0000abfb 	.word	0x0000abfb
     ecc:	0000ac42 	.word	0x0000ac42
     ed0:	0000adec 	.word	0x0000adec
     ed4:	0000ac41 	.word	0x0000ac41
     ed8:	0000ac57 	.word	0x0000ac57
     edc:	0000ac44 	.word	0x0000ac44
     ee0:	0000ac63 	.word	0x0000ac63

00000ee4 <app_cli__initialize>:
app_cli__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:164
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

app_cli_s app_cli__initialize(size_t minimum_command_chars_to_match, app_cli__print_string_function output_function,
                              const char *terminal_string) {
     ee4:	b530      	push	{r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:169
  static const size_t minimum_number_of_chars_to_match = 4;

  app_cli_s cli = {
      .commands_head_pointer = NULL,
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match, minimum_command_chars_to_match),
     ee6:	2904      	cmp	r1, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:174
      .output_function = output_function,
      .terminal_string = terminal_string,
  };

  return cli;
     ee8:	f04f 0500 	mov.w	r5, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:169
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match, minimum_command_chars_to_match),
     eec:	bf38      	it	cc
     eee:	2104      	movcc	r1, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:174
  return cli;
     ef0:	6005      	str	r5, [r0, #0]
     ef2:	e9c0 1201 	strd	r1, r2, [r0, #4]
     ef6:	60c3      	str	r3, [r0, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:175
}
     ef8:	bd30      	pop	{r4, r5, pc}

00000efa <app_cli__add_command_handler>:
app_cli__add_command_handler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:178

void app_cli__add_command_handler(app_cli_s *cli, app_cli__command_s *app_cli_command_static_memory) {
  if (NULL != app_cli_command_static_memory) {
     efa:	b111      	cbz	r1, f02 <app_cli__add_command_handler+0x8>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:179
    app_cli_command_static_memory->pointer_of_next_command = cli->commands_head_pointer;
     efc:	6803      	ldr	r3, [r0, #0]
     efe:	60cb      	str	r3, [r1, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:180
    cli->commands_head_pointer = app_cli_command_static_memory;
     f00:	6001      	str	r1, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:182
  }
}
     f02:	4770      	bx	lr

00000f04 <app_cli__process_input>:
app_cli__process_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:184

void app_cli__process_input(app_cli_s *cli, app_cli__argument_t cli_argument, sl_string_t input_string) {
     f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     f08:	4614      	mov	r4, r2
     f0a:	4605      	mov	r5, r0
     f0c:	460f      	mov	r7, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:185
  (void)sl_string__trim_end(input_string, "\r\n");
     f0e:	4610      	mov	r0, r2
     f10:	4942      	ldr	r1, [pc, #264]	; (101c <app_cli__process_input+0x118>)
     f12:	f000 ff0b 	bl	1d2c <sl_string__trim_end>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:187

  if (sl_string__begins_with_ignore_case(input_string, "help")) {
     f16:	4942      	ldr	r1, [pc, #264]	; (1020 <app_cli__process_input+0x11c>)
     f18:	4620      	mov	r0, r4
     f1a:	f000 fe48 	bl	1bae <sl_string__begins_with_ignore_case>
     f1e:	2800      	cmp	r0, #0
     f20:	d033      	beq.n	f8a <app_cli__process_input+0x86>
app_cli__private_handle_help():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:110
  if (sl_string__equals_to_ignore_case(command_string, "help")) {
     f22:	493f      	ldr	r1, [pc, #252]	; (1020 <app_cli__process_input+0x11c>)
     f24:	4620      	mov	r0, r4
     f26:	f000 fe24 	bl	1b72 <sl_string__equals_to_ignore_case>
     f2a:	b128      	cbz	r0, f38 <app_cli__process_input+0x34>
app_cli__private_handle_unmatched_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:139
  app_cli__private_print_list_of_all_commands(cli, cli_argument, output_string);
     f2c:	4622      	mov	r2, r4
     f2e:	4639      	mov	r1, r7
     f30:	4628      	mov	r0, r5
     f32:	f7ff ff8b 	bl	e4c <app_cli__private_print_list_of_all_commands>
     f36:	e068      	b.n	100a <app_cli__process_input+0x106>
app_cli__private_handle_help():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:116
    (void)sl_string__erase_first_word(command_string, ' ');
     f38:	2120      	movs	r1, #32
     f3a:	4620      	mov	r0, r4
     f3c:	f000 fec0 	bl	1cc0 <sl_string__erase_first_word>
app_cli__private_find_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f40:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 1034 <app_cli__process_input+0x130>
app_cli__private_handle_help():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:117
    const app_cli__command_s *cli_command = app_cli__private_find_command(cli, command_string);
     f44:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:31
  while (NULL != iterator) {
     f46:	b90e      	cbnz	r6, f4c <app_cli__process_input+0x48>
app_cli__private_find_short_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:44
  app_cli__command_s *iterator = cli->commands_head_pointer;
     f48:	682e      	ldr	r6, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     f4a:	e010      	b.n	f6e <app_cli__process_input+0x6a>
app_cli__private_find_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f4c:	4642      	mov	r2, r8
     f4e:	6831      	ldr	r1, [r6, #0]
     f50:	4620      	mov	r0, r4
     f52:	f000 fe43 	bl	1bdc <sl_string__begins_with_whole_word>
     f56:	2800      	cmp	r0, #0
     f58:	d138      	bne.n	fcc <app_cli__process_input+0xc8>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    iterator = iterator->pointer_of_next_command;
     f5a:	68f6      	ldr	r6, [r6, #12]
     f5c:	e7f3      	b.n	f46 <app_cli__process_input+0x42>
app_cli__private_find_short_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:51
    if (sl_string__begins_with_limited_chars(input_string, iterator->command_name,
     f5e:	686a      	ldr	r2, [r5, #4]
     f60:	6831      	ldr	r1, [r6, #0]
     f62:	4620      	mov	r0, r4
     f64:	f000 fe0f 	bl	1b86 <sl_string__begins_with_limited_chars>
     f68:	2800      	cmp	r0, #0
     f6a:	d12f      	bne.n	fcc <app_cli__process_input+0xc8>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:56
    iterator = iterator->pointer_of_next_command;
     f6c:	68f6      	ldr	r6, [r6, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     f6e:	2e00      	cmp	r6, #0
     f70:	d1f5      	bne.n	f5e <app_cli__process_input+0x5a>
app_cli__private_handle_help():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:123
      (void)sl_string__insert_at(command_string, 0, "ERROR: Could not find help for command: ");
     f72:	4631      	mov	r1, r6
     f74:	4a2b      	ldr	r2, [pc, #172]	; (1024 <app_cli__process_input+0x120>)
     f76:	4620      	mov	r0, r4
     f78:	f000 fda9 	bl	1ace <sl_string__insert_at>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:124
      cli->output_function(cli_argument, command_string);
     f7c:	68ab      	ldr	r3, [r5, #8]
     f7e:	4621      	mov	r1, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:126
      cli->output_function(cli_argument, cli_command->help_message_for_command);
     f80:	4638      	mov	r0, r7
     f82:	4798      	blx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:128
    cli->output_function(cli_argument, "\r\n");
     f84:	68ab      	ldr	r3, [r5, #8]
     f86:	4925      	ldr	r1, [pc, #148]	; (101c <app_cli__process_input+0x118>)
     f88:	e03d      	b.n	1006 <app_cli__process_input+0x102>
app_cli__private_process_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:143
  const app_cli__command_s *command = app_cli__private_find_command(cli, input_string);
     f8a:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f8c:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 1034 <app_cli__process_input+0x130>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:31
  while (NULL != iterator) {
     f90:	b90e      	cbnz	r6, f96 <app_cli__process_input+0x92>
app_cli__private_find_short_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:44
  app_cli__command_s *iterator = cli->commands_head_pointer;
     f92:	682e      	ldr	r6, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     f94:	e00e      	b.n	fb4 <app_cli__process_input+0xb0>
app_cli__private_find_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f96:	4642      	mov	r2, r8
     f98:	6831      	ldr	r1, [r6, #0]
     f9a:	4620      	mov	r0, r4
     f9c:	f000 fe1e 	bl	1bdc <sl_string__begins_with_whole_word>
     fa0:	b9b8      	cbnz	r0, fd2 <app_cli__process_input+0xce>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    iterator = iterator->pointer_of_next_command;
     fa2:	68f6      	ldr	r6, [r6, #12]
     fa4:	e7f4      	b.n	f90 <app_cli__process_input+0x8c>
app_cli__private_find_short_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:51
    if (sl_string__begins_with_limited_chars(input_string, iterator->command_name,
     fa6:	686a      	ldr	r2, [r5, #4]
     fa8:	6831      	ldr	r1, [r6, #0]
     faa:	4620      	mov	r0, r4
     fac:	f000 fdeb 	bl	1b86 <sl_string__begins_with_limited_chars>
     fb0:	b978      	cbnz	r0, fd2 <app_cli__process_input+0xce>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:56
    iterator = iterator->pointer_of_next_command;
     fb2:	68f6      	ldr	r6, [r6, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     fb4:	2e00      	cmp	r6, #0
     fb6:	d1f6      	bne.n	fa6 <app_cli__process_input+0xa2>
app_cli__private_handle_unmatched_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:136
  (void)sl_string__insert_at(output_string, 0, "Unable to match any registered CLI command for: ");
     fb8:	4631      	mov	r1, r6
     fba:	4a1b      	ldr	r2, [pc, #108]	; (1028 <app_cli__process_input+0x124>)
     fbc:	4620      	mov	r0, r4
     fbe:	f000 fd86 	bl	1ace <sl_string__insert_at>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:137
  cli->output_function(cli_argument, output_string);
     fc2:	68ab      	ldr	r3, [r5, #8]
     fc4:	4621      	mov	r1, r4
     fc6:	4638      	mov	r0, r7
     fc8:	4798      	blx	r3
     fca:	e7af      	b.n	f2c <app_cli__process_input+0x28>
app_cli__private_handle_help():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:126
      cli->output_function(cli_argument, cli_command->help_message_for_command);
     fcc:	68ab      	ldr	r3, [r5, #8]
     fce:	6871      	ldr	r1, [r6, #4]
     fd0:	e7d6      	b.n	f80 <app_cli__process_input+0x7c>
app_cli__private_handle_command():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:64
  (void)sl_string__erase_first_word(input_string, ' ');
     fd2:	2120      	movs	r1, #32
     fd4:	4620      	mov	r0, r4
     fd6:	f000 fe73 	bl	1cc0 <sl_string__erase_first_word>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:65
  const app_cli_status_e command_status = command->app_cli_handler(cli_argument, input_string, cli->output_function);
     fda:	68b3      	ldr	r3, [r6, #8]
     fdc:	68aa      	ldr	r2, [r5, #8]
     fde:	4621      	mov	r1, r4
     fe0:	4638      	mov	r0, r7
     fe2:	4798      	blx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:67
  if (APP_CLI_STATUS__SUCCESS != command_status) {
     fe4:	b188      	cbz	r0, 100a <app_cli__process_input+0x106>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:70
    (void)sl_string__insert_at(output_string, 0, "Command failed: ");
     fe6:	4a11      	ldr	r2, [pc, #68]	; (102c <app_cli__process_input+0x128>)
     fe8:	2100      	movs	r1, #0
     fea:	4620      	mov	r0, r4
     fec:	f000 fd6f 	bl	1ace <sl_string__insert_at>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:71
    cli->output_function(cli_argument, output_string);
     ff0:	68ab      	ldr	r3, [r5, #8]
     ff2:	4621      	mov	r1, r4
     ff4:	4638      	mov	r0, r7
     ff6:	4798      	blx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:73
    (void)sl_string__printf(output_string, "\r\nCommand help message: %s\r\n", command->help_message_for_command);
     ff8:	490d      	ldr	r1, [pc, #52]	; (1030 <app_cli__process_input+0x12c>)
     ffa:	6872      	ldr	r2, [r6, #4]
     ffc:	4620      	mov	r0, r4
     ffe:	f000 fd26 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:74
    cli->output_function(cli_argument, output_string);
    1002:	68ab      	ldr	r3, [r5, #8]
    1004:	4621      	mov	r1, r4
    1006:	4638      	mov	r0, r7
    1008:	4798      	blx	r3
app_cli__process_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:194
  } else {
    app_cli__private_process_input(cli, cli_argument, input_string);
  }

  // Send a terminator to signal to any receiver that we are done outputting all output from our handlers
  if (NULL != cli->terminal_string) {
    100a:	68e9      	ldr	r1, [r5, #12]
    100c:	b121      	cbz	r1, 1018 <app_cli__process_input+0x114>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:195
    cli->output_function(cli_argument, cli->terminal_string);
    100e:	68ab      	ldr	r3, [r5, #8]
    1010:	4638      	mov	r0, r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:197
  }
}
    1012:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:195
    cli->output_function(cli_argument, cli->terminal_string);
    1016:	4718      	bx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/app_cli.c:197
}
    1018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    101c:	0000ac41 	.word	0x0000ac41
    1020:	0000ac65 	.word	0x0000ac65
    1024:	0000ac98 	.word	0x0000ac98
    1028:	0000acc1 	.word	0x0000acc1
    102c:	0000ac6a 	.word	0x0000ac6a
    1030:	0000ac7b 	.word	0x0000ac7b
    1034:	0000bb10 	.word	0x0000bb10

00001038 <sj2_cli__output_function>:
sj2_cli__output_function():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:58
  static StaticTask_t task_struct;
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack), &sj2_cli_struct, PRIORITY_HIGH, task_stack,
                    &task_struct);
}

static void sj2_cli__output_function(app_cli__argument_t argument, const char *string) {
    1038:	b510      	push	{r4, lr}
    103a:	1e4c      	subs	r4, r1, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:59
  while (*string != '\0') {
    103c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    1040:	b900      	cbnz	r0, 1044 <sj2_cli__output_function+0xc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:63
    putchar(*string);
    ++string;
  }
}
    1042:	bd10      	pop	{r4, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:60
    putchar(*string);
    1044:	f005 f946 	bl	62d4 <putchar>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:61
    ++string;
    1048:	e7f8      	b.n	103c <sj2_cli__output_function+0x4>
    104a:	Address 0x000000000000104a is out of bounds.


0000104c <sj2_cli__task>:
sj2_cli__task():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:65

static void sj2_cli__task(void *task_parameter) {
    104c:	b570      	push	{r4, r5, r6, lr}
    104e:	b0a0      	sub	sp, #128	; 0x80
    1050:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:71
  app_cli_s *sj2_cli_struct = (app_cli_s *)task_parameter;
  void *unused_cli_param = NULL;
  char string_memory[128];

  // Start by greeting the use with the 'help' command
  sl_string_t user_input = sl_string__initialize_from(string_memory, sizeof(string_memory), "help");
    1052:	4a1b      	ldr	r2, [pc, #108]	; (10c0 <sj2_cli__task+0x74>)
    1054:	2180      	movs	r1, #128	; 0x80
    1056:	4668      	mov	r0, sp
    1058:	f000 fd2e 	bl	1ab8 <sl_string__initialize_from>
    105c:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:74 (discriminator 1)

  while (true) {
    app_cli__process_input(sj2_cli_struct, unused_cli_param, user_input);
    105e:	4630      	mov	r0, r6
    1060:	4622      	mov	r2, r4
    1062:	2100      	movs	r1, #0
    1064:	f7ff ff4e 	bl	f04 <app_cli__process_input>
sj2_cli__get_line():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:80 (discriminator 1)
    sj2_cli__get_line(user_input);
  }
}

static void sj2_cli__get_line(sl_string_t input_line) {
  sl_string__clear(input_line);
    1068:	4620      	mov	r0, r4
    106a:	f000 fcdf 	bl	1a2c <sl_string__clear>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:83

  // As long as user does not enter a full line, continue to get input
  while (!sl_string__ends_with_newline(input_line)) {
    106e:	4620      	mov	r0, r4
    1070:	f000 fdd6 	bl	1c20 <sl_string__ends_with_newline>
    1074:	2800      	cmp	r0, #0
    1076:	d1f2      	bne.n	105e <sj2_cli__task+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:84
    const char input_byte = getchar();
    1078:	f004 f8a0 	bl	51bc <getchar>
    107c:	b2c5      	uxtb	r5, r0
sj2_cli__handle_backspace_logic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:96
}

static void sj2_cli__handle_backspace_logic(sl_string_t input_line, char input_byte) {
  const char backspace = '\b';

  if (backspace == input_byte) {
    107e:	2d08      	cmp	r5, #8
    1080:	d116      	bne.n	10b0 <sj2_cli__task+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:97
    if (sl_string__get_length(input_line) > 0) {
    1082:	4620      	mov	r0, r4
    1084:	f000 fcbd 	bl	1a02 <sl_string__get_length>
    1088:	b160      	cbz	r0, 10a4 <sj2_cli__task+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:98
      sl_string__erase_last(input_line, 1);
    108a:	2101      	movs	r1, #1
    108c:	4620      	mov	r0, r4
    108e:	f000 fdf8 	bl	1c82 <sl_string__erase_last>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:99
      putchar(backspace);
    1092:	4628      	mov	r0, r5
    1094:	f005 f91e 	bl	62d4 <putchar>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:100
      putchar(' ');
    1098:	2020      	movs	r0, #32
    109a:	f005 f91b 	bl	62d4 <putchar>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:101
      putchar(backspace);
    109e:	4628      	mov	r0, r5
    10a0:	f005 f918 	bl	62d4 <putchar>
sj2_cli__get_line():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:87
    if (sl_string__is_full(input_line)) {
    10a4:	4620      	mov	r0, r4
    10a6:	f000 fcb2 	bl	1a0e <sl_string__is_full>
    10aa:	2800      	cmp	r0, #0
    10ac:	d0df      	beq.n	106e <sj2_cli__task+0x22>
    10ae:	e7d6      	b.n	105e <sj2_cli__task+0x12>
sj2_cli__handle_backspace_logic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:104
    }
  } else {
    putchar(input_byte);
    10b0:	4628      	mov	r0, r5
    10b2:	f005 f90f 	bl	62d4 <putchar>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:105
    sl_string__append_char(input_line, input_byte);
    10b6:	4629      	mov	r1, r5
    10b8:	4620      	mov	r0, r4
    10ba:	f000 fd4e 	bl	1b5a <sl_string__append_char>
    10be:	e7f1      	b.n	10a4 <sj2_cli__task+0x58>
    10c0:	0000ac65 	.word	0x0000ac65

000010c4 <sj2_cli__init>:
sj2_cli__init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:16
void sj2_cli__init(void) {
    10c4:	b530      	push	{r4, r5, lr}
    10c6:	b089      	sub	sp, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:20
  sj2_cli_struct = app_cli__initialize(4, sj2_cli__output_function, separator);
    10c8:	ad04      	add	r5, sp, #16
    10ca:	4628      	mov	r0, r5
    10cc:	4b14      	ldr	r3, [pc, #80]	; (1120 <sj2_cli__init+0x5c>)
    10ce:	4a15      	ldr	r2, [pc, #84]	; (1124 <sj2_cli__init+0x60>)
    10d0:	4c15      	ldr	r4, [pc, #84]	; (1128 <sj2_cli__init+0x64>)
    10d2:	2104      	movs	r1, #4
    10d4:	f7ff ff06 	bl	ee4 <app_cli__initialize>
    10d8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    10dc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:44
  app_cli__add_command_handler(&sj2_cli_struct, &task_list);
    10e0:	4620      	mov	r0, r4
    10e2:	4912      	ldr	r1, [pc, #72]	; (112c <sj2_cli__init+0x68>)
    10e4:	f7ff ff09 	bl	efa <app_cli__add_command_handler>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:45
  app_cli__add_command_handler(&sj2_cli_struct, &i2c);
    10e8:	4620      	mov	r0, r4
    10ea:	4911      	ldr	r1, [pc, #68]	; (1130 <sj2_cli__init+0x6c>)
    10ec:	f7ff ff05 	bl	efa <app_cli__add_command_handler>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:46
  app_cli__add_command_handler(&sj2_cli_struct, &crash);
    10f0:	4620      	mov	r0, r4
    10f2:	4910      	ldr	r1, [pc, #64]	; (1134 <sj2_cli__init+0x70>)
    10f4:	f7ff ff01 	bl	efa <app_cli__add_command_handler>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:48
  app_cli__add_command_handler(&sj2_cli_struct, &taskcontrol);
    10f8:	4620      	mov	r0, r4
    10fa:	490f      	ldr	r1, [pc, #60]	; (1138 <sj2_cli__init+0x74>)
    10fc:	f7ff fefd 	bl	efa <app_cli__add_command_handler>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:54
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack), &sj2_cli_struct, PRIORITY_HIGH, task_stack,
    1100:	4b0e      	ldr	r3, [pc, #56]	; (113c <sj2_cli__init+0x78>)
    1102:	9302      	str	r3, [sp, #8]
    1104:	4b0e      	ldr	r3, [pc, #56]	; (1140 <sj2_cli__init+0x7c>)
    1106:	9301      	str	r3, [sp, #4]
    1108:	2303      	movs	r3, #3
    110a:	9300      	str	r3, [sp, #0]
    110c:	f44f 7200 	mov.w	r2, #512	; 0x200
    1110:	4623      	mov	r3, r4
    1112:	490c      	ldr	r1, [pc, #48]	; (1144 <sj2_cli__init+0x80>)
    1114:	480c      	ldr	r0, [pc, #48]	; (1148 <sj2_cli__init+0x84>)
    1116:	f001 fe5b 	bl	2dd0 <xTaskCreateStatic>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/sj2_cli.c:56
}
    111a:	b009      	add	sp, #36	; 0x24
    111c:	bd30      	pop	{r4, r5, pc}
    111e:	bf00      	nop
    1120:	0000acf2 	.word	0x0000acf2
    1124:	00001039 	.word	0x00001039
    1128:	10000350 	.word	0x10000350
    112c:	1000002c 	.word	0x1000002c
    1130:	1000001c 	.word	0x1000001c
    1134:	1000000c 	.word	0x1000000c
    1138:	1000003c 	.word	0x1000003c
    113c:	10000b60 	.word	0x10000b60
    1140:	10000360 	.word	0x10000360
    1144:	0000ad45 	.word	0x0000ad45
    1148:	0000104d 	.word	0x0000104d

0000114c <cli__i2c_read>:
cli__i2c_read():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:36
  }

  return command_status;
}

static void cli__i2c_read(const sl_string_t command_params, app_cli__print_string_function cli_output) {
    114c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1150:	b0e7      	sub	sp, #412	; 0x19c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:37
  uint8_t buffer[256] = {0};
    1152:	f10d 0898 	add.w	r8, sp, #152	; 0x98
    1156:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:36
static void cli__i2c_read(const sl_string_t command_params, app_cli__print_string_function cli_output) {
    115a:	4681      	mov	r9, r0
    115c:	460e      	mov	r6, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:37
  uint8_t buffer[256] = {0};
    115e:	4640      	mov	r0, r8
    1160:	2100      	movs	r1, #0
    1162:	f004 f879 	bl	5258 <memset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:41
  void *unused_cli_argument = NULL;

  char string_memory[128];
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    1166:	2180      	movs	r1, #128	; 0x80
    1168:	a806      	add	r0, sp, #24
    116a:	f000 fc27 	bl	19bc <sl_string__initialize>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43

  unsigned slave_address = 0, slave_register = 0, count = 1;
    116e:	af05      	add	r7, sp, #20
    1170:	2301      	movs	r3, #1
    1172:	603b      	str	r3, [r7, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:41
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    1174:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  unsigned slave_address = 0, slave_register = 0, count = 1;
    1176:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:45

  if (sl_string__scanf(command_params, "0x%x 0x%x %u", &slave_address, &slave_register, &count) >= 2) {
    1178:	9700      	str	r7, [sp, #0]
    117a:	ab04      	add	r3, sp, #16
    117c:	aa03      	add	r2, sp, #12
    117e:	4920      	ldr	r1, [pc, #128]	; (1200 <cli__i2c_read+0xb4>)
    1180:	4648      	mov	r0, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  unsigned slave_address = 0, slave_register = 0, count = 1;
    1182:	e9cd 4403 	strd	r4, r4, [sp, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:45
  if (sl_string__scanf(command_params, "0x%x 0x%x %u", &slave_address, &slave_register, &count) >= 2) {
    1186:	f000 fc6f 	bl	1a68 <sl_string__scanf>
    118a:	2801      	cmp	r0, #1
    118c:	d931      	bls.n	11f2 <cli__i2c_read+0xa6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:46
    if (i2c__read_slave_data(i2c_bus, slave_address, slave_register, &buffer[0], count)) {
    118e:	683b      	ldr	r3, [r7, #0]
    1190:	9300      	str	r3, [sp, #0]
    1192:	f89d 2010 	ldrb.w	r2, [sp, #16]
    1196:	f89d 100c 	ldrb.w	r1, [sp, #12]
    119a:	4643      	mov	r3, r8
    119c:	2002      	movs	r0, #2
    119e:	f002 ff1f 	bl	3fe0 <i2c__read_slave_data>
    11a2:	4681      	mov	r9, r0
    11a4:	b1e8      	cbz	r0, 11e2 <cli__i2c_read+0x96>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:47
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    11a6:	9a03      	ldr	r2, [sp, #12]
    11a8:	4916      	ldr	r1, [pc, #88]	; (1204 <cli__i2c_read+0xb8>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:51
      cli_output(unused_cli_argument, output);

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    11aa:	f8df 9064 	ldr.w	r9, [pc, #100]	; 1210 <cli__i2c_read+0xc4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:47
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    11ae:	4628      	mov	r0, r5
    11b0:	f000 fc4d 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:48
      cli_output(unused_cli_argument, output);
    11b4:	4629      	mov	r1, r5
    11b6:	4620      	mov	r0, r4
    11b8:	47b0      	blx	r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    11ba:	683b      	ldr	r3, [r7, #0]
    11bc:	42a3      	cmp	r3, r4
    11be:	d802      	bhi.n	11c6 <cli__i2c_read+0x7a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:62
    }
  } else {
    sl_string__set(output, "Command error: Read command should be 'i2c read 0xDD 0xRR <n>'\n");
    cli_output(unused_cli_argument, output);
  }
}
    11c0:	b067      	add	sp, #412	; 0x19c
    11c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:51 (discriminator 3)
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    11c6:	9a04      	ldr	r2, [sp, #16]
    11c8:	f818 3004 	ldrb.w	r3, [r8, r4]
    11cc:	9300      	str	r3, [sp, #0]
    11ce:	4422      	add	r2, r4
    11d0:	4649      	mov	r1, r9
    11d2:	4628      	mov	r0, r5
    11d4:	f000 fc3b 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:52 (discriminator 3)
        cli_output(unused_cli_argument, output);
    11d8:	4629      	mov	r1, r5
    11da:	2000      	movs	r0, #0
    11dc:	47b0      	blx	r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    11de:	3401      	adds	r4, #1
    11e0:	e7eb      	b.n	11ba <cli__i2c_read+0x6e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:55
      sl_string__set(output, "I2C bus error during i2c__read_slave_data()\n");
    11e2:	4909      	ldr	r1, [pc, #36]	; (1208 <cli__i2c_read+0xbc>)
    11e4:	4628      	mov	r0, r5
    11e6:	f000 fc50 	bl	1a8a <sl_string__set>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:56
      cli_output(unused_cli_argument, output);
    11ea:	4629      	mov	r1, r5
    11ec:	4648      	mov	r0, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:60
    cli_output(unused_cli_argument, output);
    11ee:	47b0      	blx	r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:62
}
    11f0:	e7e6      	b.n	11c0 <cli__i2c_read+0x74>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:59
    sl_string__set(output, "Command error: Read command should be 'i2c read 0xDD 0xRR <n>'\n");
    11f2:	4906      	ldr	r1, [pc, #24]	; (120c <cli__i2c_read+0xc0>)
    11f4:	4628      	mov	r0, r5
    11f6:	f000 fc48 	bl	1a8a <sl_string__set>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:60
    cli_output(unused_cli_argument, output);
    11fa:	4629      	mov	r1, r5
    11fc:	4620      	mov	r0, r4
    11fe:	e7f6      	b.n	11ee <cli__i2c_read+0xa2>
    1200:	0000ae7c 	.word	0x0000ae7c
    1204:	0000ae89 	.word	0x0000ae89
    1208:	0000aeba 	.word	0x0000aeba
    120c:	0000aee7 	.word	0x0000aee7
    1210:	0000aea3 	.word	0x0000aea3

00001214 <cli__i2c_write>:
cli__i2c_write():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:64

static void cli__i2c_write(sl_string_t command_params, app_cli__print_string_function cli_output) {
    1214:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1218:	b0e7      	sub	sp, #412	; 0x19c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:65
  unsigned slave_address = 0, slave_register = 0;
    121a:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
  void *unused_cli_argument = NULL;
  uint8_t buffer[256] = {0};
    121c:	f10d 0898 	add.w	r8, sp, #152	; 0x98
    1220:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:64
static void cli__i2c_write(sl_string_t command_params, app_cli__print_string_function cli_output) {
    1224:	4681      	mov	r9, r0
    1226:	460f      	mov	r7, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
  uint8_t buffer[256] = {0};
    1228:	4640      	mov	r0, r8
    122a:	4621      	mov	r1, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:65
  unsigned slave_address = 0, slave_register = 0;
    122c:	e9cd 4403 	strd	r4, r4, [sp, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
  uint8_t buffer[256] = {0};
    1230:	f004 f812 	bl	5258 <memset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:70

  char string_memory[128];
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    1234:	2180      	movs	r1, #128	; 0x80
    1236:	a806      	add	r0, sp, #24
    1238:	f000 fbc0 	bl	19bc <sl_string__initialize>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:73

  // i2c write 0xDD 0xRR <value> <value> ...
  if (2 == sl_string__scanf(command_params, "0x%x 0x%x", &slave_address, &slave_register)) {
    123c:	ab04      	add	r3, sp, #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:70
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    123e:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:73
  if (2 == sl_string__scanf(command_params, "0x%x 0x%x", &slave_address, &slave_register)) {
    1240:	aa03      	add	r2, sp, #12
    1242:	4929      	ldr	r1, [pc, #164]	; (12e8 <cli__i2c_write+0xd4>)
    1244:	4648      	mov	r0, r9
    1246:	f000 fc0f 	bl	1a68 <sl_string__scanf>
    124a:	2802      	cmp	r0, #2
    124c:	d144      	bne.n	12d8 <cli__i2c_write+0xc4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:74
    sl_string__erase_first_word(command_params, ' ');
    124e:	2120      	movs	r1, #32
    1250:	4648      	mov	r0, r9
    1252:	f000 fd35 	bl	1cc0 <sl_string__erase_first_word>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:75
    sl_string__erase_first_word(command_params, ' ');
    1256:	2120      	movs	r1, #32
    1258:	4648      	mov	r0, r9
    125a:	f000 fd31 	bl	1cc0 <sl_string__erase_first_word>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:78

    // Store one or more write <value> parameters to buffer as specified by the user
    int value_to_write = 0;
    125e:	9405      	str	r4, [sp, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:80
    size_t count = 0;
    while (sl_string__erase_int(command_params, &value_to_write)) {
    1260:	a905      	add	r1, sp, #20
    1262:	4648      	mov	r0, r9
    1264:	f000 fd3a 	bl	1cdc <sl_string__erase_int>
    1268:	4605      	mov	r5, r0
    126a:	b9d0      	cbnz	r0, 12a2 <cli__i2c_write+0x8e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:85
      buffer[count] = (uint8_t)value_to_write;
      ++count;
    }

    if (i2c__write_slave_data(i2c_bus, slave_address, slave_register, &buffer[0], count)) {
    126c:	9400      	str	r4, [sp, #0]
    126e:	4643      	mov	r3, r8
    1270:	f89d 2010 	ldrb.w	r2, [sp, #16]
    1274:	f89d 100c 	ldrb.w	r1, [sp, #12]
    1278:	2002      	movs	r0, #2
    127a:	f002 feed 	bl	4058 <i2c__write_slave_data>
    127e:	4681      	mov	r9, r0
    1280:	b310      	cbz	r0, 12c8 <cli__i2c_write+0xb4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:86
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count, slave_address);
    1282:	9b03      	ldr	r3, [sp, #12]
    1284:	4919      	ldr	r1, [pc, #100]	; (12ec <cli__i2c_write+0xd8>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:90
      cli_output(unused_cli_argument, output);

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    1286:	f8df 9070 	ldr.w	r9, [pc, #112]	; 12f8 <cli__i2c_write+0xe4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:86
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count, slave_address);
    128a:	4622      	mov	r2, r4
    128c:	4630      	mov	r0, r6
    128e:	f000 fbde 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:87
      cli_output(unused_cli_argument, output);
    1292:	4631      	mov	r1, r6
    1294:	4628      	mov	r0, r5
    1296:	47b8      	blx	r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:89 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    1298:	42ac      	cmp	r4, r5
    129a:	d107      	bne.n	12ac <cli__i2c_write+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:101
    }
  } else {
    sl_string__set(output, "Command error: Write command should be 'i2c write 0xDD 0xRR <value> <value> ...'\n");
    cli_output(unused_cli_argument, output);
  }
    129c:	b067      	add	sp, #412	; 0x19c
    129e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:81
      buffer[count] = (uint8_t)value_to_write;
    12a2:	9b05      	ldr	r3, [sp, #20]
    12a4:	f808 3004 	strb.w	r3, [r8, r4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:82
      ++count;
    12a8:	3401      	adds	r4, #1
    12aa:	e7d9      	b.n	1260 <cli__i2c_write+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:90 (discriminator 3)
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    12ac:	9a04      	ldr	r2, [sp, #16]
    12ae:	f818 3005 	ldrb.w	r3, [r8, r5]
    12b2:	9300      	str	r3, [sp, #0]
    12b4:	442a      	add	r2, r5
    12b6:	4649      	mov	r1, r9
    12b8:	4630      	mov	r0, r6
    12ba:	f000 fbc8 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:91 (discriminator 3)
        cli_output(unused_cli_argument, output);
    12be:	4631      	mov	r1, r6
    12c0:	2000      	movs	r0, #0
    12c2:	47b8      	blx	r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:89 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    12c4:	3501      	adds	r5, #1
    12c6:	e7e7      	b.n	1298 <cli__i2c_write+0x84>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:94
      sl_string__set(output, "I2C bus error during i2c__write_slave_data()\n");
    12c8:	4909      	ldr	r1, [pc, #36]	; (12f0 <cli__i2c_write+0xdc>)
    12ca:	4630      	mov	r0, r6
    12cc:	f000 fbdd 	bl	1a8a <sl_string__set>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:95
      cli_output(unused_cli_argument, output);
    12d0:	4631      	mov	r1, r6
    12d2:	4648      	mov	r0, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:99
    cli_output(unused_cli_argument, output);
    12d4:	47b8      	blx	r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:101
    12d6:	e7e1      	b.n	129c <cli__i2c_write+0x88>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:98
    sl_string__set(output, "Command error: Write command should be 'i2c write 0xDD 0xRR <value> <value> ...'\n");
    12d8:	4906      	ldr	r1, [pc, #24]	; (12f4 <cli__i2c_write+0xe0>)
    12da:	4630      	mov	r0, r6
    12dc:	f000 fbd5 	bl	1a8a <sl_string__set>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:99
    cli_output(unused_cli_argument, output);
    12e0:	4631      	mov	r1, r6
    12e2:	4620      	mov	r0, r4
    12e4:	e7f6      	b.n	12d4 <cli__i2c_write+0xc0>
    12e6:	bf00      	nop
    12e8:	0000af27 	.word	0x0000af27
    12ec:	0000af31 	.word	0x0000af31
    12f0:	0000af68 	.word	0x0000af68
    12f4:	0000af96 	.word	0x0000af96
    12f8:	0000af51 	.word	0x0000af51

000012fc <cli__i2c>:
cli__i2c():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:12
                          app_cli__print_string_function cli_output) {
    12fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    12fe:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
  const bool read = sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    1300:	4628      	mov	r0, r5
    1302:	490e      	ldr	r1, [pc, #56]	; (133c <cli__i2c+0x40>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:12
                          app_cli__print_string_function cli_output) {
    1304:	4616      	mov	r6, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
  const bool read = sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    1306:	f000 fc52 	bl	1bae <sl_string__begins_with_ignore_case>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:16
  const bool write = sl_string__begins_with_ignore_case(user_input_minus_command_name, "write");
    130a:	490d      	ldr	r1, [pc, #52]	; (1340 <cli__i2c+0x44>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
  const bool read = sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    130c:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:16
  const bool write = sl_string__begins_with_ignore_case(user_input_minus_command_name, "write");
    130e:	4628      	mov	r0, r5
    1310:	f000 fc4d 	bl	1bae <sl_string__begins_with_ignore_case>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:17
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    1314:	2120      	movs	r1, #32
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:16
  const bool write = sl_string__begins_with_ignore_case(user_input_minus_command_name, "write");
    1316:	4607      	mov	r7, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:17
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    1318:	4628      	mov	r0, r5
    131a:	f000 fcd1 	bl	1cc0 <sl_string__erase_first_word>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:21
  if (read) {
    131e:	b12c      	cbz	r4, 132c <cli__i2c+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:22
    cli__i2c_read(command_params, cli_output);
    1320:	4631      	mov	r1, r6
    1322:	4628      	mov	r0, r5
    1324:	f7ff ff12 	bl	114c <cli__i2c_read>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:23
    command_status = APP_CLI_STATUS__SUCCESS;
    1328:	2000      	movs	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:34
}
    132a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:26
  else if (write) {
    132c:	b127      	cbz	r7, 1338 <cli__i2c+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:27
    cli__i2c_write(command_params, cli_output);
    132e:	4631      	mov	r1, r6
    1330:	4628      	mov	r0, r5
    1332:	f7ff ff6f 	bl	1214 <cli__i2c_write>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:28
    command_status = APP_CLI_STATUS__SUCCESS;
    1336:	e7f7      	b.n	1328 <cli__i2c+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:30
    command_status = APP_CLI_STATUS__HANDLER_FAILURE;
    1338:	2001      	movs	r0, #1
    133a:	e7f6      	b.n	132a <cli__i2c+0x2e>
    133c:	0000ae71 	.word	0x0000ae71
    1340:	0000ae76 	.word	0x0000ae76

00001344 <cli__crash_me>:
cli__crash_me():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:12
static void cli__task_list_print(sl_string_t user_input_minus_command_name, app_cli__print_string_function cli_output);
#endif

app_cli_status_e cli__crash_me(app_cli__argument_t argument, sl_string_t user_input_minus_command_name,
                               app_cli__print_string_function cli_output) {
  *((uint32_t *)NULL) = 0xDEADBEEF;
    1344:	2300      	movs	r3, #0
    1346:	601b      	str	r3, [r3, #0]
    1348:	deff      	udf	#255	; 0xff
    134a:	Address 0x000000000000134a is out of bounds.


0000134c <cli__task_list>:
cli__task_list():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:18
  return APP_CLI_STATUS__SUCCESS;
}

#if (0 != configUSE_TRACE_FACILITY)
app_cli_status_e cli__task_list(app_cli__argument_t argument, sl_string_t user_input_minus_command_name,
                                app_cli__print_string_function cli_output) {
    134c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1350:	b089      	sub	sp, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:19
  const int sleep_time = sl_string__to_int(user_input_minus_command_name);
    1352:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:18
                                app_cli__print_string_function cli_output) {
    1354:	af04      	add	r7, sp, #16
    1356:	460d      	mov	r5, r1
    1358:	4691      	mov	r9, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:19
  const int sleep_time = sl_string__to_int(user_input_minus_command_name);
    135a:	f000 fb65 	bl	1a28 <sl_string__to_int>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:20
  if (sleep_time > 0) {
    135e:	1e04      	subs	r4, r0, #0
    1360:	dd04      	ble.n	136c <cli__task_list+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:21
    vTaskResetRunTimeStats();
    1362:	f002 fac7 	bl	38f4 <vTaskResetRunTimeStats>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:22
    vTaskDelay(sleep_time);
    1366:	4620      	mov	r0, r4
    1368:	f001 ff2a 	bl	31c0 <vTaskDelay>
cli__task_list_print():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:38
  // Enum to char : eRunning, eReady, eBlocked, eSuspended, eDeleted
  static const char *const task_status_table[] = {"running", " ready ", "blocked", "suspend", "deleted"};

  // Limit the tasks to avoid heap allocation.
  const unsigned portBASE_TYPE max_tasks = 10;
  TaskStatus_t status[max_tasks];
    136c:	b0da      	sub	sp, #360	; 0x168
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:39
  uint32_t total_cpu_runtime = 0;
    136e:	2400      	movs	r4, #0
    1370:	60fc      	str	r4, [r7, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:43
  uint32_t total_tasks_runtime = 0;

  void *unused_cli_param = NULL;
  const uint32_t total_run_time = portGET_RUN_TIME_COUNTER_VALUE();
    1372:	f000 fb0f 	bl	1994 <freertos_hooks__get_run_time_counter_value>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:38
  TaskStatus_t status[max_tasks];
    1376:	f10d 0b10 	add.w	fp, sp, #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:43
  const uint32_t total_run_time = portGET_RUN_TIME_COUNTER_VALUE();
    137a:	6078      	str	r0, [r7, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:44
  const unsigned portBASE_TYPE task_count = uxTaskGetSystemState(&status[0], max_tasks, &total_cpu_runtime);
    137c:	f107 020c 	add.w	r2, r7, #12
    1380:	210a      	movs	r1, #10
    1382:	4658      	mov	r0, fp
    1384:	f002 f956 	bl	3634 <uxTaskGetSystemState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:46

  sl_string__printf(output_string, "%10s  Status Pr Stack CPU%%          Time\n", "Name");
    1388:	4a22      	ldr	r2, [pc, #136]	; (1414 <cli__task_list+0xc8>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:44
  const unsigned portBASE_TYPE task_count = uxTaskGetSystemState(&status[0], max_tasks, &total_cpu_runtime);
    138a:	6038      	str	r0, [r7, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:46
  sl_string__printf(output_string, "%10s  Status Pr Stack CPU%%          Time\n", "Name");
    138c:	4922      	ldr	r1, [pc, #136]	; (1418 <cli__task_list+0xcc>)
    138e:	4628      	mov	r0, r5
    1390:	f000 fb5d 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:47
  cli_output(unused_cli_param, output_string);
    1394:	4629      	mov	r1, r5
    1396:	4620      	mov	r0, r4
    1398:	47c8      	blx	r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:49

  for (unsigned priority_number = 0; priority_number < configMAX_PRIORITIES; priority_number++) {
    139a:	46a0      	mov	r8, r4
    139c:	465e      	mov	r6, fp
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:51
    /* Print in sorted priority order */
    for (unsigned i = 0; i < task_count; i++) {
    139e:	f04f 0a00 	mov.w	sl, #0
    13a2:	e020      	b.n	13e6 <cli__task_list+0x9a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:53
      const TaskStatus_t *task = &status[i];
      if (task->uxBasePriority == priority_number) {
    13a4:	6973      	ldr	r3, [r6, #20]
    13a6:	4543      	cmp	r3, r8
    13a8:	d11a      	bne.n	13e0 <cli__task_list+0x94>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:54
        total_tasks_runtime += task->ulRunTimeCounter;
    13aa:	69b2      	ldr	r2, [r6, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:56

        const unsigned cpu_percent = (0 == total_cpu_runtime) ? 0 : task->ulRunTimeCounter / (total_cpu_runtime / 100);
    13ac:	68fb      	ldr	r3, [r7, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:54
        total_tasks_runtime += task->ulRunTimeCounter;
    13ae:	4414      	add	r4, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:56
        const unsigned cpu_percent = (0 == total_cpu_runtime) ? 0 : task->ulRunTimeCounter / (total_cpu_runtime / 100);
    13b0:	b123      	cbz	r3, 13bc <cli__task_list+0x70>
    13b2:	2164      	movs	r1, #100	; 0x64
    13b4:	fbb3 f3f1 	udiv	r3, r3, r1
    13b8:	fbb2 f3f3 	udiv	r3, r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:61
        const unsigned time_us = task->ulRunTimeCounter;
        const unsigned stack_in_bytes = (sizeof(void *) * task->usStackHighWaterMark);

        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n", task->pcTaskName,
                          task_status_table[task->eCurrentState], (unsigned)task->uxBasePriority, stack_in_bytes,
    13bc:	7b31      	ldrb	r1, [r6, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:60
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n", task->pcTaskName,
    13be:	e9cd 3202 	strd	r3, r2, [sp, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:58
        const unsigned stack_in_bytes = (sizeof(void *) * task->usStackHighWaterMark);
    13c2:	8c33      	ldrh	r3, [r6, #32]
    13c4:	009b      	lsls	r3, r3, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:60
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n", task->pcTaskName,
    13c6:	e9cd 8300 	strd	r8, r3, [sp]
    13ca:	4b14      	ldr	r3, [pc, #80]	; (141c <cli__task_list+0xd0>)
    13cc:	6872      	ldr	r2, [r6, #4]
    13ce:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    13d2:	4913      	ldr	r1, [pc, #76]	; (1420 <cli__task_list+0xd4>)
    13d4:	4628      	mov	r0, r5
    13d6:	f000 fb3a 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:63
                          cpu_percent, time_us);
        cli_output(unused_cli_param, output_string);
    13da:	4629      	mov	r1, r5
    13dc:	2000      	movs	r0, #0
    13de:	47c8      	blx	r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:51
    for (unsigned i = 0; i < task_count; i++) {
    13e0:	f10a 0a01 	add.w	sl, sl, #1
    13e4:	3624      	adds	r6, #36	; 0x24
    13e6:	683b      	ldr	r3, [r7, #0]
    13e8:	4553      	cmp	r3, sl
    13ea:	d1db      	bne.n	13a4 <cli__task_list+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:49
  for (unsigned priority_number = 0; priority_number < configMAX_PRIORITIES; priority_number++) {
    13ec:	f108 0801 	add.w	r8, r8, #1
    13f0:	f1b8 0f0a 	cmp.w	r8, #10
    13f4:	d1d2      	bne.n	139c <cli__task_list+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:68
      }
    }
  }

  sl_string__printf(output_string, "Overhead: %u uS\n", (unsigned)(total_run_time - total_tasks_runtime));
    13f6:	687b      	ldr	r3, [r7, #4]
    13f8:	490a      	ldr	r1, [pc, #40]	; (1424 <cli__task_list+0xd8>)
    13fa:	1b1a      	subs	r2, r3, r4
    13fc:	4628      	mov	r0, r5
    13fe:	f000 fb26 	bl	1a4e <sl_string__printf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:69
  cli_output(unused_cli_param, output_string);
    1402:	4629      	mov	r1, r5
    1404:	2000      	movs	r0, #0
    1406:	47c8      	blx	r9
cli__task_list():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:30
}
    1408:	2000      	movs	r0, #0
    140a:	3714      	adds	r7, #20
    140c:	46bd      	mov	sp, r7
    140e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1412:	bf00      	nop
    1414:	0000b01f 	.word	0x0000b01f
    1418:	0000b024 	.word	0x0000b024
    141c:	0000b0a0 	.word	0x0000b0a0
    1420:	0000b04f 	.word	0x0000b04f
    1424:	0000b06c 	.word	0x0000b06c

00001428 <cli__task_control>:
cli__task_control():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:81
}
#endif /* configUSE_TRACE_FACILITY */

// Write in Watchdog Lab
app_cli_status_e cli__task_control(app_cli__argument_t argument, sl_string_t user_input_minus_command_name,
                                   app_cli__print_string_function cli_output) {
    1428:	b530      	push	{r4, r5, lr}
    142a:	460c      	mov	r4, r1
    142c:	b08b      	sub	sp, #44	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:86
  sl_string_t s = user_input_minus_command_name;

  // If the user types 'taskcontrol suspend led0' then we need to suspend a task with the name of 'led0'
  // In this case, the user_input_minus_command_name will be set to 'suspend led0' with the command-name removed
  if (sl_string__begins_with_ignore_case(s, "suspend")) {
    142e:	4916      	ldr	r1, [pc, #88]	; (1488 <cli__task_control+0x60>)
    1430:	4620      	mov	r0, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:81
                                   app_cli__print_string_function cli_output) {
    1432:	4615      	mov	r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:86
  if (sl_string__begins_with_ignore_case(s, "suspend")) {
    1434:	f000 fbbb 	bl	1bae <sl_string__begins_with_ignore_case>
    1438:	b188      	cbz	r0, 145e <cli__task_control+0x36>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:90
    // Use sl_string API to remove the first word, such that variable 's' will equal to 'led0'
    char temp[20];
    char name[20];
    sl_string__scanf(s, "%20s %20s", temp, name);
    143a:	ab05      	add	r3, sp, #20
    143c:	466a      	mov	r2, sp
    143e:	4913      	ldr	r1, [pc, #76]	; (148c <cli__task_control+0x64>)
    1440:	4620      	mov	r0, r4
    1442:	f000 fb11 	bl	1a68 <sl_string__scanf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:92

    TaskHandle_t task_handle = xTaskGetHandle(name);
    1446:	a805      	add	r0, sp, #20
    1448:	f001 fede 	bl	3208 <xTaskGetHandle>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:93
    if (NULL == task_handle) {
    144c:	b910      	cbnz	r0, 1454 <cli__task_control+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:110
    sl_string__scanf(s, "%20s %20s", temp, name);

    TaskHandle_t task_handle = xTaskGetHandle(name);
    if (NULL == task_handle) {
      // sl_string__insert_at(s, "Could not find a task with name:");
      cli_output(NULL, s);
    144e:	4621      	mov	r1, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:117
      vTaskResume(task_handle);
  }
  // we can add more commands here.
  // else if (sl_string__begins_with_ignore_case(s, "more"))
  else {
    cli_output(NULL, "ERROR, command read fails!!!\n");
    1450:	47a8      	blx	r5
    1452:	e001      	b.n	1458 <cli__task_control+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:99
      vTaskSuspend(task_handle);
    1454:	f001 ff74 	bl	3340 <vTaskSuspend>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:121
  }

  return APP_CLI_STATUS__SUCCESS;
}
    1458:	2000      	movs	r0, #0
    145a:	b00b      	add	sp, #44	; 0x2c
    145c:	bd30      	pop	{r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:101
  } else if (sl_string__begins_with_ignore_case(s, "resume")) {
    145e:	490c      	ldr	r1, [pc, #48]	; (1490 <cli__task_control+0x68>)
    1460:	4620      	mov	r0, r4
    1462:	f000 fba4 	bl	1bae <sl_string__begins_with_ignore_case>
    1466:	b168      	cbz	r0, 1484 <cli__task_control+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:105
    sl_string__scanf(s, "%20s %20s", temp, name);
    1468:	ab05      	add	r3, sp, #20
    146a:	466a      	mov	r2, sp
    146c:	4907      	ldr	r1, [pc, #28]	; (148c <cli__task_control+0x64>)
    146e:	4620      	mov	r0, r4
    1470:	f000 fafa 	bl	1a68 <sl_string__scanf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:107
    TaskHandle_t task_handle = xTaskGetHandle(name);
    1474:	a805      	add	r0, sp, #20
    1476:	f001 fec7 	bl	3208 <xTaskGetHandle>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:108
    if (NULL == task_handle) {
    147a:	2800      	cmp	r0, #0
    147c:	d0e7      	beq.n	144e <cli__task_control+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:112
      vTaskResume(task_handle);
    147e:	f001 fd13 	bl	2ea8 <vTaskResume>
    1482:	e7e9      	b.n	1458 <cli__task_control+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:117
    cli_output(NULL, "ERROR, command read fails!!!\n");
    1484:	4903      	ldr	r1, [pc, #12]	; (1494 <cli__task_control+0x6c>)
    1486:	e7e3      	b.n	1450 <cli__task_control+0x28>
    1488:	0000afe8 	.word	0x0000afe8
    148c:	0000aff0 	.word	0x0000aff0
    1490:	0000affa 	.word	0x0000affa
    1494:	0000b001 	.word	0x0000b001

00001498 <delay__us>:
delay__us():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:15
void delay__ms(uint32_t ms) {
  const uint64_t us = UINT64_C(1000) * ms;
  delay__us(us);
}

void delay__us(uint64_t us) {
    1498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    149a:	4604      	mov	r4, r0
    149c:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:16
  const uint64_t time_now_us = sys_time__get_uptime_us();
    149e:	f000 f8fd 	bl	169c <sys_time__get_uptime_us>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:17
  const uint64_t time_to_wait_us = time_now_us + us;
    14a2:	1906      	adds	r6, r0, r4
    14a4:	eb41 0705 	adc.w	r7, r1, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:20

  // Use the RTOS for the larger delay period in milliseconds since this will sleep the CPU
  const bool rtos_is_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    14a8:	f002 f910 	bl	36cc <xTaskGetSchedulerState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:23

  // TODO: This assumes 1Khz OS tick rate
  if (rtos_is_running && us > 1000) {
    14ac:	2802      	cmp	r0, #2
    14ae:	d10c      	bne.n	14ca <delay__us+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:23 (discriminator 1)
    14b0:	2300      	movs	r3, #0
    14b2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    14b6:	42ab      	cmp	r3, r5
    14b8:	bf08      	it	eq
    14ba:	42a2      	cmpeq	r2, r4
    14bc:	d205      	bcs.n	14ca <delay__us+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:24
    const uint32_t ms = us / 1000;
    14be:	4620      	mov	r0, r4
    14c0:	4629      	mov	r1, r5
    14c2:	f003 fc75 	bl	4db0 <__aeabi_uldivmod>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:25
    vTaskDelay(ms);
    14c6:	f001 fe7b 	bl	31c0 <vTaskDelay>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:29 (discriminator 1)
  }

  // Eat the CPU for the remaining microseconds
  while (sys_time__get_uptime_us() < time_to_wait_us) {
    14ca:	f000 f8e7 	bl	169c <sys_time__get_uptime_us>
    14ce:	42b9      	cmp	r1, r7
    14d0:	bf08      	it	eq
    14d2:	42b0      	cmpeq	r0, r6
    14d4:	d3f9      	bcc.n	14ca <delay__us+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:31
  }
}
    14d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000014d8 <delay__ms>:
delay__ms():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/delay.c:12
  delay__us(us);
    14d8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    14dc:	fba0 0103 	umull	r0, r1, r0, r3
    14e0:	f7ff bfda 	b.w	1498 <delay__us>

000014e4 <peripherals_init>:
peripherals_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:17
static void peripherals_init__startup_sequence(void);
static void peripherals_init__mount_sd_card(void);
static void peripherals_init__uart0_init(void);
static void peripherals_init__i2c_init(void);

void peripherals_init(void) {
    14e4:	b530      	push	{r4, r5, lr}
    14e6:	b085      	sub	sp, #20
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:18
  board_io__initialize();
    14e8:	f002 fa56 	bl	3998 <board_io__initialize>
peripherals_init__startup_sequence():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:36

  peripherals_init__i2c_init();
}

static void peripherals_init__startup_sequence(void) {
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(), board_io__get_led2(), board_io__get_led3()};
    14ec:	f002 faee 	bl	3acc <board_io__get_led0>
    14f0:	f8ad 0008 	strh.w	r0, [sp, #8]
    14f4:	f002 fafc 	bl	3af0 <board_io__get_led1>
    14f8:	f8ad 000a 	strh.w	r0, [sp, #10]
    14fc:	f002 fb0a 	bl	3b14 <board_io__get_led2>
    1500:	f8ad 000c 	strh.w	r0, [sp, #12]
    1504:	f002 fb18 	bl	3b38 <board_io__get_led3>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:37
  for (size_t number = 0; number < 32; number++) {
    1508:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:36
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(), board_io__get_led2(), board_io__get_led3()};
    150a:	f8ad 000e 	strh.w	r0, [sp, #14]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:38
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    150e:	aa04      	add	r2, sp, #16
    1510:	f004 0303 	and.w	r3, r4, #3
    1514:	eb02 0343 	add.w	r3, r2, r3, lsl #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:37
  for (size_t number = 0; number < 32; number++) {
    1518:	3401      	adds	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:38
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    151a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
    151e:	f002 fbc9 	bl	3cb4 <gpio__toggle>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:39
    delay__ms(50);
    1522:	2032      	movs	r0, #50	; 0x32
    1524:	f7ff ffd8 	bl	14d8 <delay__ms>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:37
  for (size_t number = 0; number < 32; number++) {
    1528:	2c20      	cmp	r4, #32
    152a:	d1f0      	bne.n	150e <peripherals_init+0x2a>
peripherals_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:22
  ssp2__initialize(spi_sd_max_speed_khz);
    152c:	f645 50c0 	movw	r0, #24000	; 0x5dc0
    1530:	f002 fe88 	bl	4244 <ssp2__initialize>
peripherals_init__mount_sd_card():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:50
  static FATFS sd_card_drive;

  const BYTE option_mount_later = 0; // Actually mounts later when the first file is accessed
  const TCHAR *default_drive = (const TCHAR *)"";

  f_mount(&sd_card_drive, default_drive, option_mount_later);
    1534:	2200      	movs	r2, #0
    1536:	4923      	ldr	r1, [pc, #140]	; (15c4 <peripherals_init+0xe0>)
    1538:	4823      	ldr	r0, [pc, #140]	; (15c8 <peripherals_init+0xe4>)
    153a:	f7ff f987 	bl	84c <f_mount>
peripherals_init__uart0_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:55
}

static void peripherals_init__uart0_init(void) {
  // Do not do any bufferring for standard input otherwise getchar(), scanf() may not work
  setvbuf(stdin, 0, _IONBF, 0);
    153e:	4b23      	ldr	r3, [pc, #140]	; (15cc <peripherals_init+0xe8>)
    1540:	6818      	ldr	r0, [r3, #0]
    1542:	2300      	movs	r3, #0
    1544:	4619      	mov	r1, r3
    1546:	2202      	movs	r2, #2
    1548:	6840      	ldr	r0, [r0, #4]
    154a:	f004 ff5d 	bl	6408 <setvbuf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:58

  // Note: PIN functions are initialized by board_io__initialize() for P0.2(Tx) and P0.3(Rx)
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    154e:	f7fe fe69 	bl	224 <clock__get_peripheral_clock_hz>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:72
  // Memory where the queue actually stores the data
  static uint8_t rxq_storage[32];
  static uint8_t txq_storage[128];

  // Make UART more efficient by backing it with RTOS queues (optional but highly recommended with RTOS)
  QueueHandle_t rxq_handle = xQueueCreateStatic(sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
    1552:	2500      	movs	r5, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:58
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    1554:	4601      	mov	r1, r0
    1556:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    155a:	2000      	movs	r0, #0
    155c:	f002 ff06 	bl	436c <uart__init>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:72
  QueueHandle_t rxq_handle = xQueueCreateStatic(sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
    1560:	9500      	str	r5, [sp, #0]
    1562:	4b1b      	ldr	r3, [pc, #108]	; (15d0 <peripherals_init+0xec>)
    1564:	4a1b      	ldr	r2, [pc, #108]	; (15d4 <peripherals_init+0xf0>)
    1566:	2101      	movs	r1, #1
    1568:	4620      	mov	r0, r4
    156a:	f000 feed 	bl	2348 <xQueueGenericCreateStatic>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:73
  QueueHandle_t txq_handle = xQueueCreateStatic(sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);
    156e:	4b1a      	ldr	r3, [pc, #104]	; (15d8 <peripherals_init+0xf4>)
    1570:	9500      	str	r5, [sp, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:72
  QueueHandle_t rxq_handle = xQueueCreateStatic(sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
    1572:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:73
  QueueHandle_t txq_handle = xQueueCreateStatic(sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);
    1574:	4a19      	ldr	r2, [pc, #100]	; (15dc <peripherals_init+0xf8>)
    1576:	2101      	movs	r1, #1
    1578:	2080      	movs	r0, #128	; 0x80
    157a:	f000 fee5 	bl	2348 <xQueueGenericCreateStatic>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:75

  uart__enable_queues(UART__0, txq_handle, rxq_handle);
    157e:	4622      	mov	r2, r4
    1580:	4601      	mov	r1, r0
    1582:	4628      	mov	r0, r5
    1584:	f002 ff3e 	bl	4404 <uart__enable_queues>
peripherals_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:30
  printf("\n%s\n%s(): Low level startup\n", line, __FUNCTION__);
    1588:	4a15      	ldr	r2, [pc, #84]	; (15e0 <peripherals_init+0xfc>)
    158a:	4916      	ldr	r1, [pc, #88]	; (15e4 <peripherals_init+0x100>)
    158c:	4816      	ldr	r0, [pc, #88]	; (15e8 <peripherals_init+0x104>)
peripherals_init__i2c_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:84
  const uint32_t i2c_speed_hz = UINT32_C(400) * 1000;
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());

  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    if (i2c__detect(I2C__2, slave_address)) {
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    158e:	4d17      	ldr	r5, [pc, #92]	; (15ec <peripherals_init+0x108>)
peripherals_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:30
  printf("\n%s\n%s(): Low level startup\n", line, __FUNCTION__);
    1590:	f004 fe88 	bl	62a4 <iprintf>
peripherals_init__i2c_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:80
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());
    1594:	f7fe fe46 	bl	224 <clock__get_peripheral_clock_hz>
    1598:	4915      	ldr	r1, [pc, #84]	; (15f0 <peripherals_init+0x10c>)
    159a:	4602      	mov	r2, r0
    159c:	2002      	movs	r0, #2
    159e:	f002 fcc3 	bl	3f28 <i2c__initialize>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:82
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    15a2:	2402      	movs	r4, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:83
    if (i2c__detect(I2C__2, slave_address)) {
    15a4:	b2e1      	uxtb	r1, r4
    15a6:	2002      	movs	r0, #2
    15a8:	f002 fd7e 	bl	40a8 <i2c__detect>
    15ac:	b118      	cbz	r0, 15b6 <peripherals_init+0xd2>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:84
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    15ae:	4621      	mov	r1, r4
    15b0:	4628      	mov	r0, r5
    15b2:	f004 fe77 	bl	62a4 <iprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:82
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    15b6:	3402      	adds	r4, #2
    15b8:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    15bc:	d1f2      	bne.n	15a4 <peripherals_init+0xc0>
peripherals_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/peripherals_init.c:33
}
    15be:	b005      	add	sp, #20
    15c0:	bd30      	pop	{r4, r5, pc}
    15c2:	bf00      	nop
    15c4:	0000ac43 	.word	0x0000ac43
    15c8:	10000c2c 	.word	0x10000c2c
    15cc:	10000174 	.word	0x10000174
    15d0:	10000bdc 	.word	0x10000bdc
    15d4:	10000bbc 	.word	0x10000bbc
    15d8:	10000ee4 	.word	0x10000ee4
    15dc:	10000e64 	.word	0x10000e64
    15e0:	0000b0b4 	.word	0x0000b0b4
    15e4:	0000b0c5 	.word	0x0000b0c5
    15e8:	0000b116 	.word	0x0000b116
    15ec:	0000b133 	.word	0x0000b133
    15f0:	00061a80 	.word	0x00061a80

000015f4 <spi2_mutex__acquire>:
spi2_mutex__acquire():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:10
#include "task.h"

static StaticSemaphore_t spi2_mutex_memory;
static SemaphoreHandle_t spi2_mutex_handle;

void spi2_mutex__acquire(void) {
    15f4:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:11
  if (!spi2_mutex_handle) {
    15f6:	4c0a      	ldr	r4, [pc, #40]	; (1620 <spi2_mutex__acquire+0x2c>)
    15f8:	6823      	ldr	r3, [r4, #0]
    15fa:	b923      	cbnz	r3, 1606 <spi2_mutex__acquire+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:12
    spi2_mutex_handle = xSemaphoreCreateMutexStatic(&spi2_mutex_memory);
    15fc:	4909      	ldr	r1, [pc, #36]	; (1624 <spi2_mutex__acquire+0x30>)
    15fe:	2001      	movs	r0, #1
    1600:	f000 ffc0 	bl	2584 <xQueueCreateMutexStatic>
    1604:	6020      	str	r0, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:16
  }

  // Only acquire the mutex if the FreeRTOS is running
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    1606:	f002 f861 	bl	36cc <xTaskGetSchedulerState>
    160a:	2802      	cmp	r0, #2
    160c:	d106      	bne.n	161c <spi2_mutex__acquire+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:17
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    160e:	6820      	ldr	r0, [r4, #0]
    1610:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:19
  }
}
    1614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:17
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    1618:	f001 b92a 	b.w	2870 <xQueueSemaphoreTake>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:19
}
    161c:	bd10      	pop	{r4, pc}
    161e:	bf00      	nop
    1620:	10000f34 	.word	0x10000f34
    1624:	10000f38 	.word	0x10000f38

00001628 <spi2_mutex__release>:
spi2_mutex__release():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:21

void spi2_mutex__release(void) {
    1628:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:22
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    162a:	f002 f84f 	bl	36cc <xTaskGetSchedulerState>
    162e:	2802      	cmp	r0, #2
    1630:	d108      	bne.n	1644 <spi2_mutex__release+0x1c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:23
    xSemaphoreGive(spi2_mutex_handle);
    1632:	4805      	ldr	r0, [pc, #20]	; (1648 <spi2_mutex__release+0x20>)
    1634:	2300      	movs	r3, #0
    1636:	461a      	mov	r2, r3
    1638:	4619      	mov	r1, r3
    163a:	6800      	ldr	r0, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:25
  }
}
    163c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:23
    xSemaphoreGive(spi2_mutex_handle);
    1640:	f000 bef2 	b.w	2428 <xQueueGenericSend>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:25
}
    1644:	bd10      	pop	{r4, pc}
    1646:	bf00      	nop
    1648:	10000f34 	.word	0x10000f34

0000164c <sys_time__one_minute_isr>:
sys_time__one_minute_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static volatile uint32_t sys_time__one_minute_counter = 0;

static void sys_time__one_minute_isr(void) {
  ++sys_time__one_minute_counter;
    164c:	4a07      	ldr	r2, [pc, #28]	; (166c <sys_time__one_minute_isr+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:12
static void sys_time__one_minute_isr(void) {
    164e:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    1650:	6813      	ldr	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:16

  // Reset the HW timer manually and then clear the interrupt
  hw_timer__set_value(sys_time__hw_timer, 0);
    1652:	2100      	movs	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    1654:	3301      	adds	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    1656:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    1658:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    165a:	f002 fb87 	bl	3d6c <hw_timer__set_value>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    165e:	2100      	movs	r1, #0
    1660:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:18
}
    1662:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    1666:	f002 bb6f 	b.w	3d48 <hw_timer__acknowledge_interrupt>
    166a:	bf00      	nop
    166c:	10000f88 	.word	0x10000f88

00001670 <sys_time__init>:
sys_time__init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:26
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t peripheral_clock_hz) {
    1670:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:31
  const uint32_t prescalar_for_1us = (peripheral_clock_hz / sys_time__us_per_sec) - 1;
  const uint32_t one_minute_in_us = UINT32_C(60) * 1000 * 1000;

  // Enable the timer with 1uS resolution with an interrupt
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__one_minute_isr);
    1672:	4a07      	ldr	r2, [pc, #28]	; (1690 <sys_time__init+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:27
  const uint32_t prescalar_for_1us = (peripheral_clock_hz / sys_time__us_per_sec) - 1;
    1674:	4907      	ldr	r1, [pc, #28]	; (1694 <sys_time__init+0x24>)
    1676:	fbb0 f1f1 	udiv	r1, r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:31
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__one_minute_isr);
    167a:	2000      	movs	r0, #0
    167c:	3901      	subs	r1, #1
    167e:	f002 fb2d 	bl	3cdc <hw_timer__enable>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr, one_minute_in_us);
    1682:	2100      	movs	r1, #0
    1684:	4a04      	ldr	r2, [pc, #16]	; (1698 <sys_time__init+0x28>)
    1686:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:33
}
    1688:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr, one_minute_in_us);
    168c:	f002 bb4a 	b.w	3d24 <hw_timer__enable_match_isr>
    1690:	0000164d 	.word	0x0000164d
    1694:	000f4240 	.word	0x000f4240
    1698:	03938700 	.word	0x03938700

0000169c <sys_time__get_uptime_us>:
sys_time__get_uptime_us():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:35

uint64_t sys_time__get_uptime_us(void) {
    169c:	b570      	push	{r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:48
   * value in which case, we will loop again and pick up the new rollover count.  This avoid critical section and
   * simplifies the logic of reading sys_time__sec_counter and the 32-bit HW timer value.
   */
  do {
    before_us = hw_timer__get_value(sys_time__hw_timer);
    minutes = sys_time__one_minute_counter;
    169e:	4e08      	ldr	r6, [pc, #32]	; (16c0 <sys_time__get_uptime_us+0x24>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:47 (discriminator 1)
    before_us = hw_timer__get_value(sys_time__hw_timer);
    16a0:	2000      	movs	r0, #0
    16a2:	f002 fb5b 	bl	3d5c <hw_timer__get_value>
    16a6:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:49 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    16a8:	2000      	movs	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:48 (discriminator 1)
    minutes = sys_time__one_minute_counter;
    16aa:	6834      	ldr	r4, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:49 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    16ac:	f002 fb56 	bl	3d5c <hw_timer__get_value>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:50 (discriminator 1)
  } while (after_us < before_us);
    16b0:	4285      	cmp	r5, r0
    16b2:	d8f5      	bhi.n	16a0 <sys_time__get_uptime_us+0x4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:56

  uint64_t uptime_us = after_us;
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);

  return uptime_us;
}
    16b4:	4b03      	ldr	r3, [pc, #12]	; (16c4 <sys_time__get_uptime_us+0x28>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:53
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);
    16b6:	2100      	movs	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:56
}
    16b8:	fbe3 0104 	umlal	r0, r1, r3, r4
    16bc:	bd70      	pop	{r4, r5, r6, pc}
    16be:	bf00      	nop
    16c0:	10000f88 	.word	0x10000f88
    16c4:	03938700 	.word	0x03938700

000016c8 <sys_time__get_uptime_ms>:
sys_time__get_uptime_ms():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:58

uint64_t sys_time__get_uptime_ms(void) {
    16c8:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:59
  const uint64_t us = sys_time__get_uptime_us();
    16ca:	f7ff ffe7 	bl	169c <sys_time__get_uptime_us>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:60
  return (us / 1000);
    16ce:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    16d2:	2300      	movs	r3, #0
    16d4:	f003 fb6c 	bl	4db0 <__aeabi_uldivmod>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/sys_time.c:61
}
    16d8:	bd08      	pop	{r3, pc}

000016da <uart_puts__polled>:
uart_puts__polled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:51
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    16da:	b570      	push	{r4, r5, r6, lr}
    16dc:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:52
  const size_t message_length = strlen(message);
    16de:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:51
void uart_puts__polled(uart_e uart, const char *message) {
    16e0:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:52
  const size_t message_length = strlen(message);
    16e2:	f004 ffa2 	bl	662a <strlen>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:53
  for (size_t byte = 0; byte < message_length; byte++) {
    16e6:	1826      	adds	r6, r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:53 (discriminator 1)
    16e8:	42b4      	cmp	r4, r6
    16ea:	d105      	bne.n	16f8 <uart_puts__polled+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    16ec:	4628      	mov	r0, r5
    16ee:	210a      	movs	r1, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:57
    16f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
  uart__polled_put(uart, '\n');
    16f4:	f002 bec4 	b.w	4480 <uart__polled_put>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l4_io/sources/uart_printf.c:54 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    16f8:	f814 1b01 	ldrb.w	r1, [r4], #1
    16fc:	4628      	mov	r0, r5
    16fe:	f002 febf 	bl	4480 <uart__polled_put>
    1702:	e7f1      	b.n	16e8 <uart_puts__polled+0xe>

00001704 <i2c_slave_functionc>:
i2c_slave_functionc():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:65
  LPC_I2C2->CONSET |= (1 << 2) | (1 << 6);
  lpc_peripheral__enable_interrupt(I2C2_IRQn, i2c_slave_functionc);
  NVIC_EnableIRQ(I2C2_IRQn);
}

void i2c_slave_functionc() {
    1704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:66
  switch (LPC_I2C2->STAT) {
    1706:	4c57      	ldr	r4, [pc, #348]	; (1864 <i2c_slave_functionc+0x160>)
    1708:	4d57      	ldr	r5, [pc, #348]	; (1868 <i2c_slave_functionc+0x164>)
    170a:	6863      	ldr	r3, [r4, #4]
    170c:	682a      	ldr	r2, [r5, #0]
    170e:	2ba0      	cmp	r3, #160	; 0xa0
    1710:	68d0      	ldr	r0, [r2, #12]
    1712:	462f      	mov	r7, r5
    1714:	d07e      	beq.n	1814 <i2c_slave_functionc+0x110>
    1716:	d81a      	bhi.n	174e <i2c_slave_functionc+0x4a>
    1718:	2b68      	cmp	r3, #104	; 0x68
    171a:	d04a      	beq.n	17b2 <i2c_slave_functionc+0xae>
    171c:	d80e      	bhi.n	173c <i2c_slave_functionc+0x38>
    171e:	2b60      	cmp	r3, #96	; 0x60
    1720:	d03b      	beq.n	179a <i2c_slave_functionc+0x96>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:170
    fprintf(stderr, "case 0xC8\n");
    LPC_I2C2->CONSET = 0x04; // set AA bit
    LPC_I2C2->CONCLR = 0x08; // clear SI flag
    break;
  default:
    fprintf(stderr, "Error! Message: %X !!!\n", LPC_I2C2->STAT);
    1722:	4c50      	ldr	r4, [pc, #320]	; (1864 <i2c_slave_functionc+0x160>)
    1724:	4951      	ldr	r1, [pc, #324]	; (186c <i2c_slave_functionc+0x168>)
    1726:	6862      	ldr	r2, [r4, #4]
    1728:	f003 fcc8 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:171
    fprintf(stderr, "Index is %d \n", memory_index);
    172c:	683b      	ldr	r3, [r7, #0]
    172e:	4a50      	ldr	r2, [pc, #320]	; (1870 <i2c_slave_functionc+0x16c>)
    1730:	4950      	ldr	r1, [pc, #320]	; (1874 <i2c_slave_functionc+0x170>)
    1732:	7812      	ldrb	r2, [r2, #0]
    1734:	68d8      	ldr	r0, [r3, #12]
    1736:	f003 fcc1 	bl	50bc <fiprintf>
    173a:	e054      	b.n	17e6 <i2c_slave_functionc+0xe2>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:66
  switch (LPC_I2C2->STAT) {
    173c:	2b80      	cmp	r3, #128	; 0x80
    173e:	d03e      	beq.n	17be <i2c_slave_functionc+0xba>
    1740:	2b88      	cmp	r3, #136	; 0x88
    1742:	d1ee      	bne.n	1722 <i2c_slave_functionc+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:114
    fprintf(stderr, "case 0x88\n");
    1744:	4601      	mov	r1, r0
    1746:	484c      	ldr	r0, [pc, #304]	; (1878 <i2c_slave_functionc+0x174>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:165
    fprintf(stderr, "case 0xC8\n");
    1748:	f003 fd30 	bl	51ac <fputs>
    174c:	e049      	b.n	17e2 <i2c_slave_functionc+0xde>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:66
  switch (LPC_I2C2->STAT) {
    174e:	2bb8      	cmp	r3, #184	; 0xb8
    1750:	d07d      	beq.n	184e <i2c_slave_functionc+0x14a>
    1752:	d81b      	bhi.n	178c <i2c_slave_functionc+0x88>
    1754:	2ba8      	cmp	r3, #168	; 0xa8
    1756:	4e46      	ldr	r6, [pc, #280]	; (1870 <i2c_slave_functionc+0x16c>)
    1758:	d067      	beq.n	182a <i2c_slave_functionc+0x126>
    175a:	2bb0      	cmp	r3, #176	; 0xb0
    175c:	d1e1      	bne.n	1722 <i2c_slave_functionc+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:140
    fprintf(stderr, "case 0xB0\n");
    175e:	4601      	mov	r1, r0
    1760:	4846      	ldr	r0, [pc, #280]	; (187c <i2c_slave_functionc+0x178>)
    1762:	f003 fd23 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:142
    fprintf(stderr, "Index is %d \n", memory_index);
    1766:	682b      	ldr	r3, [r5, #0]
    1768:	4942      	ldr	r1, [pc, #264]	; (1874 <i2c_slave_functionc+0x170>)
    176a:	68d8      	ldr	r0, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:141
    memory_index = 0;
    176c:	2200      	movs	r2, #0
    176e:	7032      	strb	r2, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:142
    fprintf(stderr, "Index is %d \n", memory_index);
    1770:	f003 fca4 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:143
    LPC_I2C2->DAT = slave_memory[memory_index];
    1774:	7833      	ldrb	r3, [r6, #0]
    1776:	4a42      	ldr	r2, [pc, #264]	; (1880 <i2c_slave_functionc+0x17c>)
    1778:	5cd2      	ldrb	r2, [r2, r3]
    177a:	b2d2      	uxtb	r2, r2
    177c:	60a2      	str	r2, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:144
    LPC_I2C2->CONSET = 0x24; // set AA bit
    177e:	2224      	movs	r2, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:153
    LPC_I2C2->CONSET = 0x04; // set AA bit
    1780:	6022      	str	r2, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:155
    memory_index++;
    1782:	3301      	adds	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:154
    LPC_I2C2->CONCLR = 0x08; // clear SI flag
    1784:	2208      	movs	r2, #8
    1786:	61a2      	str	r2, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:155
    memory_index++;
    1788:	7033      	strb	r3, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:156
    break;
    178a:	e011      	b.n	17b0 <i2c_slave_functionc+0xac>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:66
  switch (LPC_I2C2->STAT) {
    178c:	2bc0      	cmp	r3, #192	; 0xc0
    178e:	d066      	beq.n	185e <i2c_slave_functionc+0x15a>
    1790:	2bc8      	cmp	r3, #200	; 0xc8
    1792:	d1c6      	bne.n	1722 <i2c_slave_functionc+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:165
    fprintf(stderr, "case 0xC8\n");
    1794:	4601      	mov	r1, r0
    1796:	483b      	ldr	r0, [pc, #236]	; (1884 <i2c_slave_functionc+0x180>)
    1798:	e7d6      	b.n	1748 <i2c_slave_functionc+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:74
    fprintf(stderr, "case 0x60\n");
    179a:	4601      	mov	r1, r0
    179c:	483a      	ldr	r0, [pc, #232]	; (1888 <i2c_slave_functionc+0x184>)
    179e:	f003 fd05 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:75
    LPC_I2C2->CONSET = 0x04; // set AA bit
    17a2:	2304      	movs	r3, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:83
    LPC_I2C2->CONSET = 0x24; // set STA and AA bit
    17a4:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:84
    LPC_I2C2->CONCLR = 0x08; // clear SI flag
    17a6:	2308      	movs	r3, #8
    17a8:	61a3      	str	r3, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:85
    memory_index = 0;        // set up slave recieve mode data buffer
    17aa:	4b31      	ldr	r3, [pc, #196]	; (1870 <i2c_slave_functionc+0x16c>)
    17ac:	2200      	movs	r2, #0
    17ae:	701a      	strb	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:175
    LPC_I2C2->CONCLR = 0x08; // clear SI flag
    break;
  }
}
    17b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:82
    fprintf(stderr, "case 0x68\n");
    17b2:	4601      	mov	r1, r0
    17b4:	4835      	ldr	r0, [pc, #212]	; (188c <i2c_slave_functionc+0x188>)
    17b6:	f003 fcf9 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:83
    LPC_I2C2->CONSET = 0x24; // set STA and AA bit
    17ba:	2324      	movs	r3, #36	; 0x24
    17bc:	e7f2      	b.n	17a4 <i2c_slave_functionc+0xa0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:92
    if (!start) { // first time
    17be:	4e34      	ldr	r6, [pc, #208]	; (1890 <i2c_slave_functionc+0x18c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:90
    fprintf(stderr, "case 0x80\n");
    17c0:	4601      	mov	r1, r0
    17c2:	4834      	ldr	r0, [pc, #208]	; (1894 <i2c_slave_functionc+0x190>)
    17c4:	f003 fcf2 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:92
    if (!start) { // first time
    17c8:	7833      	ldrb	r3, [r6, #0]
    17ca:	b973      	cbnz	r3, 17ea <i2c_slave_functionc+0xe6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:93
      fprintf(stderr, "Index is %d \n", memory_index);
    17cc:	682b      	ldr	r3, [r5, #0]
    17ce:	4f28      	ldr	r7, [pc, #160]	; (1870 <i2c_slave_functionc+0x16c>)
    17d0:	68d8      	ldr	r0, [r3, #12]
    17d2:	783a      	ldrb	r2, [r7, #0]
    17d4:	4927      	ldr	r1, [pc, #156]	; (1874 <i2c_slave_functionc+0x170>)
    17d6:	f003 fc71 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:94
      memory_index = LPC_I2C2->DAT;
    17da:	68a3      	ldr	r3, [r4, #8]
    17dc:	703b      	strb	r3, [r7, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:95
      start = true;
    17de:	2301      	movs	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:103
        memory_index++;
    17e0:	7033      	strb	r3, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:166
    LPC_I2C2->CONSET = 0x04; // set AA bit
    17e2:	2304      	movs	r3, #4
    17e4:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:172
    LPC_I2C2->CONCLR = 0x08; // clear SI flag
    17e6:	2308      	movs	r3, #8
    17e8:	e012      	b.n	1810 <i2c_slave_functionc+0x10c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:100
      if (value = LPC_I2C2->DAT) { // not the last one
    17ea:	68a3      	ldr	r3, [r4, #8]
    17ec:	4f2a      	ldr	r7, [pc, #168]	; (1898 <i2c_slave_functionc+0x194>)
    17ee:	b2db      	uxtb	r3, r3
    17f0:	703b      	strb	r3, [r7, #0]
    17f2:	b163      	cbz	r3, 180e <i2c_slave_functionc+0x10a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:101
        fprintf(stderr, "Index is %d \n", memory_index);
    17f4:	682b      	ldr	r3, [r5, #0]
    17f6:	4e1e      	ldr	r6, [pc, #120]	; (1870 <i2c_slave_functionc+0x16c>)
    17f8:	491e      	ldr	r1, [pc, #120]	; (1874 <i2c_slave_functionc+0x170>)
    17fa:	7832      	ldrb	r2, [r6, #0]
    17fc:	68d8      	ldr	r0, [r3, #12]
    17fe:	f003 fc5d 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:102
        slave_memory[memory_index] = value;
    1802:	7833      	ldrb	r3, [r6, #0]
    1804:	4a1e      	ldr	r2, [pc, #120]	; (1880 <i2c_slave_functionc+0x17c>)
    1806:	7839      	ldrb	r1, [r7, #0]
    1808:	54d1      	strb	r1, [r2, r3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:103
        memory_index++;
    180a:	3301      	adds	r3, #1
    180c:	e7e8      	b.n	17e0 <i2c_slave_functionc+0xdc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:108
        LPC_I2C2->CONCLR = 0x0C; // clear SI flag and AA bit
    180e:	230c      	movs	r3, #12
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:172
    LPC_I2C2->CONCLR = 0x08; // clear SI flag
    1810:	61a3      	str	r3, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:175
}
    1812:	e7cd      	b.n	17b0 <i2c_slave_functionc+0xac>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:120
    fprintf(stderr, "case 0xA0\n");
    1814:	4601      	mov	r1, r0
    1816:	4821      	ldr	r0, [pc, #132]	; (189c <i2c_slave_functionc+0x198>)
    1818:	f003 fcc8 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:121
    start = false;
    181c:	4b1c      	ldr	r3, [pc, #112]	; (1890 <i2c_slave_functionc+0x18c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:122
    fprintf(stderr, "END!!!\n");
    181e:	4820      	ldr	r0, [pc, #128]	; (18a0 <i2c_slave_functionc+0x19c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:121
    start = false;
    1820:	2200      	movs	r2, #0
    1822:	701a      	strb	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:122
    fprintf(stderr, "END!!!\n");
    1824:	682b      	ldr	r3, [r5, #0]
    1826:	68d9      	ldr	r1, [r3, #12]
    1828:	e78e      	b.n	1748 <i2c_slave_functionc+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:130
    fprintf(stderr, "case 0xA8\n");
    182a:	4601      	mov	r1, r0
    182c:	481d      	ldr	r0, [pc, #116]	; (18a4 <i2c_slave_functionc+0x1a0>)
    182e:	f003 fcbd 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:131
    memory_index = 0;
    1832:	2200      	movs	r2, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:132
    fprintf(stderr, "Index is %d \n", memory_index);
    1834:	682b      	ldr	r3, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:131
    memory_index = 0;
    1836:	7032      	strb	r2, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:151
    fprintf(stderr, "Index is %d \n", memory_index);
    1838:	68d8      	ldr	r0, [r3, #12]
    183a:	490e      	ldr	r1, [pc, #56]	; (1874 <i2c_slave_functionc+0x170>)
    183c:	f003 fc3e 	bl	50bc <fiprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:152
    LPC_I2C2->DAT = slave_memory[memory_index];
    1840:	7833      	ldrb	r3, [r6, #0]
    1842:	4a0f      	ldr	r2, [pc, #60]	; (1880 <i2c_slave_functionc+0x17c>)
    1844:	5cd2      	ldrb	r2, [r2, r3]
    1846:	b2d2      	uxtb	r2, r2
    1848:	60a2      	str	r2, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:153
    LPC_I2C2->CONSET = 0x04; // set AA bit
    184a:	2204      	movs	r2, #4
    184c:	e798      	b.n	1780 <i2c_slave_functionc+0x7c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:151
    fprintf(stderr, "Index is %d \n", memory_index);
    184e:	4e08      	ldr	r6, [pc, #32]	; (1870 <i2c_slave_functionc+0x16c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:150
    fprintf(stderr, "case 0xB8\n");
    1850:	4601      	mov	r1, r0
    1852:	4815      	ldr	r0, [pc, #84]	; (18a8 <i2c_slave_functionc+0x1a4>)
    1854:	f003 fcaa 	bl	51ac <fputs>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:151
    fprintf(stderr, "Index is %d \n", memory_index);
    1858:	682b      	ldr	r3, [r5, #0]
    185a:	7832      	ldrb	r2, [r6, #0]
    185c:	e7ec      	b.n	1838 <i2c_slave_functionc+0x134>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:159
    fprintf(stderr, "case 0xC0\n");
    185e:	4601      	mov	r1, r0
    1860:	4812      	ldr	r0, [pc, #72]	; (18ac <i2c_slave_functionc+0x1a8>)
    1862:	e771      	b.n	1748 <i2c_slave_functionc+0x44>
    1864:	400a0000 	.word	0x400a0000
    1868:	10000174 	.word	0x10000174
    186c:	0000b1de 	.word	0x0000b1de
    1870:	10000f8c 	.word	0x10000f8c
    1874:	0000b17b 	.word	0x0000b17b
    1878:	0000b189 	.word	0x0000b189
    187c:	0000b1b2 	.word	0x0000b1b2
    1880:	10000f8d 	.word	0x10000f8d
    1884:	0000b1d3 	.word	0x0000b1d3
    1888:	0000b15a 	.word	0x0000b15a
    188c:	0000b165 	.word	0x0000b165
    1890:	1000108d 	.word	0x1000108d
    1894:	0000b170 	.word	0x0000b170
    1898:	1000108e 	.word	0x1000108e
    189c:	0000b194 	.word	0x0000b194
    18a0:	0000b19f 	.word	0x0000b19f
    18a4:	0000b1a7 	.word	0x0000b1a7
    18a8:	0000b1bd 	.word	0x0000b1bd
    18ac:	0000b1c8 	.word	0x0000b1c8

000018b0 <i2c__init_slave>:
i2c__init_slave():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:58
void i2c__init_slave(uint8_t slave_address_to_respond_to) {
    18b0:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:59
  LPC_I2C2->ADR0 |= slave_address_to_respond_to;
    18b2:	4b08      	ldr	r3, [pc, #32]	; (18d4 <i2c__init_slave+0x24>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:61
  lpc_peripheral__enable_interrupt(I2C2_IRQn, i2c_slave_functionc);
    18b4:	4908      	ldr	r1, [pc, #32]	; (18d8 <i2c__init_slave+0x28>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:59
  LPC_I2C2->ADR0 |= slave_address_to_respond_to;
    18b6:	68da      	ldr	r2, [r3, #12]
    18b8:	4310      	orrs	r0, r2
    18ba:	60d8      	str	r0, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:60
  LPC_I2C2->CONSET |= (1 << 2) | (1 << 6);
    18bc:	681a      	ldr	r2, [r3, #0]
    18be:	f042 0244 	orr.w	r2, r2, #68	; 0x44
    18c2:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:61
  lpc_peripheral__enable_interrupt(I2C2_IRQn, i2c_slave_functionc);
    18c4:	200c      	movs	r0, #12
    18c6:	f002 fc47 	bl	4158 <lpc_peripheral__enable_interrupt>
__NVIC_EnableIRQ():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    18ca:	4b04      	ldr	r3, [pc, #16]	; (18dc <i2c__init_slave+0x2c>)
    18cc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    18d0:	601a      	str	r2, [r3, #0]
i2c__init_slave():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:63
}
    18d2:	bd08      	pop	{r3, pc}
    18d4:	400a0000 	.word	0x400a0000
    18d8:	00001705 	.word	0x00001705
    18dc:	e000e100 	.word	0xe000e100

000018e0 <main>:
main():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:42
int main(void) {
    18e0:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:43
  printf("I2C lab begin!!!\n");
    18e2:	4806      	ldr	r0, [pc, #24]	; (18fc <main+0x1c>)
    18e4:	f004 fd78 	bl	63d8 <puts>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:45
  i2c__init_slave(0x86);
    18e8:	2086      	movs	r0, #134	; 0x86
    18ea:	f7ff ffe1 	bl	18b0 <i2c__init_slave>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:52
  sj2_cli__init();
    18ee:	f7ff fbe9 	bl	10c4 <sj2_cli__init>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:53
  vTaskStartScheduler(); // This function never returns unless RTOS scheduler runs out of memory and fails
    18f2:	f001 fb1b 	bl	2f2c <vTaskStartScheduler>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/main.c:56
}
    18f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    18fa:	bd08      	pop	{r3, pc}
    18fc:	0000b1f6 	.word	0x0000b1f6

00001900 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:24
  while (1) {
  }
}

/// Invoked by FreeRTOS when it detects stack overflow: #if (0 != configCHECK_FOR_STACK_OVERFLOW)
void vApplicationStackOverflowHook(TaskHandle_t task_handle, signed char *task_name) {
    1900:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:25
  uart_puts__polled(UART__0, "stack overflow by this task:");
    1902:	2000      	movs	r0, #0
    1904:	4904      	ldr	r1, [pc, #16]	; (1918 <vApplicationStackOverflowHook+0x18>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:24
void vApplicationStackOverflowHook(TaskHandle_t task_handle, signed char *task_name) {
    1906:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:25
  uart_puts__polled(UART__0, "stack overflow by this task:");
    1908:	f7ff fee7 	bl	16da <uart_puts__polled>
halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:18
  uart_puts__polled(UART__0, message);
    190c:	4621      	mov	r1, r4
    190e:	2000      	movs	r0, #0
    1910:	f7ff fee3 	bl	16da <uart_puts__polled>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:20
  }
    1914:	e7fe      	b.n	1914 <vApplicationStackOverflowHook+0x14>
    1916:	bf00      	nop
    1918:	0000b339 	.word	0x0000b339

0000191c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:31
  halt((const char *)task_name);
}

// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL pointer to memory request
// #if (0 != configUSE_MALLOC_FAILED_HOOK)
void vApplicationMallocFailedHook(void) { halt("vApplicationMallocFailedHook() called; no more RAM memory"); }
    191c:	b508      	push	{r3, lr}
halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:18
  uart_puts__polled(UART__0, message);
    191e:	4902      	ldr	r1, [pc, #8]	; (1928 <vApplicationMallocFailedHook+0xc>)
    1920:	2000      	movs	r0, #0
    1922:	f7ff feda 	bl	16da <uart_puts__polled>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:20
  }
    1926:	e7fe      	b.n	1926 <vApplicationMallocFailedHook+0xa>
    1928:	0000b2ff 	.word	0x0000b2ff

0000192c <vApplicationIdleHook>:
vApplicationIdleHook():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:39
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION THAT MIGHT BLOCK
 * #if (0 != configUSE_IDLE_HOOK)
 */
void vApplicationIdleHook(void) {
  LPC_SC->PCON = 0; // Enter sleep mode
    192c:	4b02      	ldr	r3, [pc, #8]	; (1938 <vApplicationIdleHook+0xc>)
    192e:	2200      	movs	r2, #0
    1930:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:40
  __asm__("WFI");   // Wait for interrupt
    1934:	bf30      	wfi
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:41
}
    1936:	4770      	bx	lr
    1938:	400fc000 	.word	0x400fc000

0000193c <configASSERT_callback>:
configASSERT_callback():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:49
void vApplicationTickHook(void) {
  ; // This code is invoked during each RTOS tick interrupt
}

// This is needed when we use '#ifdef configASSERT'
void configASSERT_callback(unsigned line, const char *message) {
    193c:	b508      	push	{r3, lr}
    193e:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:50
  uart_puts__polled(UART__0, "FreeRTOS ASSERT() occurred indicating an error condition that should NEVER happen");
    1940:	2000      	movs	r0, #0
    1942:	490a      	ldr	r1, [pc, #40]	; (196c <configASSERT_callback+0x30>)
    1944:	f7ff fec9 	bl	16da <uart_puts__polled>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:51
  uart_puts__polled(UART__0, " - Did you call a blocking API or non FromISR() API inside an ISR?");
    1948:	4909      	ldr	r1, [pc, #36]	; (1970 <configASSERT_callback+0x34>)
    194a:	2000      	movs	r0, #0
    194c:	f7ff fec5 	bl	16da <uart_puts__polled>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:52
  uart_puts__polled(UART__0, " - Did you forget to use fprintf(stderr) in an ISR?");
    1950:	4908      	ldr	r1, [pc, #32]	; (1974 <configASSERT_callback+0x38>)
    1952:	2000      	movs	r0, #0
    1954:	f7ff fec1 	bl	16da <uart_puts__polled>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:53
  uart_puts__polled(UART__0, "Here is the line of code that halted the CPU: ");
    1958:	4907      	ldr	r1, [pc, #28]	; (1978 <configASSERT_callback+0x3c>)
    195a:	2000      	movs	r0, #0
    195c:	f7ff febd 	bl	16da <uart_puts__polled>
halt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:18
  uart_puts__polled(UART__0, message);
    1960:	4621      	mov	r1, r4
    1962:	2000      	movs	r0, #0
    1964:	f7ff feb9 	bl	16da <uart_puts__polled>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:20
  }
    1968:	e7fe      	b.n	1968 <configASSERT_callback+0x2c>
    196a:	bf00      	nop
    196c:	0000b207 	.word	0x0000b207
    1970:	0000b259 	.word	0x0000b259
    1974:	0000b29c 	.word	0x0000b29c
    1978:	0000b2d0 	.word	0x0000b2d0

0000197c <vApplicationGetIdleTaskMemory>:
vApplicationGetIdleTaskMemory():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:63
void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer,
                                   uint32_t *pulIdleTaskStackSize) {
  static StaticTask_t xIdleTaskTCB;
  static StackType_t uxIdleTaskStack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;            // memory for the idle task
    197c:	4b03      	ldr	r3, [pc, #12]	; (198c <vApplicationGetIdleTaskMemory+0x10>)
    197e:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:64
  *ppxIdleTaskStackBuffer = uxIdleTaskStack;        // stack memory for the idle task
    1980:	4b03      	ldr	r3, [pc, #12]	; (1990 <vApplicationGetIdleTaskMemory+0x14>)
    1982:	600b      	str	r3, [r1, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:65
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE; // stack memory size
    1984:	2364      	movs	r3, #100	; 0x64
    1986:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:66
}
    1988:	4770      	bx	lr
    198a:	bf00      	nop
    198c:	10001228 	.word	0x10001228
    1990:	10001098 	.word	0x10001098

00001994 <freertos_hooks__get_run_time_counter_value>:
freertos_hooks__get_run_time_counter_value():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:69

// #if (0 != configGENERATE_RUN_TIME_STATS)
uint32_t freertos_hooks__get_run_time_counter_value(void) {
    1994:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:70
  return (uint32_t)(sys_time__get_uptime_us() - freertos_run_time_counter_offset);
    1996:	f7ff fe81 	bl	169c <sys_time__get_uptime_us>
    199a:	4b02      	ldr	r3, [pc, #8]	; (19a4 <freertos_hooks__get_run_time_counter_value+0x10>)
    199c:	681b      	ldr	r3, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:71
}
    199e:	1ac0      	subs	r0, r0, r3
    19a0:	bd08      	pop	{r3, pc}
    19a2:	bf00      	nop
    19a4:	10001090 	.word	0x10001090

000019a8 <freertos_hooks__reset_run_time_stats>:
freertos_hooks__reset_run_time_stats():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:73

void freertos_hooks__reset_run_time_stats(void) {
    19a8:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:75
  // We save the offset that acts like a way to reset the uint64_t counters
  freertos_run_time_counter_offset = sys_time__get_uptime_us();
    19aa:	f7ff fe77 	bl	169c <sys_time__get_uptime_us>
    19ae:	4b02      	ldr	r3, [pc, #8]	; (19b8 <freertos_hooks__reset_run_time_stats+0x10>)
    19b0:	e9c3 0100 	strd	r0, r1, [r3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:76
    19b4:	bd08      	pop	{r3, pc}
    19b6:	bf00      	nop
    19b8:	10001090 	.word	0x10001090

000019bc <sl_string__initialize>:
sl_string__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:93
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

sl_string_t sl_string__initialize(void *memory, sl_string_size_t memory_size_max) {
    19bc:	b538      	push	{r3, r4, r5, lr}
    19be:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:97
  sl_string_t string = NULL;

  // We need memory to hold sizeof(sl_string_size_t) plus 1 char for a meaningful string and 1 char for NULL
  if ((NULL != memory) && (memory_size_max >= (sizeof(sl_string_size_t) + 2U))) {
    19c0:	4604      	mov	r4, r0
    19c2:	b158      	cbz	r0, 19dc <sl_string__initialize+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:97 (discriminator 1)
    19c4:	2903      	cmp	r1, #3
    19c6:	d90b      	bls.n	19e0 <sl_string__initialize+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:98
    memset(memory, 0, memory_size_max);
    19c8:	460a      	mov	r2, r1
    19ca:	2100      	movs	r1, #0
    19cc:	f003 fc44 	bl	5258 <memset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:101

    void *header = memory;
    void *string_start = (memory + sizeof(sl_string_size_t));
    19d0:	4623      	mov	r3, r4
sl_byte_convert__to_network_from_uint16():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:33
  bytes[0] = (uint8_t)(source_value >> 8);
    19d2:	0a2a      	lsrs	r2, r5, #8
    19d4:	f803 2b02 	strb.w	r2, [r3], #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:34
  bytes[1] = (uint8_t)(source_value >> 0);
    19d8:	7065      	strb	r5, [r4, #1]
    19da:	461c      	mov	r4, r3
sl_string__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:109

    string = (sl_string_t)string_start;
  }

  return string;
}
    19dc:	4620      	mov	r0, r4
    19de:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:94
  sl_string_t string = NULL;
    19e0:	2400      	movs	r4, #0
    19e2:	e7fb      	b.n	19dc <sl_string__initialize+0x20>

000019e4 <sl_string__get_capacity>:
sl_byte_convert__from_network_to_uint16():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:38
  return (((uint16_t)bytes[0] << 8) | (uint16_t)bytes[1]);
    19e4:	f810 3c02 	ldrb.w	r3, [r0, #-2]
    19e8:	f810 0c01 	ldrb.w	r0, [r0, #-1]
    19ec:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
sl_string__get_capacity():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:127
  const sl_string_size_t capacity =
      sl_byte_convert__from_network_to_uint16((const uint8_t *)(string - sizeof(sl_string_size_t)));

  // It is okay to to subtract (sizeof() + 1U) from capacity as we
  // check to ensure the memory meets a minimum value during initialization.
  return (sl_string_size_t)(capacity - sizeof(sl_string_size_t) - 1U);
    19f0:	3803      	subs	r0, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:128
}
    19f2:	b280      	uxth	r0, r0
    19f4:	4770      	bx	lr

000019f6 <sl_string__get_capacity_including_null_char>:
sl_string__get_capacity_including_null_char():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:130

sl_string_size_t sl_string__get_capacity_including_null_char(const sl_string_t string) {
    19f6:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:131
  return sl_string__get_capacity(string) + 1U;
    19f8:	f7ff fff4 	bl	19e4 <sl_string__get_capacity>
    19fc:	3001      	adds	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:132
}
    19fe:	b280      	uxth	r0, r0
    1a00:	bd08      	pop	{r3, pc}

00001a02 <sl_string__get_length>:
sl_string__get_length():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:134

sl_string_size_t sl_string__get_length(const sl_string_t string) {
    1a02:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:135
  return (NULL == string) ? 0U : (sl_string_size_t)strlen(string);
    1a04:	b110      	cbz	r0, 1a0c <sl_string__get_length+0xa>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:135 (discriminator 1)
    1a06:	f004 fe10 	bl	662a <strlen>
    1a0a:	b280      	uxth	r0, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:136 (discriminator 4)
}
    1a0c:	bd08      	pop	{r3, pc}

00001a0e <sl_string__is_full>:
sl_string__is_full():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:138

bool sl_string__is_full(const sl_string_t string) {
    1a0e:	b510      	push	{r4, lr}
    1a10:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:139
  const sl_string_size_t length = sl_string__get_length(string);
    1a12:	f7ff fff6 	bl	1a02 <sl_string__get_length>
    1a16:	4602      	mov	r2, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:140
  const sl_string_size_t capacity = sl_string__get_capacity(string);
    1a18:	4620      	mov	r0, r4
    1a1a:	f7ff ffe3 	bl	19e4 <sl_string__get_capacity>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:142
  return (length >= capacity);
}
    1a1e:	4282      	cmp	r2, r0
    1a20:	bf34      	ite	cc
    1a22:	2000      	movcc	r0, #0
    1a24:	2001      	movcs	r0, #1
    1a26:	bd10      	pop	{r4, pc}

00001a28 <sl_string__to_int>:
sl_string__to_int():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:146

const char *sl_string__c_str(const sl_string_t string) { return string; }

int sl_string__to_int(const sl_string_t string) { return atoi(string); }
    1a28:	f003 bb44 	b.w	50b4 <atoi>

00001a2c <sl_string__clear>:
sl_string__clear():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:178
  }

  return is_alpha_num;
}

void sl_string__clear(sl_string_t string) { *string = '\0'; }
    1a2c:	2300      	movs	r3, #0
    1a2e:	7003      	strb	r3, [r0, #0]
    1a30:	4770      	bx	lr

00001a32 <sl_string__vprintf>:
sl_string__vprintf():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:207
  va_end(args);

  return chars_printed;
}

sl_string_size_t sl_string__vprintf(sl_string_t string, const char *format, va_list args) {
    1a32:	b510      	push	{r4, lr}
    1a34:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:208
  const sl_string_size_t capacity = sl_string__get_capacity_including_null_char(string);
    1a36:	f7ff ffde 	bl	19f6 <sl_string__get_capacity_including_null_char>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:209
  const int chars_printed = vsnprintf(string, capacity, format, args);
    1a3a:	4613      	mov	r3, r2
    1a3c:	460a      	mov	r2, r1
    1a3e:	4601      	mov	r1, r0
    1a40:	4620      	mov	r0, r4
    1a42:	f005 fcf7 	bl	7434 <vsniprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:210
  return sl_string__private_return_positive_or_zero(chars_printed);
    1a46:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:211
}
    1a4a:	b280      	uxth	r0, r0
    1a4c:	bd10      	pop	{r4, pc}

00001a4e <sl_string__printf>:
sl_string__printf():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:198
sl_string_size_t sl_string__printf(sl_string_t string, const char *format, ...) {
    1a4e:	b40e      	push	{r1, r2, r3}
    1a50:	b503      	push	{r0, r1, lr}
    1a52:	aa03      	add	r2, sp, #12
    1a54:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:200
  va_start(args, format);
    1a58:	9201      	str	r2, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:201
  const sl_string_size_t chars_printed = sl_string__vprintf(string, format, args);
    1a5a:	f7ff ffea 	bl	1a32 <sl_string__vprintf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:205
}
    1a5e:	b002      	add	sp, #8
    1a60:	f85d eb04 	ldr.w	lr, [sp], #4
    1a64:	b003      	add	sp, #12
    1a66:	4770      	bx	lr

00001a68 <sl_string__scanf>:
sl_string__scanf():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:230
  const int chars_printed = vsnprintf(string + existing_length, remaining_capacity, format, args);

  return sl_string__private_return_positive_or_zero(chars_printed);
}

size_t sl_string__scanf(const sl_string_t string, const char *format, ...) {
    1a68:	b40e      	push	{r1, r2, r3}
    1a6a:	b503      	push	{r0, r1, lr}
    1a6c:	aa03      	add	r2, sp, #12
    1a6e:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:232
  va_list args;
  va_start(args, format);
    1a72:	9201      	str	r2, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:234

  const int number_of_parsed_params = vsscanf(string, format, args);
    1a74:	f005 fd10 	bl	7498 <vsiscanf>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:237
  va_end(args);

  return (number_of_parsed_params > 0) ? (sl_string_size_t)number_of_parsed_params : 0U;
    1a78:	2800      	cmp	r0, #0
    1a7a:	bfcc      	ite	gt
    1a7c:	b280      	uxthgt	r0, r0
    1a7e:	2000      	movle	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:238
}
    1a80:	b002      	add	sp, #8
    1a82:	f85d eb04 	ldr.w	lr, [sp], #4
    1a86:	b003      	add	sp, #12
    1a88:	4770      	bx	lr

00001a8a <sl_string__set>:
sl_string__set():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:268
  }

  return token_count;
}

bool sl_string__set(sl_string_t string, const char *source) {
    1a8a:	b538      	push	{r3, r4, r5, lr}
    1a8c:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:271
  bool result = false;

  if (NULL != source) {
    1a8e:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:272
    const sl_string_size_t source_length = (sl_string_size_t)strlen(source);
    1a90:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:271
  if (NULL != source) {
    1a92:	b171      	cbz	r1, 1ab2 <sl_string__set+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:272
    const sl_string_size_t source_length = (sl_string_size_t)strlen(source);
    1a94:	f004 fdc9 	bl	662a <strlen>
    1a98:	4601      	mov	r1, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:273
    const sl_string_size_t destination_length = sl_string__get_capacity(string);
    1a9a:	4628      	mov	r0, r5
    1a9c:	f7ff ffa2 	bl	19e4 <sl_string__get_capacity>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:274
    if (destination_length >= source_length) {
    1aa0:	b289      	uxth	r1, r1
    1aa2:	4281      	cmp	r1, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:273
    const sl_string_size_t destination_length = sl_string__get_capacity(string);
    1aa4:	4602      	mov	r2, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:274
    if (destination_length >= source_length) {
    1aa6:	d805      	bhi.n	1ab4 <sl_string__set+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:275
      strncpy(string, source, destination_length);
    1aa8:	4621      	mov	r1, r4
    1aaa:	4628      	mov	r0, r5
    1aac:	f004 fdfa 	bl	66a4 <strncpy>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:276
      result = true;
    1ab0:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:281
    }
  }

  return result;
}
    1ab2:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:269
  bool result = false;
    1ab4:	2000      	movs	r0, #0
    1ab6:	e7fc      	b.n	1ab2 <sl_string__set+0x28>

00001ab8 <sl_string__initialize_from>:
sl_string__initialize_from():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:111
sl_string_t sl_string__initialize_from(void *memory, sl_string_size_t memory_size_max, const char *copy_from) {
    1ab8:	b538      	push	{r3, r4, r5, lr}
    1aba:	4615      	mov	r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:112
  sl_string_t string = sl_string__initialize(memory, memory_size_max);
    1abc:	f7ff ff7e 	bl	19bc <sl_string__initialize>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:114
  if (NULL != string) {
    1ac0:	4604      	mov	r4, r0
    1ac2:	b110      	cbz	r0, 1aca <sl_string__initialize_from+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:115
    (void)sl_string__set(string, copy_from);
    1ac4:	4629      	mov	r1, r5
    1ac6:	f7ff ffe0 	bl	1a8a <sl_string__set>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:119
}
    1aca:	4620      	mov	r0, r4
    1acc:	bd38      	pop	{r3, r4, r5, pc}

00001ace <sl_string__insert_at>:
sl_string__insert_at():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:283

bool sl_string__insert_at(sl_string_t string, sl_string_size_t index_position, const char *insert) {
    1ace:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1ad2:	4605      	mov	r5, r0
    1ad4:	460f      	mov	r7, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:286
  bool result = false;

  if (NULL != insert) {
    1ad6:	4614      	mov	r4, r2
    1ad8:	b30a      	cbz	r2, 1b1e <sl_string__insert_at+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:287
    if (index_position <= sl_string__get_length(string)) {
    1ada:	f7ff ff92 	bl	1a02 <sl_string__get_length>
    1ade:	42b8      	cmp	r0, r7
    1ae0:	4606      	mov	r6, r0
    1ae2:	d31c      	bcc.n	1b1e <sl_string__insert_at+0x50>
sl_string__private_ensure_enough_memory_for_insertion():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:50
  const sl_string_size_t length_of_insertion_string = (sl_string_size_t)strlen(insertion_string);
    1ae4:	4620      	mov	r0, r4
    1ae6:	f004 fda0 	bl	662a <strlen>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:51
  const sl_string_size_t memory_required = length_of_original_string + length_of_insertion_string;
    1aea:	1832      	adds	r2, r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:50
  const sl_string_size_t length_of_insertion_string = (sl_string_size_t)strlen(insertion_string);
    1aec:	4680      	mov	r8, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:53
  return memory_required <= sl_string__get_capacity(string);
    1aee:	4628      	mov	r0, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:51
  const sl_string_size_t memory_required = length_of_original_string + length_of_insertion_string;
    1af0:	b292      	uxth	r2, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:53
  return memory_required <= sl_string__get_capacity(string);
    1af2:	f7ff ff77 	bl	19e4 <sl_string__get_capacity>
sl_string__insert_at():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:288
      if (sl_string__private_ensure_enough_memory_for_insertion(string, insert)) {
    1af6:	4282      	cmp	r2, r0
    1af8:	d811      	bhi.n	1b1e <sl_string__insert_at+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:293
        const size_t length_of_insertion_string = strlen(insert);

        char *position_of_insertion = string + index_position;
        char *destination_of_substring = position_of_insertion + length_of_insertion_string;
        const sl_string_size_t length_to_be_moved =
    1afa:	f1c7 0201 	rsb	r2, r7, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:291
        char *position_of_insertion = string + index_position;
    1afe:	443d      	add	r5, r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:293
        const sl_string_size_t length_to_be_moved =
    1b00:	4432      	add	r2, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:296
            sl_string__get_length(string) - index_position + 1U; // Plus 1 for the null term

        memmove(destination_of_substring, position_of_insertion, length_to_be_moved);
    1b02:	b292      	uxth	r2, r2
    1b04:	4629      	mov	r1, r5
    1b06:	eb05 0008 	add.w	r0, r5, r8
    1b0a:	f003 fb8b 	bl	5224 <memmove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:297
        strncpy(position_of_insertion, insert, length_of_insertion_string);
    1b0e:	4642      	mov	r2, r8
    1b10:	4621      	mov	r1, r4
    1b12:	4628      	mov	r0, r5
    1b14:	f004 fdc6 	bl	66a4 <strncpy>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:299

        result = true;
    1b18:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:305
      }
    }
  }

  return result;
}
    1b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:284
  bool result = false;
    1b1e:	2000      	movs	r0, #0
    1b20:	e7fb      	b.n	1b1a <sl_string__insert_at+0x4c>

00001b22 <sl_string__append>:
sl_string__append():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:307

bool sl_string__append(sl_string_t string, const char *append) {
    1b22:	b570      	push	{r4, r5, r6, lr}
    1b24:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:310
  bool result = false;

  if (NULL != append) {
    1b26:	460c      	mov	r4, r1
    1b28:	b1a9      	cbz	r1, 1b56 <sl_string__append+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:311
    const sl_string_size_t length_of_original_string = sl_string__get_length(string);
    1b2a:	f7ff ff6a 	bl	1a02 <sl_string__get_length>
    1b2e:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:312
    const sl_string_size_t length_of_insertion_string = (sl_string_size_t)strlen(append);
    1b30:	4620      	mov	r0, r4
    1b32:	f004 fd7a 	bl	662a <strlen>
    1b36:	b282      	uxth	r2, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:313
    const sl_string_size_t total_length = length_of_original_string + length_of_insertion_string;
    1b38:	18a9      	adds	r1, r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:315

    if (total_length <= sl_string__get_capacity(string)) {
    1b3a:	4630      	mov	r0, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:313
    const sl_string_size_t total_length = length_of_original_string + length_of_insertion_string;
    1b3c:	b289      	uxth	r1, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:315
    if (total_length <= sl_string__get_capacity(string)) {
    1b3e:	f7ff ff51 	bl	19e4 <sl_string__get_capacity>
    1b42:	4288      	cmp	r0, r1
    1b44:	d307      	bcc.n	1b56 <sl_string__append+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:316
      const sl_string_size_t length_to_copy_including_null = (1U + length_of_insertion_string);
    1b46:	3201      	adds	r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:317
      memcpy((string + length_of_original_string), append, length_to_copy_including_null);
    1b48:	b292      	uxth	r2, r2
    1b4a:	4621      	mov	r1, r4
    1b4c:	1970      	adds	r0, r6, r5
    1b4e:	f003 fb5b 	bl	5208 <memcpy>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:318
      result = true;
    1b52:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:323
    }
  }

  return result;
}
    1b54:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:308
  bool result = false;
    1b56:	2000      	movs	r0, #0
    1b58:	e7fc      	b.n	1b54 <sl_string__append+0x32>

00001b5a <sl_string__append_char>:
sl_string__append_char():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:325

bool sl_string__append_char(sl_string_t string, char append) {
    1b5a:	b507      	push	{r0, r1, r2, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:326
  const char string_to_append[] = {append, '\0'};
    1b5c:	2300      	movs	r3, #0
    1b5e:	f88d 1004 	strb.w	r1, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:327
  return sl_string__append(string, string_to_append);
    1b62:	a901      	add	r1, sp, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:326
  const char string_to_append[] = {append, '\0'};
    1b64:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:327
  return sl_string__append(string, string_to_append);
    1b68:	f7ff ffdb 	bl	1b22 <sl_string__append>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:328
}
    1b6c:	b003      	add	sp, #12
    1b6e:	f85d fb04 	ldr.w	pc, [sp], #4

00001b72 <sl_string__equals_to_ignore_case>:
sl_string__equals_to_ignore_case():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:340
  }

  return equal;
}

bool sl_string__equals_to_ignore_case(const sl_string_t string, const char *compare_with_case_ignored) {
    1b72:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:343
  bool equal = false;

  if (NULL != compare_with_case_ignored) {
    1b74:	b129      	cbz	r1, 1b82 <sl_string__equals_to_ignore_case+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:344
    equal = (0 == strcasecmp(string, compare_with_case_ignored));
    1b76:	f004 fd2f 	bl	65d8 <strcasecmp>
    1b7a:	fab0 f080 	clz	r0, r0
    1b7e:	0940      	lsrs	r0, r0, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:348
  }

  return equal;
}
    1b80:	bd08      	pop	{r3, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:341
  bool equal = false;
    1b82:	4608      	mov	r0, r1
    1b84:	e7fc      	b.n	1b80 <sl_string__equals_to_ignore_case+0xe>

00001b86 <sl_string__begins_with_limited_chars>:
sl_string__begins_with_limited_chars():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:474
  const size_t substring_length = (NULL == begin_with) ? 0U : strlen(begin_with);
  return sl_string__begins_with_limited_chars(string, begin_with, substring_length);
}

bool sl_string__begins_with_limited_chars(const sl_string_t string, const char *begin_with,
                                          size_t max_chars_of_begin_with_to_compare) {
    1b86:	b570      	push	{r4, r5, r6, lr}
    1b88:	4606      	mov	r6, r0
    1b8a:	4615      	mov	r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:477
  bool result = false;

  if (NULL != begin_with) {
    1b8c:	460c      	mov	r4, r1
    1b8e:	b161      	cbz	r1, 1baa <sl_string__begins_with_limited_chars+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:478
    const sl_string_size_t string_length = sl_string__get_length(string);
    1b90:	f7ff ff37 	bl	1a02 <sl_string__get_length>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:482

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= max_chars_of_begin_with_to_compare) {
    1b94:	42a8      	cmp	r0, r5
    1b96:	d308      	bcc.n	1baa <sl_string__begins_with_limited_chars+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:483
      if (0 == strncmp(string, begin_with, max_chars_of_begin_with_to_compare)) {
    1b98:	462a      	mov	r2, r5
    1b9a:	4621      	mov	r1, r4
    1b9c:	4630      	mov	r0, r6
    1b9e:	f004 fd6f 	bl	6680 <strncmp>
    1ba2:	fab0 f080 	clz	r0, r0
    1ba6:	0940      	lsrs	r0, r0, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:490
      }
    }
  }

  return result;
}
    1ba8:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:475
  bool result = false;
    1baa:	2000      	movs	r0, #0
    1bac:	e7fc      	b.n	1ba8 <sl_string__begins_with_limited_chars+0x22>

00001bae <sl_string__begins_with_ignore_case>:
sl_string__begins_with_ignore_case():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:492

bool sl_string__begins_with_ignore_case(const sl_string_t string, const char *begin_with_case_ignored) {
    1bae:	b570      	push	{r4, r5, r6, lr}
    1bb0:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:495
  bool result = false;

  if (NULL != begin_with_case_ignored) {
    1bb2:	460c      	mov	r4, r1
    1bb4:	b181      	cbz	r1, 1bd8 <sl_string__begins_with_ignore_case+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:496
    const sl_string_size_t string_length = sl_string__get_length(string);
    1bb6:	f7ff ff24 	bl	1a02 <sl_string__get_length>
    1bba:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:497
    const size_t substring_length = strlen(begin_with_case_ignored);
    1bbc:	4620      	mov	r0, r4
    1bbe:	f004 fd34 	bl	662a <strlen>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:501

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= substring_length) {
    1bc2:	4286      	cmp	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:497
    const size_t substring_length = strlen(begin_with_case_ignored);
    1bc4:	4602      	mov	r2, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:501
    if (string_length >= substring_length) {
    1bc6:	d307      	bcc.n	1bd8 <sl_string__begins_with_ignore_case+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:502
      if (0 == strncasecmp(string, begin_with_case_ignored, substring_length)) {
    1bc8:	4621      	mov	r1, r4
    1bca:	4628      	mov	r0, r5
    1bcc:	f004 fd36 	bl	663c <strncasecmp>
    1bd0:	fab0 f080 	clz	r0, r0
    1bd4:	0940      	lsrs	r0, r0, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:509
      }
    }
  }

  return result;
}
    1bd6:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:493
  bool result = false;
    1bd8:	2000      	movs	r0, #0
    1bda:	e7fc      	b.n	1bd6 <sl_string__begins_with_ignore_case+0x28>

00001bdc <sl_string__begins_with_whole_word>:
sl_string__begins_with_whole_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:511

bool sl_string__begins_with_whole_word(const sl_string_t string, const char *begin_with, const char *delimiter_string) {
    1bdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1be0:	4607      	mov	r7, r0
    1be2:	4614      	mov	r4, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:514
  bool result = false;

  if ((NULL != begin_with) && (NULL != delimiter_string)) {
    1be4:	460d      	mov	r5, r1
    1be6:	b1c9      	cbz	r1, 1c1c <sl_string__begins_with_whole_word+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:514 (discriminator 1)
    1be8:	b1c2      	cbz	r2, 1c1c <sl_string__begins_with_whole_word+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:515
    const sl_string_size_t string_length = sl_string__get_length(string);
    1bea:	f7ff ff0a 	bl	1a02 <sl_string__get_length>
    1bee:	4680      	mov	r8, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:516
    const size_t substring_length = strlen(begin_with);
    1bf0:	4628      	mov	r0, r5
    1bf2:	f004 fd1a 	bl	662a <strlen>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:520

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= substring_length) {
    1bf6:	4580      	cmp	r8, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:516
    const size_t substring_length = strlen(begin_with);
    1bf8:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:520
    if (string_length >= substring_length) {
    1bfa:	d30f      	bcc.n	1c1c <sl_string__begins_with_whole_word+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:521
      if (0 == strncmp(string, begin_with, substring_length)) {
    1bfc:	4602      	mov	r2, r0
    1bfe:	4629      	mov	r1, r5
    1c00:	4638      	mov	r0, r7
    1c02:	f004 fd3d 	bl	6680 <strncmp>
    1c06:	b948      	cbnz	r0, 1c1c <sl_string__begins_with_whole_word+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:522
        result = ((*delimiter_string == string[substring_length]) || ('\0' == string[substring_length]));
    1c08:	5db8      	ldrb	r0, [r7, r6]
    1c0a:	7823      	ldrb	r3, [r4, #0]
    1c0c:	4283      	cmp	r3, r0
    1c0e:	bf1a      	itte	ne
    1c10:	fab0 f080 	clzne	r0, r0
    1c14:	0940      	lsrne	r0, r0, #5
    1c16:	2001      	moveq	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:528
      }
    }
  }

  return result;
}
    1c18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:512
  bool result = false;
    1c1c:	2000      	movs	r0, #0
    1c1e:	e7fb      	b.n	1c18 <sl_string__begins_with_whole_word+0x3c>

00001c20 <sl_string__ends_with_newline>:
sl_string__ends_with_newline():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:582
  }

  return result;
}

bool sl_string__ends_with_newline(const sl_string_t string) {
    1c20:	b510      	push	{r4, lr}
    1c22:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:584
  bool status = false;
  const sl_string_size_t length = sl_string__get_length(string);
    1c24:	f7ff feed 	bl	1a02 <sl_string__get_length>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:586

  if (length > 0U) {
    1c28:	b140      	cbz	r0, 1c3c <sl_string__ends_with_newline+0x1c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:587
    const sl_string_size_t last_index = length - 1U;
    1c2a:	3801      	subs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:588
    const char last_char = string[last_index];
    1c2c:	b280      	uxth	r0, r0
    1c2e:	5c20      	ldrb	r0, [r4, r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:589
    status = ('\r' == last_char) || ('\n' == last_char);
    1c30:	280d      	cmp	r0, #13
    1c32:	d004      	beq.n	1c3e <sl_string__ends_with_newline+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:589 (discriminator 2)
    1c34:	f1a0 030a 	sub.w	r3, r0, #10
    1c38:	4258      	negs	r0, r3
    1c3a:	4158      	adcs	r0, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:593
  }

  return status;
}
    1c3c:	bd10      	pop	{r4, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:589
    status = ('\r' == last_char) || ('\n' == last_char);
    1c3e:	2001      	movs	r0, #1
    1c40:	e7fc      	b.n	1c3c <sl_string__ends_with_newline+0x1c>

00001c42 <sl_string__erase_after>:
sl_string__erase_after():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:624

bool sl_string__erase_at(sl_string_t string, sl_string_size_t index_position) {
  return sl_string__erase_after(string, index_position, 1);
}

bool sl_string__erase_after(sl_string_t string, sl_string_size_t erase_index_position, sl_string_size_t n_chars) {
    1c42:	b570      	push	{r4, r5, r6, lr}
    1c44:	460c      	mov	r4, r1
    1c46:	4605      	mov	r5, r0
    1c48:	4616      	mov	r6, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:625
  const sl_string_size_t string_length = sl_string__get_length(string);
    1c4a:	f7ff feda 	bl	1a02 <sl_string__get_length>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:628
  bool result = false;

  if (erase_index_position < string_length) {
    1c4e:	42a0      	cmp	r0, r4
    1c50:	d911      	bls.n	1c76 <sl_string__erase_after+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:629
    n_chars = (n_chars > (string_length - erase_index_position)) ? (string_length - erase_index_position) : n_chars;
    1c52:	1b01      	subs	r1, r0, r4
    1c54:	42b1      	cmp	r1, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:630
    const sl_string_size_t num_chars_to_move = string_length - erase_index_position - n_chars + 1U;
    1c56:	f1c4 0301 	rsb	r3, r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:629
    n_chars = (n_chars > (string_length - erase_index_position)) ? (string_length - erase_index_position) : n_chars;
    1c5a:	460a      	mov	r2, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:630
    const sl_string_size_t num_chars_to_move = string_length - erase_index_position - n_chars + 1U;
    1c5c:	4418      	add	r0, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:629
    n_chars = (n_chars > (string_length - erase_index_position)) ? (string_length - erase_index_position) : n_chars;
    1c5e:	bfa8      	it	ge
    1c60:	4632      	movge	r2, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:630
    const sl_string_size_t num_chars_to_move = string_length - erase_index_position - n_chars + 1U;
    1c62:	1a80      	subs	r0, r0, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:632

    memmove(string + erase_index_position, string + erase_index_position + n_chars, num_chars_to_move);
    1c64:	fa14 f182 	uxtah	r1, r4, r2
    1c68:	4429      	add	r1, r5
    1c6a:	b282      	uxth	r2, r0
    1c6c:	1928      	adds	r0, r5, r4
    1c6e:	f003 fad9 	bl	5224 <memmove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:633
    result = true;
    1c72:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:637
  }

  return result;
}
    1c74:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:626
  bool result = false;
    1c76:	2000      	movs	r0, #0
    1c78:	e7fc      	b.n	1c74 <sl_string__erase_after+0x32>

00001c7a <sl_string__erase_first>:
sl_string__erase_first():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:609
  return sl_string__erase_after(string, 0, n_chars);
    1c7a:	460a      	mov	r2, r1
    1c7c:	2100      	movs	r1, #0
    1c7e:	f7ff bfe0 	b.w	1c42 <sl_string__erase_after>

00001c82 <sl_string__erase_last>:
sl_string__erase_last():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:612
bool sl_string__erase_last(sl_string_t string, sl_string_size_t n_chars) {
    1c82:	b538      	push	{r3, r4, r5, lr}
    1c84:	460c      	mov	r4, r1
    1c86:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:613
  const sl_string_size_t string_length = sl_string__get_length(string);
    1c88:	f7ff febb 	bl	1a02 <sl_string__get_length>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:614
  const sl_string_size_t start_of_erase_index =
    1c8c:	42a0      	cmp	r0, r4
    1c8e:	bf24      	itt	cs
    1c90:	1b00      	subcs	r0, r0, r4
    1c92:	b281      	uxthcs	r1, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:617
  return sl_string__erase_after(string, start_of_erase_index, n_chars);
    1c94:	4622      	mov	r2, r4
    1c96:	4628      	mov	r0, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:614
  const sl_string_size_t start_of_erase_index =
    1c98:	bf38      	it	cc
    1c9a:	2100      	movcc	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:618
}
    1c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:617
  return sl_string__erase_after(string, start_of_erase_index, n_chars);
    1ca0:	f7ff bfcf 	b.w	1c42 <sl_string__erase_after>

00001ca4 <sl_string__erase_at_substring>:
sl_string__erase_at_substring():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:639

bool sl_string__erase_at_substring(sl_string_t string, const char *erase_at_substring) {
    1ca4:	b510      	push	{r4, lr}
    1ca6:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:640
  const char *found = strstr(string, erase_at_substring);
    1ca8:	f004 fd0f 	bl	66ca <strstr>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:641
  const bool found_something_to_erase = (NULL != found);
    1cac:	1e03      	subs	r3, r0, #0
sl_utils__pointer_distance():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:41
int sl_utils__pointer_distance(const void *pointer_to_last, const void *string) { return (pointer_to_last - string); }
    1cae:	bf1f      	itttt	ne
    1cb0:	1b1b      	subne	r3, r3, r4
sl_string__erase_at_substring():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:645

  if (found_something_to_erase) {
    const sl_string_size_t position = (sl_string_size_t)sl_utils__pointer_distance(found, string);
    string[position] = '\0';
    1cb2:	b29b      	uxthne	r3, r3
    1cb4:	2200      	movne	r2, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:641
  const bool found_something_to_erase = (NULL != found);
    1cb6:	2001      	movne	r0, #1
    1cb8:	bf0c      	ite	eq
    1cba:	2000      	moveq	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:645
    string[position] = '\0';
    1cbc:	54e2      	strbne	r2, [r4, r3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:649
  }

  return found_something_to_erase;
}
    1cbe:	bd10      	pop	{r4, pc}

00001cc0 <sl_string__erase_first_word>:
sl_string__erase_first_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:651

bool sl_string__erase_first_word(sl_string_t string, char word_separater) {
    1cc0:	b510      	push	{r4, lr}
    1cc2:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:653
  bool result = false;
  const char *word_ptr = strchr(string, (int)word_separater);
    1cc4:	f004 fca4 	bl	6610 <strchr>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:655

  if (NULL != word_ptr) {
    1cc8:	b138      	cbz	r0, 1cda <sl_string__erase_first_word+0x1a>
sl_utils__pointer_distance():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:41
int sl_utils__pointer_distance(const void *pointer_to_last, const void *string) { return (pointer_to_last - string); }
    1cca:	1b01      	subs	r1, r0, r4
sl_string__erase_first_word():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:656
    const sl_string_size_t n_chars = (sl_string_size_t)sl_utils__pointer_distance(word_ptr, string) + 1U;
    1ccc:	3101      	adds	r1, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:657
    result = sl_string__erase_first(string, n_chars); // Plus 1 to also erase the word_seperator
    1cce:	4620      	mov	r0, r4
    1cd0:	b289      	uxth	r1, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:661
  }

  return result;
}
    1cd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:657
    result = sl_string__erase_first(string, n_chars); // Plus 1 to also erase the word_seperator
    1cd6:	f7ff bfd0 	b.w	1c7a <sl_string__erase_first>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:661
}
    1cda:	bd10      	pop	{r4, pc}

00001cdc <sl_string__erase_int>:
sl_string__erase_int():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:680
  }

  return chars_removed;
}

bool sl_string__erase_int(sl_string_t string, int *erased_int) {
    1cdc:	b570      	push	{r4, r5, r6, lr}
    1cde:	4606      	mov	r6, r0
    1ce0:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:684
  bool parsed = false;

  const char *c = string;
  while (('\0' != *c) && (0U == isdigit((int)*c))) {
    1ce2:	4811      	ldr	r0, [pc, #68]	; (1d28 <sl_string__erase_int+0x4c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:680
bool sl_string__erase_int(sl_string_t string, int *erased_int) {
    1ce4:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:684
  while (('\0' != *c) && (0U == isdigit((int)*c))) {
    1ce6:	462b      	mov	r3, r5
    1ce8:	f813 1b01 	ldrb.w	r1, [r3], #1
    1cec:	b1c9      	cbz	r1, 1d22 <sl_string__erase_int+0x46>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:684 (discriminator 1)
    1cee:	5c0a      	ldrb	r2, [r1, r0]
    1cf0:	0752      	lsls	r2, r2, #29
    1cf2:	d514      	bpl.n	1d1e <sl_string__erase_int+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:688
    ++c; // Skip chars until a digit
  }

  if (('\0' != *c) && (NULL != erased_int) && (0U != isdigit((int)*c))) {
    1cf4:	b124      	cbz	r4, 1d00 <sl_string__erase_int+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:689 (discriminator 2)
    *erased_int = atoi(c);
    1cf6:	4628      	mov	r0, r5
    1cf8:	f003 f9dc 	bl	50b4 <atoi>
    1cfc:	6020      	str	r0, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:690 (discriminator 2)
    parsed = true;
    1cfe:	2401      	movs	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:693
  }

  while (('\0' != *c) && (0U != isdigit((int)*c))) {
    1d00:	4a09      	ldr	r2, [pc, #36]	; (1d28 <sl_string__erase_int+0x4c>)
    1d02:	4629      	mov	r1, r5
    1d04:	f815 3b01 	ldrb.w	r3, [r5], #1
    1d08:	b113      	cbz	r3, 1d10 <sl_string__erase_int+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:693 (discriminator 1)
    1d0a:	5c9b      	ldrb	r3, [r3, r2]
    1d0c:	075b      	lsls	r3, r3, #29
    1d0e:	d4f8      	bmi.n	1d02 <sl_string__erase_int+0x26>
sl_utils__pointer_distance():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:41
int sl_utils__pointer_distance(const void *pointer_to_last, const void *string) { return (pointer_to_last - string); }
    1d10:	1b89      	subs	r1, r1, r6
sl_string__erase_int():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:699
    ++c; // Skip the digits we processed in atoi() above
  }

  // Erase the integer we processed above
  const sl_string_size_t chars_to_erase = (sl_string_size_t)sl_utils__pointer_distance(c, string);
  (void)sl_string__erase_first(string, chars_to_erase);
    1d12:	b289      	uxth	r1, r1
    1d14:	4630      	mov	r0, r6
    1d16:	f7ff ffb0 	bl	1c7a <sl_string__erase_first>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:702

  return parsed;
}
    1d1a:	4620      	mov	r0, r4
    1d1c:	bd70      	pop	{r4, r5, r6, pc}
    1d1e:	461d      	mov	r5, r3
    1d20:	e7e1      	b.n	1ce6 <sl_string__erase_int+0xa>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:681
  bool parsed = false;
    1d22:	460c      	mov	r4, r1
    1d24:	e7ec      	b.n	1d00 <sl_string__erase_int+0x24>
    1d26:	bf00      	nop
    1d28:	0000ba05 	.word	0x0000ba05

00001d2c <sl_string__trim_end>:
sl_string__trim_end():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:704

bool sl_string__trim_end(sl_string_t string, const char *chars_to_trim) {
    1d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d2e:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:707
  bool result = false;

  if (NULL != chars_to_trim) {
    1d30:	460c      	mov	r4, r1
    1d32:	b1c9      	cbz	r1, 1d68 <sl_string__trim_end+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:708
    const sl_string_size_t string_length = sl_string__get_length(string);
    1d34:	f7ff fe65 	bl	1a02 <sl_string__get_length>
    1d38:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:709
    const size_t trim_char_length = strlen(chars_to_trim);
    1d3a:	4620      	mov	r0, r4
    1d3c:	f004 fc75 	bl	662a <strlen>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:711

    for (int character = ((int)string_length - 1); character >= 0; character--) {
    1d40:	1e6b      	subs	r3, r5, #1
    1d42:	4433      	add	r3, r6
    1d44:	4420      	add	r0, r4
    1d46:	3e01      	subs	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:716
      bool trim_done = false;

      for (size_t trim_char = 0; trim_char < trim_char_length; trim_char++) {
        if (chars_to_trim[trim_char] == string[character]) {
          string[character] = '\0';
    1d48:	2100      	movs	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:711 (discriminator 1)
    for (int character = ((int)string_length - 1); character >= 0; character--) {
    1d4a:	42b3      	cmp	r3, r6
    1d4c:	d002      	beq.n	1d54 <sl_string__trim_end+0x28>
    1d4e:	4622      	mov	r2, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:714 (discriminator 1)
      for (size_t trim_char = 0; trim_char < trim_char_length; trim_char++) {
    1d50:	4282      	cmp	r2, r0
    1d52:	d101      	bne.n	1d58 <sl_string__trim_end+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:726

      if (!trim_done) {
        break;
      }
    }
    result = true;
    1d54:	2001      	movs	r0, #1
    1d56:	e008      	b.n	1d6a <sl_string__trim_end+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:715
        if (chars_to_trim[trim_char] == string[character]) {
    1d58:	f812 5b01 	ldrb.w	r5, [r2], #1
    1d5c:	781f      	ldrb	r7, [r3, #0]
    1d5e:	42af      	cmp	r7, r5
    1d60:	d1f6      	bne.n	1d50 <sl_string__trim_end+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:716
          string[character] = '\0';
    1d62:	f803 1901 	strb.w	r1, [r3], #-1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:722
      if (!trim_done) {
    1d66:	e7f0      	b.n	1d4a <sl_string__trim_end+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:705
  bool result = false;
    1d68:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l2_utils/string/sl_string.c:730
  }

  return result;
}
    1d6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00001d6c <vPortSVCHandler_wrapper>:
vPortSVCHandler_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:28
}

/**
 * The *_wrapper() functions are meant to invoke FreeRTOS interrupts, but with run-time statistics hooks
 */
void vPortSVCHandler_wrapper(void) { invoke_function_in_wrapper(vPortSVCHandler); }
    1d6c:	b508      	push	{r3, lr}
invoke_function_in_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:20
  vRunTimeStatIsrEntry();
    1d6e:	f001 fdf7 	bl	3960 <vRunTimeStatIsrEntry>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:21
  function();
    1d72:	f000 f86d 	bl	1e50 <vPortSVCHandler>
vPortSVCHandler_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:28
void vPortSVCHandler_wrapper(void) { invoke_function_in_wrapper(vPortSVCHandler); }
    1d76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
invoke_function_in_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:22
  vRunTimeStatIsrExit();
    1d7a:	f001 be05 	b.w	3988 <vRunTimeStatIsrExit>

00001d7e <xPortPendSVHandler_wrapper>:
xPortPendSVHandler_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:29
void xPortPendSVHandler_wrapper(void) { invoke_function_in_wrapper(xPortPendSVHandler); }
    1d7e:	b508      	push	{r3, lr}
invoke_function_in_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:20
  vRunTimeStatIsrEntry();
    1d80:	f001 fdee 	bl	3960 <vRunTimeStatIsrEntry>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:21
  function();
    1d84:	f000 f8ac 	bl	1ee0 <xPortPendSVHandler>
xPortPendSVHandler_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:29
void xPortPendSVHandler_wrapper(void) { invoke_function_in_wrapper(xPortPendSVHandler); }
    1d88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
invoke_function_in_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:22
  vRunTimeStatIsrExit();
    1d8c:	f001 bdfc 	b.w	3988 <vRunTimeStatIsrExit>

00001d90 <xPortSysTickHandler_wrapper>:
xPortSysTickHandler_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:30
    1d90:	b508      	push	{r3, lr}
invoke_function_in_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:20
  vRunTimeStatIsrEntry();
    1d92:	f001 fde5 	bl	3960 <vRunTimeStatIsrEntry>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:21
  function();
    1d96:	f000 f8d5 	bl	1f44 <xPortSysTickHandler>
xPortSysTickHandler_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:30
    1d9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
invoke_function_in_wrapper():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:22
  vRunTimeStatIsrExit();
    1d9e:	f001 bdf3 	b.w	3988 <vRunTimeStatIsrExit>
xPortSysTickHandler_wrapper():
    1da2:	Address 0x0000000000001da2 is out of bounds.


00001da4 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:279
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
    1da4:	4808      	ldr	r0, [pc, #32]	; (1dc8 <prvPortStartFirstTask+0x24>)
    1da6:	6800      	ldr	r0, [r0, #0]
    1da8:	6800      	ldr	r0, [r0, #0]
    1daa:	f380 8808 	msr	MSP, r0
    1dae:	f04f 0000 	mov.w	r0, #0
    1db2:	f380 8814 	msr	CONTROL, r0
    1db6:	b662      	cpsie	i
    1db8:	b661      	cpsie	f
    1dba:	f3bf 8f4f 	dsb	sy
    1dbe:	f3bf 8f6f 	isb	sy
    1dc2:	df00      	svc	0
    1dc4:	bf00      	nop
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:293
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
    1dc6:	0000      	.short	0x0000
    1dc8:	e000ed08 	.word	0xe000ed08

00001dcc <vPortEnableVFP>:
vPortEnableVFP():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:715
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
    1dcc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 1ddc <vPortEnableVFP+0x10>
    1dd0:	6801      	ldr	r1, [r0, #0]
    1dd2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    1dd6:	6001      	str	r1, [r0, #0]
    1dd8:	4770      	bx	lr
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:724
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
    1dda:	0000      	.short	0x0000
    1ddc:	e000ed88 	.word	0xe000ed88

00001de0 <prvTaskExitError>:
prvTaskExitError():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:230
{
    1de0:	b507      	push	{r0, r1, r2, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:231
volatile uint32_t ulDummy = 0;
    1de2:	2300      	movs	r3, #0
    1de4:	9301      	str	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:239
	configASSERT( uxCriticalNesting == ~0UL );
    1de6:	4b0b      	ldr	r3, [pc, #44]	; (1e14 <prvTaskExitError+0x34>)
    1de8:	681b      	ldr	r3, [r3, #0]
    1dea:	3301      	adds	r3, #1
    1dec:	d004      	beq.n	1df8 <prvTaskExitError+0x18>
    1dee:	490a      	ldr	r1, [pc, #40]	; (1e18 <prvTaskExitError+0x38>)
    1df0:	20ef      	movs	r0, #239	; 0xef
    1df2:	f7ff fda3 	bl	193c <configASSERT_callback>
    1df6:	e7fe      	b.n	1df6 <prvTaskExitError+0x16>
vPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
    1df8:	f04f 0318 	mov.w	r3, #24
    1dfc:	f383 8811 	msr	BASEPRI, r3
    1e00:	f3bf 8f6f 	isb	sy
    1e04:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:241 (discriminator 1)
	while( ulDummy == 0 )
    1e08:	9b01      	ldr	r3, [sp, #4]
    1e0a:	2b00      	cmp	r3, #0
    1e0c:	d0fc      	beq.n	1e08 <prvTaskExitError+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:251
}
    1e0e:	b003      	add	sp, #12
    1e10:	f85d fb04 	ldr.w	pc, [sp], #4
    1e14:	1000128c 	.word	0x1000128c
    1e18:	0000b356 	.word	0x0000b356

00001e1c <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:208
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    1e1c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    1e20:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:212
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
    1e24:	4b07      	ldr	r3, [pc, #28]	; (1e44 <pxPortInitialiseStack+0x28>)
    1e26:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    1e2a:	f021 0101 	bic.w	r1, r1, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    1e2e:	f06f 0302 	mvn.w	r3, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    1e32:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:216
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
    1e36:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    1e3a:	f840 3c24 	str.w	r3, [r0, #-36]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:226
}
    1e3e:	3844      	subs	r0, #68	; 0x44
    1e40:	4770      	bx	lr
    1e42:	bf00      	nop
    1e44:	00001de1 	.word	0x00001de1
    1e48:	ffffffff 	.word	0xffffffff
    1e4c:	ffffffff 	.word	0xffffffff

00001e50 <vPortSVCHandler>:
vPortSVCHandler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:256
	__asm volatile (
    1e50:	4b07      	ldr	r3, [pc, #28]	; (1e70 <pxCurrentTCBConst2>)
    1e52:	6819      	ldr	r1, [r3, #0]
    1e54:	6808      	ldr	r0, [r1, #0]
    1e56:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e5a:	f380 8809 	msr	PSP, r0
    1e5e:	f3bf 8f6f 	isb	sy
    1e62:	f04f 0000 	mov.w	r0, #0
    1e66:	f380 8811 	msr	BASEPRI, r0
    1e6a:	4770      	bx	lr
    1e6c:	f3af 8000 	nop.w

00001e70 <pxCurrentTCBConst2>:
    1e70:	10001290 	.word	0x10001290

00001e74 <vPortEnterCritical>:
vPortEnterCritical():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:416
{
    1e74:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
    1e76:	f04f 0318 	mov.w	r3, #24
    1e7a:	f383 8811 	msr	BASEPRI, r3
    1e7e:	f3bf 8f6f 	isb	sy
    1e82:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    1e86:	4a09      	ldr	r2, [pc, #36]	; (1eac <vPortEnterCritical+0x38>)
    1e88:	6813      	ldr	r3, [r2, #0]
    1e8a:	3301      	adds	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    1e8c:	2b01      	cmp	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    1e8e:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    1e90:	d10a      	bne.n	1ea8 <vPortEnterCritical+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
    1e92:	4b07      	ldr	r3, [pc, #28]	; (1eb0 <vPortEnterCritical+0x3c>)
    1e94:	681b      	ldr	r3, [r3, #0]
    1e96:	f013 0fff 	tst.w	r3, #255	; 0xff
    1e9a:	d005      	beq.n	1ea8 <vPortEnterCritical+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427 (discriminator 1)
    1e9c:	4905      	ldr	r1, [pc, #20]	; (1eb4 <vPortEnterCritical+0x40>)
    1e9e:	f240 10ab 	movw	r0, #427	; 0x1ab
    1ea2:	f7ff fd4b 	bl	193c <configASSERT_callback>
    1ea6:	e7fe      	b.n	1ea6 <vPortEnterCritical+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:429
}
    1ea8:	bd08      	pop	{r3, pc}
    1eaa:	bf00      	nop
    1eac:	1000128c 	.word	0x1000128c
    1eb0:	e000ed04 	.word	0xe000ed04
    1eb4:	0000b370 	.word	0x0000b370

00001eb8 <vPortExitCritical>:
vPortExitCritical():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    1eb8:	4a07      	ldr	r2, [pc, #28]	; (1ed8 <vPortExitCritical+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:433
{
    1eba:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    1ebc:	6813      	ldr	r3, [r2, #0]
    1ebe:	b92b      	cbnz	r3, 1ecc <vPortExitCritical+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434 (discriminator 1)
    1ec0:	4906      	ldr	r1, [pc, #24]	; (1edc <vPortExitCritical+0x24>)
    1ec2:	f44f 70d9 	mov.w	r0, #434	; 0x1b2
    1ec6:	f7ff fd39 	bl	193c <configASSERT_callback>
    1eca:	e7fe      	b.n	1eca <vPortExitCritical+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	uxCriticalNesting--;
    1ecc:	3b01      	subs	r3, #1
    1ece:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:436
	if( uxCriticalNesting == 0 )
    1ed0:	b90b      	cbnz	r3, 1ed6 <vPortExitCritical+0x1e>
vPortSetBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
    1ed2:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:440
}
    1ed6:	bd08      	pop	{r3, pc}
    1ed8:	1000128c 	.word	0x1000128c
    1edc:	0000b3a5 	.word	0x0000b3a5

00001ee0 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:447
	__asm volatile
    1ee0:	f3ef 8009 	mrs	r0, PSP
    1ee4:	f3bf 8f6f 	isb	sy
    1ee8:	4b15      	ldr	r3, [pc, #84]	; (1f40 <pxCurrentTCBConst>)
    1eea:	681a      	ldr	r2, [r3, #0]
    1eec:	f01e 0f10 	tst.w	lr, #16
    1ef0:	bf08      	it	eq
    1ef2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
    1ef6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1efa:	6010      	str	r0, [r2, #0]
    1efc:	e92d 0009 	stmdb	sp!, {r0, r3}
    1f00:	f04f 0018 	mov.w	r0, #24
    1f04:	f380 8811 	msr	BASEPRI, r0
    1f08:	f3bf 8f4f 	dsb	sy
    1f0c:	f3bf 8f6f 	isb	sy
    1f10:	f001 f9b8 	bl	3284 <vTaskSwitchContext>
    1f14:	f04f 0000 	mov.w	r0, #0
    1f18:	f380 8811 	msr	BASEPRI, r0
    1f1c:	bc09      	pop	{r0, r3}
    1f1e:	6819      	ldr	r1, [r3, #0]
    1f20:	6808      	ldr	r0, [r1, #0]
    1f22:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f26:	f01e 0f10 	tst.w	lr, #16
    1f2a:	bf08      	it	eq
    1f2c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
    1f30:	f380 8809 	msr	PSP, r0
    1f34:	f3bf 8f6f 	isb	sy
    1f38:	4770      	bx	lr
    1f3a:	bf00      	nop
    1f3c:	f3af 8000 	nop.w

00001f40 <pxCurrentTCBConst>:
    1f40:	10001290 	.word	0x10001290

00001f44 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:501
{
    1f44:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    1f46:	f04f 0318 	mov.w	r3, #24
    1f4a:	f383 8811 	msr	BASEPRI, r3
    1f4e:	f3bf 8f6f 	isb	sy
    1f52:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:509
		if( xTaskIncrementTick() != pdFALSE )
    1f56:	f001 f82b 	bl	2fb0 <xTaskIncrementTick>
    1f5a:	b118      	cbz	r0, 1f64 <xPortSysTickHandler+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:513
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    1f5c:	4b03      	ldr	r3, [pc, #12]	; (1f6c <xPortSysTickHandler+0x28>)
    1f5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1f62:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    1f64:	2300      	movs	r3, #0
    1f66:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:517
}
    1f6a:	bd08      	pop	{r3, pc}
    1f6c:	e000ed04 	.word	0xe000ed04

00001f70 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
{
    1f70:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    1f72:	4a08      	ldr	r2, [pc, #32]	; (1f94 <vPortSetupTimerInterrupt+0x24>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:703
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    1f74:	4c08      	ldr	r4, [pc, #32]	; (1f98 <vPortSetupTimerInterrupt+0x28>)
    1f76:	2300      	movs	r3, #0
    1f78:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    1f7a:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:707
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    1f7c:	f7fe f94e 	bl	21c <clock__get_core_clock_hz>
    1f80:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    1f84:	fbb0 f0f3 	udiv	r0, r0, r3
    1f88:	4b04      	ldr	r3, [pc, #16]	; (1f9c <vPortSetupTimerInterrupt+0x2c>)
    1f8a:	3801      	subs	r0, #1
    1f8c:	6018      	str	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:708
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    1f8e:	2307      	movs	r3, #7
    1f90:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:709
}
    1f92:	bd10      	pop	{r4, pc}
    1f94:	e000e018 	.word	0xe000e018
    1f98:	e000e010 	.word	0xe000e010
    1f9c:	e000e014 	.word	0xe000e014

00001fa0 <xPortStartScheduler>:
xPortStartScheduler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    1fa0:	4b33      	ldr	r3, [pc, #204]	; (2070 <xPortStartScheduler+0xd0>)
    1fa2:	4a34      	ldr	r2, [pc, #208]	; (2074 <xPortStartScheduler+0xd4>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:300
{
    1fa4:	b513      	push	{r0, r1, r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    1fa6:	6819      	ldr	r1, [r3, #0]
    1fa8:	4291      	cmp	r1, r2
    1faa:	d105      	bne.n	1fb8 <xPortStartScheduler+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 1)
    1fac:	4932      	ldr	r1, [pc, #200]	; (2078 <xPortStartScheduler+0xd8>)
    1fae:	f44f 709a 	mov.w	r0, #308	; 0x134
    1fb2:	f7ff fcc3 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 2)
    1fb6:	e7fe      	b.n	1fb6 <xPortStartScheduler+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
    1fb8:	681a      	ldr	r2, [r3, #0]
    1fba:	4b30      	ldr	r3, [pc, #192]	; (207c <xPortStartScheduler+0xdc>)
    1fbc:	429a      	cmp	r2, r3
    1fbe:	d105      	bne.n	1fcc <xPortStartScheduler+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 1)
    1fc0:	492f      	ldr	r1, [pc, #188]	; (2080 <xPortStartScheduler+0xe0>)
    1fc2:	f240 1035 	movw	r0, #309	; 0x135
    1fc6:	f7ff fcb9 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 3)
    1fca:	e7fe      	b.n	1fca <xPortStartScheduler+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:323
		ulOriginalPriority = *pucFirstUserPriorityRegister;
    1fcc:	4b2d      	ldr	r3, [pc, #180]	; (2084 <xPortStartScheduler+0xe4>)
    1fce:	781a      	ldrb	r2, [r3, #0]
    1fd0:	b2d2      	uxtb	r2, r2
    1fd2:	9201      	str	r2, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:327
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
    1fd4:	22ff      	movs	r2, #255	; 0xff
    1fd6:	701a      	strb	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    1fd8:	781b      	ldrb	r3, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    1fda:	4a2b      	ldr	r2, [pc, #172]	; (2088 <xPortStartScheduler+0xe8>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    1fdc:	b2db      	uxtb	r3, r3
    1fde:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    1fe2:	f89d 3003 	ldrb.w	r3, [sp, #3]
    1fe6:	f003 0318 	and.w	r3, r3, #24
    1fea:	7013      	strb	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:337
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
    1fec:	4a27      	ldr	r2, [pc, #156]	; (208c <xPortStartScheduler+0xec>)
    1fee:	2307      	movs	r3, #7
    1ff0:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:338
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
    1ff2:	2100      	movs	r1, #0
    1ff4:	f89d 0003 	ldrb.w	r0, [sp, #3]
    1ff8:	0600      	lsls	r0, r0, #24
    1ffa:	f103 34ff 	add.w	r4, r3, #4294967295	; 0xffffffff
    1ffe:	d409      	bmi.n	2014 <xPortStartScheduler+0x74>
    2000:	b111      	cbz	r1, 2008 <xPortStartScheduler+0x68>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
    2002:	2b02      	cmp	r3, #2
    2004:	6013      	str	r3, [r2, #0]
    2006:	d00e      	beq.n	2026 <xPortStartScheduler+0x86>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 1)
    2008:	4921      	ldr	r1, [pc, #132]	; (2090 <xPortStartScheduler+0xf0>)
    200a:	f240 105d 	movw	r0, #349	; 0x15d
    200e:	f7ff fc95 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 4)
    2012:	e7fe      	b.n	2012 <xPortStartScheduler+0x72>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:341
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
    2014:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2018:	005b      	lsls	r3, r3, #1
    201a:	b2db      	uxtb	r3, r3
    201c:	f88d 3003 	strb.w	r3, [sp, #3]
    2020:	2101      	movs	r1, #1
    2022:	4623      	mov	r3, r4
    2024:	e7e6      	b.n	1ff4 <xPortStartScheduler+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:365
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
    2026:	f44f 7300 	mov.w	r3, #512	; 0x200
    202a:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:369
		*pucFirstUserPriorityRegister = ulOriginalPriority;
    202c:	9b01      	ldr	r3, [sp, #4]
    202e:	4a15      	ldr	r2, [pc, #84]	; (2084 <xPortStartScheduler+0xe4>)
    2030:	b2db      	uxtb	r3, r3
    2032:	7013      	strb	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:374
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    2034:	4b17      	ldr	r3, [pc, #92]	; (2094 <xPortStartScheduler+0xf4>)
    2036:	681a      	ldr	r2, [r3, #0]
    2038:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
    203c:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:375
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    203e:	681a      	ldr	r2, [r3, #0]
    2040:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
    2044:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	vPortSetupTimerInterrupt();
    2046:	f7ff ff93 	bl	1f70 <vPortSetupTimerInterrupt>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:382
	uxCriticalNesting = 0;
    204a:	4b13      	ldr	r3, [pc, #76]	; (2098 <xPortStartScheduler+0xf8>)
    204c:	2400      	movs	r4, #0
    204e:	601c      	str	r4, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:385
	vPortEnableVFP();
    2050:	f7ff febc 	bl	1dcc <vPortEnableVFP>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    2054:	4a11      	ldr	r2, [pc, #68]	; (209c <xPortStartScheduler+0xfc>)
    2056:	6813      	ldr	r3, [r2, #0]
    2058:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    205c:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:391
	prvPortStartFirstTask();
    205e:	f7ff fea1 	bl	1da4 <prvPortStartFirstTask>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:399
	vTaskSwitchContext();
    2062:	f001 f90f 	bl	3284 <vTaskSwitchContext>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:400
	prvTaskExitError();
    2066:	f7ff febb 	bl	1de0 <prvTaskExitError>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:404
}
    206a:	4620      	mov	r0, r4
    206c:	b002      	add	sp, #8
    206e:	bd10      	pop	{r4, pc}
    2070:	e000ed00 	.word	0xe000ed00
    2074:	410fc271 	.word	0x410fc271
    2078:	0000b423 	.word	0x0000b423
    207c:	410fc270 	.word	0x410fc270
    2080:	0000b446 	.word	0x0000b446
    2084:	e000e400 	.word	0xe000e400
    2088:	10001284 	.word	0x10001284
    208c:	10001288 	.word	0x10001288
    2090:	0000b469 	.word	0x0000b469
    2094:	e000ed20 	.word	0xe000ed20
    2098:	1000128c 	.word	0x1000128c
    209c:	e000ef34 	.word	0xe000ef34

000020a0 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:730
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
    20a0:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:735
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
    20a2:	f3ef 8305 	mrs	r3, IPSR
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:738

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
    20a6:	2b0f      	cmp	r3, #15
    20a8:	d90b      	bls.n	20c2 <vPortValidateInterruptPriority+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:741
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
    20aa:	4a0d      	ldr	r2, [pc, #52]	; (20e0 <vPortValidateInterruptPriority+0x40>)
    20ac:	5c9b      	ldrb	r3, [r3, r2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
    20ae:	4a0d      	ldr	r2, [pc, #52]	; (20e4 <vPortValidateInterruptPriority+0x44>)
    20b0:	7812      	ldrb	r2, [r2, #0]
    20b2:	429a      	cmp	r2, r3
    20b4:	d905      	bls.n	20c2 <vPortValidateInterruptPriority+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766 (discriminator 1)
    20b6:	490c      	ldr	r1, [pc, #48]	; (20e8 <vPortValidateInterruptPriority+0x48>)
    20b8:	f240 20fe 	movw	r0, #766	; 0x2fe
    20bc:	f7ff fc3e 	bl	193c <configASSERT_callback>
    20c0:	e7fe      	b.n	20c0 <vPortValidateInterruptPriority+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
    20c2:	4b0a      	ldr	r3, [pc, #40]	; (20ec <vPortValidateInterruptPriority+0x4c>)
    20c4:	4a0a      	ldr	r2, [pc, #40]	; (20f0 <vPortValidateInterruptPriority+0x50>)
    20c6:	681b      	ldr	r3, [r3, #0]
    20c8:	6812      	ldr	r2, [r2, #0]
    20ca:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    20ce:	4293      	cmp	r3, r2
    20d0:	d905      	bls.n	20de <vPortValidateInterruptPriority+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 1)
    20d2:	4908      	ldr	r1, [pc, #32]	; (20f4 <vPortValidateInterruptPriority+0x54>)
    20d4:	f240 300e 	movw	r0, #782	; 0x30e
    20d8:	f7ff fc30 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 2)
    20dc:	e7fe      	b.n	20dc <vPortValidateInterruptPriority+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:783
	}
    20de:	bd08      	pop	{r3, pc}
    20e0:	e000e3f0 	.word	0xe000e3f0
    20e4:	10001284 	.word	0x10001284
    20e8:	0000b3b7 	.word	0x0000b3b7
    20ec:	e000ed0c 	.word	0xe000ed0c
    20f0:	10001288 	.word	0x10001288
    20f4:	0000b3e1 	.word	0x0000b3e1

000020f8 <pvPortMalloc>:
pvPortMalloc():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    20f8:	b510      	push	{r4, lr}
    20fa:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:62
void *pvReturn;

	vTaskSuspendAll();
    20fc:	f000 ff50 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:64
	{
		pvReturn = malloc( xWantedSize );
    2100:	4620      	mov	r0, r4
    2102:	f003 f871 	bl	51e8 <malloc>
    2106:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    2108:	f000 ffe4 	bl	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
    210c:	b90c      	cbnz	r4, 2112 <pvPortMalloc+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
    210e:	f7ff fc05 	bl	191c <vApplicationMallocFailedHook>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:80
		}
	}
	#endif

	return pvReturn;
}
    2112:	4620      	mov	r0, r4
    2114:	bd10      	pop	{r4, pc}

00002116 <vPortFree>:
vPortFree():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    2116:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:85
	if( pv )
    2118:	4604      	mov	r4, r0
    211a:	b140      	cbz	r0, 212e <vPortFree+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:87
	{
		vTaskSuspendAll();
    211c:	f000 ff40 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:89
		{
			free( pv );
    2120:	4620      	mov	r0, r4
    2122:	f003 f869 	bl	51f8 <free>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
    2126:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:92
		( void ) xTaskResumeAll();
    212a:	f000 bfd3 	b.w	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
}
    212e:	bd10      	pop	{r4, pc}

00002130 <vListInitialise>:
vListInitialise():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2130:	f100 0308 	add.w	r3, r0, #8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
    2134:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2138:	6043      	str	r3, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    213a:	e9c0 2302 	strd	r2, r3, [r0, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    213e:	6103      	str	r3, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
    2140:	2300      	movs	r3, #0
    2142:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
    2144:	4770      	bx	lr

00002146 <vListInitialiseItem>:
vListInitialiseItem():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
    2146:	2300      	movs	r3, #0
    2148:	6103      	str	r3, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
    214a:	4770      	bx	lr

0000214c <vListInsertEnd>:
vListInsertEnd():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
    214c:	6843      	ldr	r3, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
    214e:	604b      	str	r3, [r1, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
    2150:	689a      	ldr	r2, [r3, #8]
    2152:	608a      	str	r2, [r1, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
    2154:	689a      	ldr	r2, [r3, #8]
    2156:	6051      	str	r1, [r2, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
    2158:	6099      	str	r1, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    215a:	6803      	ldr	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
    215c:	6108      	str	r0, [r1, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
    215e:	3301      	adds	r3, #1
    2160:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:100
}
    2162:	4770      	bx	lr

00002164 <vListInsert>:
vListInsert():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
    2164:	680a      	ldr	r2, [r1, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
    2166:	1c53      	adds	r3, r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:104
{
    2168:	b530      	push	{r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
    216a:	d10a      	bne.n	2182 <vListInsert+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
    216c:	6903      	ldr	r3, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
    216e:	685a      	ldr	r2, [r3, #4]
    2170:	604a      	str	r2, [r1, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
    2172:	6091      	str	r1, [r2, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
    2174:	608b      	str	r3, [r1, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
    2176:	6059      	str	r1, [r3, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    2178:	6803      	ldr	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
    217a:	6108      	str	r0, [r1, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
    217c:	3301      	adds	r3, #1
    217e:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:167
}
    2180:	bd30      	pop	{r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
    2182:	f100 0308 	add.w	r3, r0, #8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:150 (discriminator 1)
    2186:	685c      	ldr	r4, [r3, #4]
    2188:	6825      	ldr	r5, [r4, #0]
    218a:	4295      	cmp	r5, r2
    218c:	d8ef      	bhi.n	216e <vListInsert+0xa>
    218e:	4623      	mov	r3, r4
    2190:	e7f9      	b.n	2186 <vListInsert+0x22>

00002192 <uxListRemove>:
uxListRemove():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    2192:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
    2196:	6903      	ldr	r3, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    2198:	608a      	str	r2, [r1, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    219a:	6051      	str	r1, [r2, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
    219c:	6859      	ldr	r1, [r3, #4]
    219e:	4281      	cmp	r1, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    21a0:	bf08      	it	eq
    21a2:	605a      	streq	r2, [r3, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
    21a4:	2200      	movs	r2, #0
    21a6:	6102      	str	r2, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
    21a8:	681a      	ldr	r2, [r3, #0]
    21aa:	3a01      	subs	r2, #1
    21ac:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
    21ae:	6818      	ldr	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:196
}
    21b0:	4770      	bx	lr

000021b2 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
    21b2:	b510      	push	{r4, lr}
    21b4:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
    21b6:	f7ff fe5d 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
    21ba:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    21bc:	f7ff fe7c 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2305

	return xReturn;
}
    21c0:	fab4 f084 	clz	r0, r4
    21c4:	0940      	lsrs	r0, r0, #5
    21c6:	bd10      	pop	{r4, pc}

000021c8 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    21c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    21ca:	4615      	mov	r5, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    21cc:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    21ce:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    21d0:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    21d2:	b952      	cbnz	r2, 21ea <prvCopyDataToQueue+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    21d4:	6807      	ldr	r7, [r0, #0]
    21d6:	bb47      	cbnz	r7, 222a <prvCopyDataToQueue+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    21d8:	6880      	ldr	r0, [r0, #8]
    21da:	f001 fad9 	bl	3790 <xTaskPriorityDisinherit>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
    21de:	60a7      	str	r7, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    21e0:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    21e2:	3601      	adds	r6, #1
    21e4:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2146
}
    21e6:	4628      	mov	r0, r5
    21e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
    21ea:	b965      	cbnz	r5, 2206 <prvCopyDataToQueue+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    21ec:	6840      	ldr	r0, [r0, #4]
    21ee:	f003 f80b 	bl	5208 <memcpy>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    21f2:	6863      	ldr	r3, [r4, #4]
    21f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
    21f6:	4413      	add	r3, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    21f8:	68a2      	ldr	r2, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    21fa:	6063      	str	r3, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    21fc:	4293      	cmp	r3, r2
    21fe:	d3f0      	bcc.n	21e2 <prvCopyDataToQueue+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
    2200:	6823      	ldr	r3, [r4, #0]
    2202:	6063      	str	r3, [r4, #4]
    2204:	e7ed      	b.n	21e2 <prvCopyDataToQueue+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
    2206:	68c0      	ldr	r0, [r0, #12]
    2208:	f002 fffe 	bl	5208 <memcpy>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    220c:	6c23      	ldr	r3, [r4, #64]	; 0x40
    220e:	68e2      	ldr	r2, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2210:	6821      	ldr	r1, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2212:	425b      	negs	r3, r3
    2214:	441a      	add	r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2216:	428a      	cmp	r2, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2218:	60e2      	str	r2, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
    221a:	bf3e      	ittt	cc
    221c:	68a2      	ldrcc	r2, [r4, #8]
    221e:	189b      	addcc	r3, r3, r2
    2220:	60e3      	strcc	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
    2222:	2d02      	cmp	r5, #2
    2224:	d101      	bne.n	222a <prvCopyDataToQueue+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2226:	b116      	cbz	r6, 222e <prvCopyDataToQueue+0x66>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
    2228:	3e01      	subs	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
    222a:	2500      	movs	r5, #0
    222c:	e7d9      	b.n	21e2 <prvCopyDataToQueue+0x1a>
    222e:	4635      	mov	r5, r6
    2230:	e7d7      	b.n	21e2 <prvCopyDataToQueue+0x1a>

00002232 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    2232:	4603      	mov	r3, r0
    2234:	b410      	push	{r4}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    2236:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    2238:	4608      	mov	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    223a:	b162      	cbz	r2, 2256 <prvCopyDataFromQueue+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    223c:	68d9      	ldr	r1, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    223e:	689c      	ldr	r4, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2240:	4411      	add	r1, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    2242:	42a1      	cmp	r1, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2244:	60d9      	str	r1, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
    2246:	bf24      	itt	cs
    2248:	6819      	ldrcs	r1, [r3, #0]
    224a:	60d9      	strcs	r1, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    224c:	68d9      	ldr	r1, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    224e:	f85d 4b04 	ldr.w	r4, [sp], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2252:	f002 bfd9 	b.w	5208 <memcpy>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    2256:	f85d 4b04 	ldr.w	r4, [sp], #4
    225a:	4770      	bx	lr

0000225c <prvUnlockQueue>:
prvUnlockQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2168
{
    225c:	b570      	push	{r4, r5, r6, lr}
    225e:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
    2260:	f7ff fe08 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    2264:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2268:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    226c:	b26d      	sxtb	r5, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
    226e:	2d00      	cmp	r5, #0
    2270:	dc14      	bgt.n	229c <prvUnlockQueue+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
    2272:	23ff      	movs	r3, #255	; 0xff
    2274:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
    2278:	f7ff fe1e 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
    227c:	f7ff fdfa 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    2280:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2284:	f104 0610 	add.w	r6, r4, #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    2288:	b26d      	sxtb	r5, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
    228a:	2d00      	cmp	r5, #0
    228c:	dc12      	bgt.n	22b4 <prvUnlockQueue+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
    228e:	23ff      	movs	r3, #255	; 0xff
    2290:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2284
}
    2294:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
    2298:	f7ff be0e 	b.w	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2228
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    229c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    229e:	2b00      	cmp	r3, #0
    22a0:	d0e7      	beq.n	2272 <prvUnlockQueue+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    22a2:	4630      	mov	r0, r6
    22a4:	f001 f8ce 	bl	3444 <xTaskRemoveFromEventList>
    22a8:	b108      	cbz	r0, 22ae <prvUnlockQueue+0x52>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2234
						vTaskMissedYield();
    22aa:	f001 f951 	bl	3550 <vTaskMissedYield>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2248
			--cTxLock;
    22ae:	3d01      	subs	r5, #1
    22b0:	b26d      	sxtb	r5, r5
    22b2:	e7dc      	b.n	226e <prvUnlockQueue+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    22b4:	6923      	ldr	r3, [r4, #16]
    22b6:	2b00      	cmp	r3, #0
    22b8:	d0e9      	beq.n	228e <prvUnlockQueue+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    22ba:	4630      	mov	r0, r6
    22bc:	f001 f8c2 	bl	3444 <xTaskRemoveFromEventList>
    22c0:	b108      	cbz	r0, 22c6 <prvUnlockQueue+0x6a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
    22c2:	f001 f945 	bl	3550 <vTaskMissedYield>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2273
				--cRxLock;
    22c6:	3d01      	subs	r5, #1
    22c8:	b26d      	sxtb	r5, r5
    22ca:	e7de      	b.n	228a <prvUnlockQueue+0x2e>

000022cc <xQueueGenericReset>:
xQueueGenericReset():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:256
{
    22cc:	b538      	push	{r3, r4, r5, lr}
    22ce:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:259
	configASSERT( pxQueue );
    22d0:	4604      	mov	r4, r0
    22d2:	b928      	cbnz	r0, 22e0 <xQueueGenericReset+0x14>
    22d4:	491a      	ldr	r1, [pc, #104]	; (2340 <xQueueGenericReset+0x74>)
    22d6:	f240 1003 	movw	r0, #259	; 0x103
    22da:	f7ff fb2f 	bl	193c <configASSERT_callback>
    22de:	e7fe      	b.n	22de <xQueueGenericReset+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
    22e0:	f7ff fdc8 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    22e4:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
    22e8:	6822      	ldr	r2, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
    22ea:	6062      	str	r2, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    22ec:	4343      	muls	r3, r0
    22ee:	18d1      	adds	r1, r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    22f0:	1a1b      	subs	r3, r3, r0
    22f2:	4413      	add	r3, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    22f4:	60a1      	str	r1, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    22f6:	60e3      	str	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    22f8:	2100      	movs	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    22fa:	23ff      	movs	r3, #255	; 0xff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    22fc:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    22fe:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
    2302:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
    2306:	b995      	cbnz	r5, 232e <xQueueGenericReset+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2308:	6923      	ldr	r3, [r4, #16]
    230a:	b163      	cbz	r3, 2326 <xQueueGenericReset+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    230c:	f104 0010 	add.w	r0, r4, #16
    2310:	f001 f898 	bl	3444 <xTaskRemoveFromEventList>
    2314:	b138      	cbz	r0, 2326 <xQueueGenericReset+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
    2316:	4b0b      	ldr	r3, [pc, #44]	; (2344 <xQueueGenericReset+0x78>)
    2318:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    231c:	601a      	str	r2, [r3, #0]
    231e:	f3bf 8f4f 	dsb	sy
    2322:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
    2326:	f7ff fdc7 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:305
}
    232a:	2001      	movs	r0, #1
    232c:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
    232e:	f104 0010 	add.w	r0, r4, #16
    2332:	f7ff fefd 	bl	2130 <vListInitialise>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
    2336:	f104 0024 	add.w	r0, r4, #36	; 0x24
    233a:	f7ff fef9 	bl	2130 <vListInitialise>
    233e:	e7f2      	b.n	2326 <xQueueGenericReset+0x5a>
    2340:	0000b56f 	.word	0x0000b56f
    2344:	e000ed04 	.word	0xe000ed04

00002348 <xQueueGenericCreateStatic>:
xQueueGenericCreateStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:311
	{
    2348:	b513      	push	{r0, r1, r4, lr}
    234a:	461c      	mov	r4, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:314
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    234c:	b928      	cbnz	r0, 235a <xQueueGenericCreateStatic+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:314 (discriminator 1)
    234e:	491e      	ldr	r1, [pc, #120]	; (23c8 <xQueueGenericCreateStatic+0x80>)
    2350:	f44f 709d 	mov.w	r0, #314	; 0x13a
    2354:	f7ff faf2 	bl	193c <configASSERT_callback>
    2358:	e7fe      	b.n	2358 <xQueueGenericCreateStatic+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:318
		configASSERT( pxStaticQueue != NULL );
    235a:	b92b      	cbnz	r3, 2368 <xQueueGenericCreateStatic+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 1)
    235c:	491b      	ldr	r1, [pc, #108]	; (23cc <xQueueGenericCreateStatic+0x84>)
    235e:	f44f 709f 	mov.w	r0, #318	; 0x13e
    2362:	f7ff faeb 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 2)
    2366:	e7fe      	b.n	2366 <xQueueGenericCreateStatic+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:322
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
    2368:	b132      	cbz	r2, 2378 <xQueueGenericCreateStatic+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 1)
    236a:	b961      	cbnz	r1, 2386 <xQueueGenericCreateStatic+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 2)
    236c:	4918      	ldr	r1, [pc, #96]	; (23d0 <xQueueGenericCreateStatic+0x88>)
    236e:	f44f 70a1 	mov.w	r0, #322	; 0x142
    2372:	f7ff fae3 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 3)
    2376:	e7fe      	b.n	2376 <xQueueGenericCreateStatic+0x2e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:323 (discriminator 1)
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
    2378:	b129      	cbz	r1, 2386 <xQueueGenericCreateStatic+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:323
    237a:	4916      	ldr	r1, [pc, #88]	; (23d4 <xQueueGenericCreateStatic+0x8c>)
    237c:	f240 1043 	movw	r0, #323	; 0x143
    2380:	f7ff fadc 	bl	193c <configASSERT_callback>
    2384:	e7fe      	b.n	2384 <xQueueGenericCreateStatic+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:330
			volatile size_t xSize = sizeof( StaticQueue_t );
    2386:	2350      	movs	r3, #80	; 0x50
    2388:	9301      	str	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:331
			configASSERT( xSize == sizeof( Queue_t ) );
    238a:	9b01      	ldr	r3, [sp, #4]
    238c:	2b50      	cmp	r3, #80	; 0x50
    238e:	d005      	beq.n	239c <xQueueGenericCreateStatic+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 1)
    2390:	4911      	ldr	r1, [pc, #68]	; (23d8 <xQueueGenericCreateStatic+0x90>)
    2392:	f240 104b 	movw	r0, #331	; 0x14b
    2396:	f7ff fad1 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 5)
    239a:	e7fe      	b.n	239a <xQueueGenericCreateStatic+0x52>
prvInitialiseNewQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    239c:	2900      	cmp	r1, #0
    239e:	bf08      	it	eq
    23a0:	4622      	moveq	r2, r4
xQueueGenericCreateStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:332
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
    23a2:	9b01      	ldr	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    23a4:	6022      	str	r2, [r4, #0]
    23a6:	2301      	movs	r3, #1
prvInitialiseNewQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    23a8:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
xQueueGenericCreateStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    23ac:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
prvInitialiseNewQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    23b0:	4619      	mov	r1, r3
    23b2:	4620      	mov	r0, r4
    23b4:	f7ff ff8a 	bl	22cc <xQueueGenericReset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    23b8:	f89d 3010 	ldrb.w	r3, [sp, #16]
    23bc:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
xQueueGenericCreateStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:361
	}
    23c0:	4620      	mov	r0, r4
    23c2:	b002      	add	sp, #8
    23c4:	bd10      	pop	{r4, pc}
    23c6:	bf00      	nop
    23c8:	0000b4ac 	.word	0x0000b4ac
    23cc:	0000b4ce 	.word	0x0000b4ce
    23d0:	0000b4e4 	.word	0x0000b4e4
    23d4:	0000b51c 	.word	0x0000b51c
    23d8:	0000b554 	.word	0x0000b554

000023dc <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
    23dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    23de:	460d      	mov	r5, r1
    23e0:	4617      	mov	r7, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    23e2:	4606      	mov	r6, r0
    23e4:	b928      	cbnz	r0, 23f2 <xQueueGenericCreate+0x16>
    23e6:	490f      	ldr	r1, [pc, #60]	; (2424 <xQueueGenericCreate+0x48>)
    23e8:	f44f 70bb 	mov.w	r0, #374	; 0x176
    23ec:	f7ff faa6 	bl	193c <configASSERT_callback>
    23f0:	e7fe      	b.n	23f0 <xQueueGenericCreate+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    23f2:	4348      	muls	r0, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
    23f4:	3050      	adds	r0, #80	; 0x50
    23f6:	f7ff fe7f 	bl	20f8 <pvPortMalloc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
    23fa:	4604      	mov	r4, r0
    23fc:	b170      	cbz	r0, 241c <xQueueGenericCreate+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:411
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
    23fe:	2300      	movs	r3, #0
    2400:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
prvInitialiseNewQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2404:	b165      	cbz	r5, 2420 <xQueueGenericCreate+0x44>
xQueueGenericCreate():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2406:	f100 0350 	add.w	r3, r0, #80	; 0x50
prvInitialiseNewQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
    240a:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    240c:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    2410:	2101      	movs	r1, #1
    2412:	4620      	mov	r0, r4
    2414:	f7ff ff5a 	bl	22cc <xQueueGenericReset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    2418:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
xQueueGenericCreate():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:424
	}
    241c:	4620      	mov	r0, r4
    241e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
prvInitialiseNewQueue():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2420:	4603      	mov	r3, r0
    2422:	e7f2      	b.n	240a <xQueueGenericCreate+0x2e>
    2424:	0000b4ac 	.word	0x0000b4ac

00002428 <xQueueGenericSend>:
xQueueGenericSend():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
    2428:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    242c:	4688      	mov	r8, r1
    242e:	9201      	str	r2, [sp, #4]
    2430:	461f      	mov	r7, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:753
	configASSERT( pxQueue );
    2432:	4604      	mov	r4, r0
    2434:	b928      	cbnz	r0, 2442 <xQueueGenericSend+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:753 (discriminator 1)
    2436:	494e      	ldr	r1, [pc, #312]	; (2570 <xQueueGenericSend+0x148>)
    2438:	f240 20f1 	movw	r0, #753	; 0x2f1
    243c:	f7ff fa7e 	bl	193c <configASSERT_callback>
    2440:	e7fe      	b.n	2440 <xQueueGenericSend+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2442:	b939      	cbnz	r1, 2454 <xQueueGenericSend+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 1)
    2444:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2446:	b12b      	cbz	r3, 2454 <xQueueGenericSend+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 2)
    2448:	494a      	ldr	r1, [pc, #296]	; (2574 <xQueueGenericSend+0x14c>)
    244a:	f240 20f2 	movw	r0, #754	; 0x2f2
    244e:	f7ff fa75 	bl	193c <configASSERT_callback>
    2452:	e7fe      	b.n	2452 <xQueueGenericSend+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2454:	2f02      	cmp	r7, #2
    2456:	d108      	bne.n	246a <xQueueGenericSend+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 1)
    2458:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    245a:	2b01      	cmp	r3, #1
    245c:	d005      	beq.n	246a <xQueueGenericSend+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 2)
    245e:	4946      	ldr	r1, [pc, #280]	; (2578 <xQueueGenericSend+0x150>)
    2460:	f240 20f3 	movw	r0, #755	; 0x2f3
    2464:	f7ff fa6a 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 3)
    2468:	e7fe      	b.n	2468 <xQueueGenericSend+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    246a:	f001 f92f 	bl	36cc <xTaskGetSchedulerState>
    246e:	4606      	mov	r6, r0
    2470:	b938      	cbnz	r0, 2482 <xQueueGenericSend+0x5a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 1)
    2472:	9b01      	ldr	r3, [sp, #4]
    2474:	b133      	cbz	r3, 2484 <xQueueGenericSend+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 2)
    2476:	4941      	ldr	r1, [pc, #260]	; (257c <xQueueGenericSend+0x154>)
    2478:	f240 20f6 	movw	r0, #758	; 0x2f6
    247c:	f7ff fa5e 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 4)
    2480:	e7fe      	b.n	2480 <xQueueGenericSend+0x58>
    2482:	2600      	movs	r6, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    2484:	f04f 0900 	mov.w	r9, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2488:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 2580 <xQueueGenericSend+0x158>
    248c:	e037      	b.n	24fe <xQueueGenericSend+0xd6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
    248e:	9d01      	ldr	r5, [sp, #4]
    2490:	b91d      	cbnz	r5, 249a <xQueueGenericSend+0x72>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
    2492:	f7ff fd11 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
    2496:	2000      	movs	r0, #0
    2498:	e050      	b.n	253c <xQueueGenericSend+0x114>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
    249a:	b916      	cbnz	r6, 24a2 <xQueueGenericSend+0x7a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
    249c:	a802      	add	r0, sp, #8
    249e:	f001 f811 	bl	34c4 <vTaskInternalSetTimeOutState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
    24a2:	f7ff fd09 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
    24a6:	f000 fd7b 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    24aa:	f7ff fce3 	bl	1e74 <vPortEnterCritical>
    24ae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    24b2:	2bff      	cmp	r3, #255	; 0xff
    24b4:	bf08      	it	eq
    24b6:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
    24ba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    24be:	2bff      	cmp	r3, #255	; 0xff
    24c0:	bf08      	it	eq
    24c2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
    24c6:	f7ff fcf7 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    24ca:	a901      	add	r1, sp, #4
    24cc:	a802      	add	r0, sp, #8
    24ce:	f001 f805 	bl	34dc <xTaskCheckForTimeOut>
    24d2:	2800      	cmp	r0, #0
    24d4:	d146      	bne.n	2564 <xQueueGenericSend+0x13c>
prvIsQueueFull():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2331

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
    24d6:	f7ff fccd 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2333
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
    24da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    24dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    24de:	429a      	cmp	r2, r3
    24e0:	d12f      	bne.n	2542 <xQueueGenericSend+0x11a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2342
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    24e2:	f7ff fce9 	bl	1eb8 <vPortExitCritical>
xQueueGenericSend():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
    24e6:	9901      	ldr	r1, [sp, #4]
    24e8:	f104 0010 	add.w	r0, r4, #16
    24ec:	f000 ff92 	bl	3414 <vTaskPlaceOnEventList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
    24f0:	4620      	mov	r0, r4
    24f2:	f7ff feb3 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
    24f6:	f000 fded 	bl	30d4 <xTaskResumeAll>
    24fa:	b350      	cbz	r0, 2552 <xQueueGenericSend+0x12a>
    24fc:	2601      	movs	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
    24fe:	f7ff fcb9 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2502:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2504:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2506:	429a      	cmp	r2, r3
    2508:	d301      	bcc.n	250e <xQueueGenericSend+0xe6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:774 (discriminator 1)
    250a:	2f02      	cmp	r7, #2
    250c:	d1bf      	bne.n	248e <xQueueGenericSend+0x66>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:840
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    250e:	463a      	mov	r2, r7
    2510:	4641      	mov	r1, r8
    2512:	4620      	mov	r0, r4
    2514:	f7ff fe58 	bl	21c8 <prvCopyDataToQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:844
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2518:	6a63      	ldr	r3, [r4, #36]	; 0x24
    251a:	b11b      	cbz	r3, 2524 <xQueueGenericSend+0xfc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:846
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    251c:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2520:	f000 ff90 	bl	3444 <xTaskRemoveFromEventList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:859
					else if( xYieldRequired != pdFALSE )
    2524:	b138      	cbz	r0, 2536 <xQueueGenericSend+0x10e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:865
						queueYIELD_IF_USING_PREEMPTION();
    2526:	4b16      	ldr	r3, [pc, #88]	; (2580 <xQueueGenericSend+0x158>)
    2528:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    252c:	601a      	str	r2, [r3, #0]
    252e:	f3bf 8f4f 	dsb	sy
    2532:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
    2536:	f7ff fcbf 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:875
				return pdPASS;
    253a:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:954
}
    253c:	b004      	add	sp, #16
    253e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
    2542:	f7ff fcb9 	bl	1eb8 <vPortExitCritical>
xQueueGenericSend():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
    2546:	4620      	mov	r0, r4
    2548:	f7ff fe88 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
    254c:	f000 fdc2 	bl	30d4 <xTaskResumeAll>
    2550:	e7d4      	b.n	24fc <xQueueGenericSend+0xd4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2552:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2556:	f8ca 3000 	str.w	r3, [sl]
    255a:	f3bf 8f4f 	dsb	sy
    255e:	f3bf 8f6f 	isb	sy
    2562:	e7cb      	b.n	24fc <xQueueGenericSend+0xd4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
    2564:	4620      	mov	r0, r4
    2566:	f7ff fe79 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
    256a:	f000 fdb3 	bl	30d4 <xTaskResumeAll>
    256e:	e792      	b.n	2496 <xQueueGenericSend+0x6e>
    2570:	0000b56f 	.word	0x0000b56f
    2574:	0000b577 	.word	0x0000b577
    2578:	0000b5c7 	.word	0x0000b5c7
    257c:	0000b60e 	.word	0x0000b60e
    2580:	e000ed04 	.word	0xe000ed04

00002584 <xQueueCreateMutexStatic>:
xQueueCreateMutexStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:520
	{
    2584:	b513      	push	{r0, r1, r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:528
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
    2586:	2200      	movs	r2, #0
    2588:	9000      	str	r0, [sp, #0]
    258a:	460b      	mov	r3, r1
    258c:	2001      	movs	r0, #1
    258e:	4611      	mov	r1, r2
    2590:	f7ff feda 	bl	2348 <xQueueGenericCreateStatic>
prvInitialiseMutex():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    2594:	4604      	mov	r4, r0
    2596:	b138      	cbz	r0, 25a8 <xQueueCreateMutexStatic+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    2598:	2300      	movs	r3, #0
    259a:	6083      	str	r3, [r0, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    259c:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    259e:	60c3      	str	r3, [r0, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    25a0:	461a      	mov	r2, r3
    25a2:	4619      	mov	r1, r3
    25a4:	f7ff ff40 	bl	2428 <xQueueGenericSend>
xQueueCreateMutexStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:532
	}
    25a8:	4620      	mov	r0, r4
    25aa:	b002      	add	sp, #8
    25ac:	bd10      	pop	{r4, pc}

000025ae <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:504
	{
    25ae:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:508
		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
    25b0:	4602      	mov	r2, r0
    25b2:	2100      	movs	r1, #0
    25b4:	2001      	movs	r0, #1
    25b6:	f7ff ff11 	bl	23dc <xQueueGenericCreate>
prvInitialiseMutex():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    25ba:	4604      	mov	r4, r0
    25bc:	b138      	cbz	r0, 25ce <xQueueCreateMutex+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    25be:	2300      	movs	r3, #0
    25c0:	6083      	str	r3, [r0, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    25c2:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    25c4:	60c3      	str	r3, [r0, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    25c6:	461a      	mov	r2, r3
    25c8:	4619      	mov	r1, r3
    25ca:	f7ff ff2d 	bl	2428 <xQueueGenericSend>
xQueueCreateMutex():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:512
	}
    25ce:	4620      	mov	r0, r4
    25d0:	bd10      	pop	{r4, pc}
    25d2:	Address 0x00000000000025d2 is out of bounds.


000025d4 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:958
{
    25d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    25d8:	4689      	mov	r9, r1
    25da:	4690      	mov	r8, r2
    25dc:	461f      	mov	r7, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:963
	configASSERT( pxQueue );
    25de:	4604      	mov	r4, r0
    25e0:	b928      	cbnz	r0, 25ee <xQueueGenericSendFromISR+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:963 (discriminator 1)
    25e2:	4928      	ldr	r1, [pc, #160]	; (2684 <xQueueGenericSendFromISR+0xb0>)
    25e4:	f240 30c3 	movw	r0, #963	; 0x3c3
    25e8:	f7ff f9a8 	bl	193c <configASSERT_callback>
    25ec:	e7fe      	b.n	25ec <xQueueGenericSendFromISR+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    25ee:	b939      	cbnz	r1, 2600 <xQueueGenericSendFromISR+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 1)
    25f0:	6c03      	ldr	r3, [r0, #64]	; 0x40
    25f2:	b12b      	cbz	r3, 2600 <xQueueGenericSendFromISR+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 2)
    25f4:	4924      	ldr	r1, [pc, #144]	; (2688 <xQueueGenericSendFromISR+0xb4>)
    25f6:	f44f 7071 	mov.w	r0, #964	; 0x3c4
    25fa:	f7ff f99f 	bl	193c <configASSERT_callback>
    25fe:	e7fe      	b.n	25fe <xQueueGenericSendFromISR+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2600:	2f02      	cmp	r7, #2
    2602:	d108      	bne.n	2616 <xQueueGenericSendFromISR+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 1)
    2604:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2606:	2b01      	cmp	r3, #1
    2608:	d005      	beq.n	2616 <xQueueGenericSendFromISR+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 2)
    260a:	4920      	ldr	r1, [pc, #128]	; (268c <xQueueGenericSendFromISR+0xb8>)
    260c:	f240 30c5 	movw	r0, #965	; 0x3c5
    2610:	f7ff f994 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 3)
    2614:	e7fe      	b.n	2614 <xQueueGenericSendFromISR+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    2616:	f7ff fd43 	bl	20a0 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    261a:	f3ef 8611 	mrs	r6, BASEPRI
    261e:	f04f 0318 	mov.w	r3, #24
    2622:	f383 8811 	msr	BASEPRI, r3
    2626:	f3bf 8f6f 	isb	sy
    262a:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    262e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2630:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2632:	429a      	cmp	r2, r3
    2634:	d301      	bcc.n	263a <xQueueGenericSendFromISR+0x66>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:990 (discriminator 1)
    2636:	2f02      	cmp	r7, #2
    2638:	d122      	bne.n	2680 <xQueueGenericSendFromISR+0xac>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    263a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    263e:	463a      	mov	r2, r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    2640:	b26d      	sxtb	r5, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2642:	4649      	mov	r1, r9
    2644:	4620      	mov	r0, r4
    2646:	f7ff fdbf 	bl	21c8 <prvCopyDataToQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
    264a:	1c6b      	adds	r3, r5, #1
    264c:	d113      	bne.n	2676 <xQueueGenericSendFromISR+0xa2>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1060
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    264e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2650:	b90b      	cbnz	r3, 2656 <xQueueGenericSendFromISR+0x82>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
    2652:	2001      	movs	r0, #1
    2654:	e00b      	b.n	266e <xQueueGenericSendFromISR+0x9a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1062
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2656:	f104 0024 	add.w	r0, r4, #36	; 0x24
    265a:	f000 fef3 	bl	3444 <xTaskRemoveFromEventList>
    265e:	2800      	cmp	r0, #0
    2660:	d0f7      	beq.n	2652 <xQueueGenericSendFromISR+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1066
							if( pxHigherPriorityTaskWoken != NULL )
    2662:	f1b8 0f00 	cmp.w	r8, #0
    2666:	d0f4      	beq.n	2652 <xQueueGenericSendFromISR+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1068
								*pxHigherPriorityTaskWoken = pdTRUE;
    2668:	2001      	movs	r0, #1
    266a:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    266e:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1105
}
    2672:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    2676:	3501      	adds	r5, #1
    2678:	b26d      	sxtb	r5, r5
    267a:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
    267e:	e7e8      	b.n	2652 <xQueueGenericSendFromISR+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
    2680:	2000      	movs	r0, #0
    2682:	e7f4      	b.n	266e <xQueueGenericSendFromISR+0x9a>
    2684:	0000b56f 	.word	0x0000b56f
    2688:	0000b577 	.word	0x0000b577
    268c:	0000b5c7 	.word	0x0000b5c7

00002690 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1109
{
    2690:	b570      	push	{r4, r5, r6, lr}
    2692:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1120
	configASSERT( pxQueue );
    2694:	4604      	mov	r4, r0
    2696:	b928      	cbnz	r0, 26a4 <xQueueGiveFromISR+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1120 (discriminator 1)
    2698:	4923      	ldr	r1, [pc, #140]	; (2728 <xQueueGiveFromISR+0x98>)
    269a:	f44f 608c 	mov.w	r0, #1120	; 0x460
    269e:	f7ff f94d 	bl	193c <configASSERT_callback>
    26a2:	e7fe      	b.n	26a2 <xQueueGiveFromISR+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1124
	configASSERT( pxQueue->uxItemSize == 0 );
    26a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
    26a6:	b12b      	cbz	r3, 26b4 <xQueueGiveFromISR+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 1)
    26a8:	4920      	ldr	r1, [pc, #128]	; (272c <xQueueGiveFromISR+0x9c>)
    26aa:	f240 4064 	movw	r0, #1124	; 0x464
    26ae:	f7ff f945 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 2)
    26b2:	e7fe      	b.n	26b2 <xQueueGiveFromISR+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1129
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
    26b4:	6803      	ldr	r3, [r0, #0]
    26b6:	b93b      	cbnz	r3, 26c8 <xQueueGiveFromISR+0x38>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 1)
    26b8:	6883      	ldr	r3, [r0, #8]
    26ba:	b12b      	cbz	r3, 26c8 <xQueueGiveFromISR+0x38>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 2)
    26bc:	491c      	ldr	r1, [pc, #112]	; (2730 <xQueueGiveFromISR+0xa0>)
    26be:	f240 4069 	movw	r0, #1129	; 0x469
    26c2:	f7ff f93b 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 3)
    26c6:	e7fe      	b.n	26c6 <xQueueGiveFromISR+0x36>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1145
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    26c8:	f7ff fcea 	bl	20a0 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    26cc:	f3ef 8611 	mrs	r6, BASEPRI
    26d0:	f04f 0318 	mov.w	r3, #24
    26d4:	f383 8811 	msr	BASEPRI, r3
    26d8:	f3bf 8f6f 	isb	sy
    26dc:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1149
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    26e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1154
		if( uxMessagesWaiting < pxQueue->uxLength )
    26e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    26e4:	4293      	cmp	r3, r2
    26e6:	d91c      	bls.n	2722 <xQueueGiveFromISR+0x92>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    26e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    26ec:	3201      	adds	r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    26ee:	b25b      	sxtb	r3, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    26f0:	63a2      	str	r2, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1170
			if( cTxLock == queueUNLOCKED )
    26f2:	1c5a      	adds	r2, r3, #1
    26f4:	d110      	bne.n	2718 <xQueueGiveFromISR+0x88>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1225
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    26f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
    26f8:	b90b      	cbnz	r3, 26fe <xQueueGiveFromISR+0x6e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1259
			xReturn = pdPASS;
    26fa:	2001      	movs	r0, #1
    26fc:	e009      	b.n	2712 <xQueueGiveFromISR+0x82>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1227
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    26fe:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2702:	f000 fe9f 	bl	3444 <xTaskRemoveFromEventList>
    2706:	2800      	cmp	r0, #0
    2708:	d0f7      	beq.n	26fa <xQueueGiveFromISR+0x6a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1231
							if( pxHigherPriorityTaskWoken != NULL )
    270a:	2d00      	cmp	r5, #0
    270c:	d0f5      	beq.n	26fa <xQueueGiveFromISR+0x6a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1233
								*pxHigherPriorityTaskWoken = pdTRUE;
    270e:	2001      	movs	r0, #1
    2710:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    2712:	f386 8811 	msr	BASEPRI, r6
xQueueGiveFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1270
}
    2716:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1256
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    2718:	3301      	adds	r3, #1
    271a:	b25b      	sxtb	r3, r3
    271c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
    2720:	e7eb      	b.n	26fa <xQueueGiveFromISR+0x6a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1264
			xReturn = errQUEUE_FULL;
    2722:	2000      	movs	r0, #0
    2724:	e7f5      	b.n	2712 <xQueueGiveFromISR+0x82>
    2726:	bf00      	nop
    2728:	0000b56f 	.word	0x0000b56f
    272c:	0000b664 	.word	0x0000b664
    2730:	0000b67d 	.word	0x0000b67d

00002734 <xQueueReceive>:
xQueueReceive():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1274
{
    2734:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    2738:	b085      	sub	sp, #20
    273a:	460f      	mov	r7, r1
    273c:	9201      	str	r2, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1280
	configASSERT( ( pxQueue ) );
    273e:	4604      	mov	r4, r0
    2740:	b928      	cbnz	r0, 274e <xQueueReceive+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1280 (discriminator 1)
    2742:	4947      	ldr	r1, [pc, #284]	; (2860 <xQueueReceive+0x12c>)
    2744:	f44f 60a0 	mov.w	r0, #1280	; 0x500
    2748:	f7ff f8f8 	bl	193c <configASSERT_callback>
    274c:	e7fe      	b.n	274c <xQueueReceive+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1284
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
    274e:	b939      	cbnz	r1, 2760 <xQueueReceive+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 1)
    2750:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2752:	b12b      	cbz	r3, 2760 <xQueueReceive+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 2)
    2754:	4943      	ldr	r1, [pc, #268]	; (2864 <xQueueReceive+0x130>)
    2756:	f240 5004 	movw	r0, #1284	; 0x504
    275a:	f7ff f8ef 	bl	193c <configASSERT_callback>
    275e:	e7fe      	b.n	275e <xQueueReceive+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1289
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    2760:	f000 ffb4 	bl	36cc <xTaskGetSchedulerState>
    2764:	4606      	mov	r6, r0
    2766:	b938      	cbnz	r0, 2778 <xQueueReceive+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 1)
    2768:	9b01      	ldr	r3, [sp, #4]
    276a:	b133      	cbz	r3, 277a <xQueueReceive+0x46>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 2)
    276c:	493e      	ldr	r1, [pc, #248]	; (2868 <xQueueReceive+0x134>)
    276e:	f240 5009 	movw	r0, #1289	; 0x509
    2772:	f7ff f8e3 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 3)
    2776:	e7fe      	b.n	2776 <xQueueReceive+0x42>
    2778:	2600      	movs	r6, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    277a:	f04f 0800 	mov.w	r8, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    277e:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 286c <xQueueReceive+0x138>
    2782:	e03b      	b.n	27fc <xQueueReceive+0xc8>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1336
				if( xTicksToWait == ( TickType_t ) 0 )
    2784:	9d01      	ldr	r5, [sp, #4]
    2786:	b91d      	cbnz	r5, 2790 <xQueueReceive+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1340
					taskEXIT_CRITICAL();
    2788:	f7ff fb96 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1403
				return errQUEUE_EMPTY;
    278c:	2000      	movs	r0, #0
    278e:	e052      	b.n	2836 <xQueueReceive+0x102>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1344
				else if( xEntryTimeSet == pdFALSE )
    2790:	b916      	cbnz	r6, 2798 <xQueueReceive+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1348
					vTaskInternalSetTimeOutState( &xTimeOut );
    2792:	a802      	add	r0, sp, #8
    2794:	f000 fe96 	bl	34c4 <vTaskInternalSetTimeOutState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1358
		taskEXIT_CRITICAL();
    2798:	f7ff fb8e 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1363
		vTaskSuspendAll();
    279c:	f000 fc00 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    27a0:	f7ff fb68 	bl	1e74 <vPortEnterCritical>
    27a4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    27a8:	2bff      	cmp	r3, #255	; 0xff
    27aa:	bf08      	it	eq
    27ac:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
    27b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    27b4:	2bff      	cmp	r3, #255	; 0xff
    27b6:	bf08      	it	eq
    27b8:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
    27bc:	f7ff fb7c 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1367
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    27c0:	a901      	add	r1, sp, #4
    27c2:	a802      	add	r0, sp, #8
    27c4:	f000 fe8a 	bl	34dc <xTaskCheckForTimeOut>
    27c8:	2800      	cmp	r0, #0
    27ca:	d13d      	bne.n	2848 <xQueueReceive+0x114>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1371
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    27cc:	4620      	mov	r0, r4
    27ce:	f7ff fcf0 	bl	21b2 <prvIsQueueEmpty>
    27d2:	b398      	cbz	r0, 283c <xQueueReceive+0x108>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1374
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    27d4:	9901      	ldr	r1, [sp, #4]
    27d6:	f104 0024 	add.w	r0, r4, #36	; 0x24
    27da:	f000 fe1b 	bl	3414 <vTaskPlaceOnEventList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1375
				prvUnlockQueue( pxQueue );
    27de:	4620      	mov	r0, r4
    27e0:	f7ff fd3c 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1376
				if( xTaskResumeAll() == pdFALSE )
    27e4:	f000 fc76 	bl	30d4 <xTaskResumeAll>
    27e8:	b938      	cbnz	r0, 27fa <xQueueReceive+0xc6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    27ea:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    27ee:	f8c9 3000 	str.w	r3, [r9]
    27f2:	f3bf 8f4f 	dsb	sy
    27f6:	f3bf 8f6f 	isb	sy
    27fa:	2601      	movs	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1299
		taskENTER_CRITICAL();
    27fc:	f7ff fb3a 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1301
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    2800:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1305
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2802:	2d00      	cmp	r5, #0
    2804:	d0be      	beq.n	2784 <xQueueReceive+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    2806:	4639      	mov	r1, r7
    2808:	4620      	mov	r0, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    280a:	3d01      	subs	r5, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    280c:	f7ff fd11 	bl	2232 <prvCopyDataFromQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    2810:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1315
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2812:	6923      	ldr	r3, [r4, #16]
    2814:	b163      	cbz	r3, 2830 <xQueueReceive+0xfc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1317
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2816:	f104 0010 	add.w	r0, r4, #16
    281a:	f000 fe13 	bl	3444 <xTaskRemoveFromEventList>
    281e:	b138      	cbz	r0, 2830 <xQueueReceive+0xfc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1319
						queueYIELD_IF_USING_PREEMPTION();
    2820:	4b12      	ldr	r3, [pc, #72]	; (286c <xQueueReceive+0x138>)
    2822:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2826:	601a      	str	r2, [r3, #0]
    2828:	f3bf 8f4f 	dsb	sy
    282c:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1331
				taskEXIT_CRITICAL();
    2830:	f7ff fb42 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1332
				return pdPASS;
    2834:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1411
}
    2836:	b005      	add	sp, #20
    2838:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1389
				prvUnlockQueue( pxQueue );
    283c:	4620      	mov	r0, r4
    283e:	f7ff fd0d 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1390
				( void ) xTaskResumeAll();
    2842:	f000 fc47 	bl	30d4 <xTaskResumeAll>
    2846:	e7d8      	b.n	27fa <xQueueReceive+0xc6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1397
			prvUnlockQueue( pxQueue );
    2848:	4620      	mov	r0, r4
    284a:	f7ff fd07 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1398
			( void ) xTaskResumeAll();
    284e:	f000 fc41 	bl	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1400
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    2852:	4620      	mov	r0, r4
    2854:	f7ff fcad 	bl	21b2 <prvIsQueueEmpty>
    2858:	2800      	cmp	r0, #0
    285a:	d0ce      	beq.n	27fa <xQueueReceive+0xc6>
    285c:	e796      	b.n	278c <xQueueReceive+0x58>
    285e:	bf00      	nop
    2860:	0000b6e4 	.word	0x0000b6e4
    2864:	0000b6f0 	.word	0x0000b6f0
    2868:	0000b60e 	.word	0x0000b60e
    286c:	e000ed04 	.word	0xe000ed04

00002870 <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    2870:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    2874:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    2876:	9101      	str	r1, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    2878:	b928      	cbnz	r0, 2886 <xQueueSemaphoreTake+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1425 (discriminator 1)
    287a:	4958      	ldr	r1, [pc, #352]	; (29dc <xQueueSemaphoreTake+0x16c>)
    287c:	f240 5091 	movw	r0, #1425	; 0x591
    2880:	f7ff f85c 	bl	193c <configASSERT_callback>
    2884:	e7fe      	b.n	2884 <xQueueSemaphoreTake+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1429
	configASSERT( pxQueue->uxItemSize == 0 );
    2886:	6c05      	ldr	r5, [r0, #64]	; 0x40
    2888:	b12d      	cbz	r5, 2896 <xQueueSemaphoreTake+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 1)
    288a:	4955      	ldr	r1, [pc, #340]	; (29e0 <xQueueSemaphoreTake+0x170>)
    288c:	f240 5095 	movw	r0, #1429	; 0x595
    2890:	f7ff f854 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 2)
    2894:	e7fe      	b.n	2894 <xQueueSemaphoreTake+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1434
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    2896:	f000 ff19 	bl	36cc <xTaskGetSchedulerState>
    289a:	4606      	mov	r6, r0
    289c:	b938      	cbnz	r0, 28ae <xQueueSemaphoreTake+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 1)
    289e:	9b01      	ldr	r3, [sp, #4]
    28a0:	b153      	cbz	r3, 28b8 <xQueueSemaphoreTake+0x48>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 2)
    28a2:	4950      	ldr	r1, [pc, #320]	; (29e4 <xQueueSemaphoreTake+0x174>)
    28a4:	f240 509a 	movw	r0, #1434	; 0x59a
    28a8:	f7ff f848 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 3)
    28ac:	e7fe      	b.n	28ac <xQueueSemaphoreTake+0x3c>
    28ae:	462e      	mov	r6, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    28b0:	2700      	movs	r7, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    28b2:	f8df 8138 	ldr.w	r8, [pc, #312]	; 29ec <xQueueSemaphoreTake+0x17c>
    28b6:	e04e      	b.n	2956 <xQueueSemaphoreTake+0xe6>
    28b8:	4605      	mov	r5, r0
    28ba:	e7f9      	b.n	28b0 <xQueueSemaphoreTake+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
    28bc:	9b01      	ldr	r3, [sp, #4]
    28be:	b94b      	cbnz	r3, 28d4 <xQueueSemaphoreTake+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1505
						configASSERT( xInheritanceOccurred == pdFALSE );
    28c0:	b12d      	cbz	r5, 28ce <xQueueSemaphoreTake+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 1)
    28c2:	4949      	ldr	r1, [pc, #292]	; (29e8 <xQueueSemaphoreTake+0x178>)
    28c4:	f240 50e1 	movw	r0, #1505	; 0x5e1
    28c8:	f7ff f838 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 4)
    28cc:	e7fe      	b.n	28cc <xQueueSemaphoreTake+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1511
					taskEXIT_CRITICAL();
    28ce:	f7ff faf3 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1513
					return errQUEUE_EMPTY;
    28d2:	e05e      	b.n	2992 <xQueueSemaphoreTake+0x122>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
    28d4:	b916      	cbnz	r6, 28dc <xQueueSemaphoreTake+0x6c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
    28d6:	a802      	add	r0, sp, #8
    28d8:	f000 fdf4 	bl	34c4 <vTaskInternalSetTimeOutState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1529
		taskEXIT_CRITICAL();
    28dc:	f7ff faec 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1534
		vTaskSuspendAll();
    28e0:	f000 fb5e 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    28e4:	f7ff fac6 	bl	1e74 <vPortEnterCritical>
    28e8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    28ec:	2bff      	cmp	r3, #255	; 0xff
    28ee:	bf08      	it	eq
    28f0:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
    28f4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    28f8:	2bff      	cmp	r3, #255	; 0xff
    28fa:	bf08      	it	eq
    28fc:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
    2900:	f7ff fada 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    2904:	a901      	add	r1, sp, #4
    2906:	a802      	add	r0, sp, #8
    2908:	f000 fde8 	bl	34dc <xTaskCheckForTimeOut>
    290c:	2800      	cmp	r0, #0
    290e:	d14a      	bne.n	29a6 <xQueueSemaphoreTake+0x136>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    2910:	4620      	mov	r0, r4
    2912:	f7ff fc4e 	bl	21b2 <prvIsQueueEmpty>
    2916:	2800      	cmp	r0, #0
    2918:	d03f      	beq.n	299a <xQueueSemaphoreTake+0x12a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    291a:	6823      	ldr	r3, [r4, #0]
    291c:	b93b      	cbnz	r3, 292e <xQueueSemaphoreTake+0xbe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1552
						taskENTER_CRITICAL();
    291e:	f7ff faa9 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
    2922:	68a0      	ldr	r0, [r4, #8]
    2924:	f000 fee2 	bl	36ec <xTaskPriorityInherit>
    2928:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1556
						taskEXIT_CRITICAL();
    292a:	f7ff fac5 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    292e:	9901      	ldr	r1, [sp, #4]
    2930:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2934:	f000 fd6e 	bl	3414 <vTaskPlaceOnEventList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1566
				prvUnlockQueue( pxQueue );
    2938:	4620      	mov	r0, r4
    293a:	f7ff fc8f 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
    293e:	f000 fbc9 	bl	30d4 <xTaskResumeAll>
    2942:	b938      	cbnz	r0, 2954 <xQueueSemaphoreTake+0xe4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    2944:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2948:	f8c8 3000 	str.w	r3, [r8]
    294c:	f3bf 8f4f 	dsb	sy
    2950:	f3bf 8f6f 	isb	sy
    2954:	2601      	movs	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1444
		taskENTER_CRITICAL();
    2956:	f7ff fa8d 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
    295a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
    295c:	2b00      	cmp	r3, #0
    295e:	d0ad      	beq.n	28bc <xQueueSemaphoreTake+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
    2960:	3b01      	subs	r3, #1
    2962:	63a3      	str	r3, [r4, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    2964:	6823      	ldr	r3, [r4, #0]
    2966:	b913      	cbnz	r3, 296e <xQueueSemaphoreTake+0xfe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
    2968:	f000 ffb8 	bl	38dc <pvTaskIncrementMutexHeldCount>
    296c:	60a0      	str	r0, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    296e:	6923      	ldr	r3, [r4, #16]
    2970:	b163      	cbz	r3, 298c <xQueueSemaphoreTake+0x11c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2972:	f104 0010 	add.w	r0, r4, #16
    2976:	f000 fd65 	bl	3444 <xTaskRemoveFromEventList>
    297a:	b138      	cbz	r0, 298c <xQueueSemaphoreTake+0x11c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
    297c:	4b1b      	ldr	r3, [pc, #108]	; (29ec <xQueueSemaphoreTake+0x17c>)
    297e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2982:	601a      	str	r2, [r3, #0]
    2984:	f3bf 8f4f 	dsb	sy
    2988:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1493
				taskEXIT_CRITICAL();
    298c:	f7ff fa94 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1494
				return pdPASS;
    2990:	2501      	movs	r5, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1629
}
    2992:	4628      	mov	r0, r5
    2994:	b004      	add	sp, #16
    2996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1580
				prvUnlockQueue( pxQueue );
    299a:	4620      	mov	r0, r4
    299c:	f7ff fc5e 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1581
				( void ) xTaskResumeAll();
    29a0:	f000 fb98 	bl	30d4 <xTaskResumeAll>
    29a4:	e7d6      	b.n	2954 <xQueueSemaphoreTake+0xe4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1587
			prvUnlockQueue( pxQueue );
    29a6:	4620      	mov	r0, r4
    29a8:	f7ff fc58 	bl	225c <prvUnlockQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1588
			( void ) xTaskResumeAll();
    29ac:	f000 fb92 	bl	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    29b0:	4620      	mov	r0, r4
    29b2:	f7ff fbfe 	bl	21b2 <prvIsQueueEmpty>
    29b6:	2800      	cmp	r0, #0
    29b8:	d0cc      	beq.n	2954 <xQueueSemaphoreTake+0xe4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
    29ba:	2d00      	cmp	r5, #0
    29bc:	d0e9      	beq.n	2992 <xQueueSemaphoreTake+0x122>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1603
						taskENTER_CRITICAL();
    29be:	f7ff fa59 	bl	1e74 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
    29c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
    29c4:	b119      	cbz	r1, 29ce <xQueueSemaphoreTake+0x15e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
    29c6:	6b23      	ldr	r3, [r4, #48]	; 0x30
    29c8:	6819      	ldr	r1, [r3, #0]
    29ca:	f1c1 010a 	rsb	r1, r1, #10
xQueueSemaphoreTake():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
    29ce:	68a0      	ldr	r0, [r4, #8]
    29d0:	f000 ff2c 	bl	382c <vTaskPriorityDisinheritAfterTimeout>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1621
				return errQUEUE_EMPTY;
    29d4:	2500      	movs	r5, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1615
						taskEXIT_CRITICAL();
    29d6:	f7ff fa6f 	bl	1eb8 <vPortExitCritical>
    29da:	e7da      	b.n	2992 <xQueueSemaphoreTake+0x122>
    29dc:	0000b6e4 	.word	0x0000b6e4
    29e0:	0000b664 	.word	0x0000b664
    29e4:	0000b60e 	.word	0x0000b60e
    29e8:	0000b78e 	.word	0x0000b78e
    29ec:	e000ed04 	.word	0xe000ed04

000029f0 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1782
{
    29f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    29f4:	4689      	mov	r9, r1
    29f6:	4690      	mov	r8, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1787
	configASSERT( pxQueue );
    29f8:	4605      	mov	r5, r0
    29fa:	b928      	cbnz	r0, 2a08 <xQueueReceiveFromISR+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1787 (discriminator 1)
    29fc:	4921      	ldr	r1, [pc, #132]	; (2a84 <xQueueReceiveFromISR+0x94>)
    29fe:	f240 60fb 	movw	r0, #1787	; 0x6fb
    2a02:	f7fe ff9b 	bl	193c <configASSERT_callback>
    2a06:	e7fe      	b.n	2a06 <xQueueReceiveFromISR+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2a08:	b939      	cbnz	r1, 2a1a <xQueueReceiveFromISR+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 1)
    2a0a:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2a0c:	b12b      	cbz	r3, 2a1a <xQueueReceiveFromISR+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 2)
    2a0e:	491e      	ldr	r1, [pc, #120]	; (2a88 <xQueueReceiveFromISR+0x98>)
    2a10:	f240 60fc 	movw	r0, #1788	; 0x6fc
    2a14:	f7fe ff92 	bl	193c <configASSERT_callback>
    2a18:	e7fe      	b.n	2a18 <xQueueReceiveFromISR+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    2a1a:	f7ff fb41 	bl	20a0 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    2a1e:	f3ef 8711 	mrs	r7, BASEPRI
    2a22:	f04f 0318 	mov.w	r3, #24
    2a26:	f383 8811 	msr	BASEPRI, r3
    2a2a:	f3bf 8f6f 	isb	sy
    2a2e:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    2a32:	6bac      	ldr	r4, [r5, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2a34:	b31c      	cbz	r4, 2a7e <xQueueReceiveFromISR+0x8e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    2a36:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    2a3a:	4649      	mov	r1, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    2a3c:	b276      	sxtb	r6, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    2a3e:	4628      	mov	r0, r5
    2a40:	f7ff fbf7 	bl	2232 <prvCopyDataFromQueue>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    2a44:	3c01      	subs	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    2a46:	1c73      	adds	r3, r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    2a48:	63ac      	str	r4, [r5, #56]	; 0x38
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    2a4a:	d113      	bne.n	2a74 <xQueueReceiveFromISR+0x84>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2a4c:	692b      	ldr	r3, [r5, #16]
    2a4e:	b90b      	cbnz	r3, 2a54 <xQueueReceiveFromISR+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
    2a50:	2001      	movs	r0, #1
    2a52:	e00b      	b.n	2a6c <xQueueReceiveFromISR+0x7c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2a54:	f105 0010 	add.w	r0, r5, #16
    2a58:	f000 fcf4 	bl	3444 <xTaskRemoveFromEventList>
    2a5c:	2800      	cmp	r0, #0
    2a5e:	d0f7      	beq.n	2a50 <xQueueReceiveFromISR+0x60>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
    2a60:	f1b8 0f00 	cmp.w	r8, #0
    2a64:	d0f4      	beq.n	2a50 <xQueueReceiveFromISR+0x60>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
    2a66:	2001      	movs	r0, #1
    2a68:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    2a6c:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1869
}
    2a70:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
    2a74:	3601      	adds	r6, #1
    2a76:	b276      	sxtb	r6, r6
    2a78:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
    2a7c:	e7e8      	b.n	2a50 <xQueueReceiveFromISR+0x60>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
    2a7e:	4620      	mov	r0, r4
    2a80:	e7f4      	b.n	2a6c <xQueueReceiveFromISR+0x7c>
    2a82:	bf00      	nop
    2a84:	0000b56f 	.word	0x0000b56f
    2a88:	0000b743 	.word	0x0000b743

00002a8c <vQueueDelete>:
vQueueDelete():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1972
{
    2a8c:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1975
	configASSERT( pxQueue );
    2a8e:	b928      	cbnz	r0, 2a9c <vQueueDelete+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1975 (discriminator 1)
    2a90:	4906      	ldr	r1, [pc, #24]	; (2aac <vQueueDelete+0x20>)
    2a92:	f240 70b7 	movw	r0, #1975	; 0x7b7
    2a96:	f7fe ff51 	bl	193c <configASSERT_callback>
    2a9a:	e7fe      	b.n	2a9a <vQueueDelete+0xe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1994
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
    2a9c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
    2aa0:	b91b      	cbnz	r3, 2aaa <vQueueDelete+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    2aa2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1996
			vPortFree( pxQueue );
    2aa6:	f7ff bb36 	b.w	2116 <vPortFree>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    2aaa:	bd08      	pop	{r3, pc}
    2aac:	0000b56f 	.word	0x0000b56f

00002ab0 <prvSearchForNameWithinSingleList>:
prvSearchForNameWithinSingleList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2361
	char cNextChar;
	BaseType_t xBreakLoop;

		/* This function is called with the scheduler suspended. */

		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    2ab0:	6802      	ldr	r2, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2353
	{
    2ab2:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ab4:	4603      	mov	r3, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2361
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    2ab6:	b31a      	cbz	r2, 2b00 <prvSearchForNameWithinSingleList+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2363
		{
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2ab8:	6842      	ldr	r2, [r0, #4]
    2aba:	6850      	ldr	r0, [r2, #4]
    2abc:	6058      	str	r0, [r3, #4]
    2abe:	f103 0208 	add.w	r2, r3, #8
    2ac2:	4290      	cmp	r0, r2
    2ac4:	bf04      	itt	eq
    2ac6:	68d8      	ldreq	r0, [r3, #12]
    2ac8:	6058      	streq	r0, [r3, #4]
    2aca:	6858      	ldr	r0, [r3, #4]
    2acc:	68c7      	ldr	r7, [r0, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2367 (discriminator 4)

			do
			{
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2ace:	6858      	ldr	r0, [r3, #4]
    2ad0:	6840      	ldr	r0, [r0, #4]
    2ad2:	6058      	str	r0, [r3, #4]
    2ad4:	4282      	cmp	r2, r0
    2ad6:	bf04      	itt	eq
    2ad8:	6850      	ldreq	r0, [r2, #4]
    2ada:	6058      	streq	r0, [r3, #4]
    2adc:	6858      	ldr	r0, [r3, #4]
    2ade:	68c0      	ldr	r0, [r0, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2372 (discriminator 4)

				/* Check each character in the name looking for a match or
				mismatch. */
				xBreakLoop = pdFALSE;
				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    2ae0:	1e4d      	subs	r5, r1, #1
    2ae2:	f100 0434 	add.w	r4, r0, #52	; 0x34
    2ae6:	f100 0c40 	add.w	ip, r0, #64	; 0x40
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2374
				{
					cNextChar = pxNextTCB->pcTaskName[ x ];
    2aea:	f814 eb01 	ldrb.w	lr, [r4], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2376

					if( cNextChar != pcNameToQuery[ x ] )
    2aee:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    2af2:	4576      	cmp	r6, lr
    2af4:	d102      	bne.n	2afc <prvSearchForNameWithinSingleList+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2381
					{
						/* Characters didn't match. */
						xBreakLoop = pdTRUE;
					}
					else if( cNextChar == ( char ) 0x00 )
    2af6:	b126      	cbz	r6, 2b02 <prvSearchForNameWithinSingleList+0x52>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2372 (discriminator 2)
				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    2af8:	4564      	cmp	r4, ip
    2afa:	d1f6      	bne.n	2aea <prvSearchForNameWithinSingleList+0x3a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2405
				{
					/* The handle has been found. */
					break;
				}

			} while( pxNextTCB != pxFirstTCB );
    2afc:	4287      	cmp	r7, r0
    2afe:	d1e6      	bne.n	2ace <prvSearchForNameWithinSingleList+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2354
	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
    2b00:	2000      	movs	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2413
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return pxReturn;
	}
    2b02:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002b04 <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:27
}

static void prvResetRunTimeStatsInList(List_t *pxList) {
  volatile tskTCB *pxNextTCB, *pxFirstTCB;

  listGET_OWNER_OF_NEXT_ENTRY(pxFirstTCB, pxList);
    2b04:	6843      	ldr	r3, [r0, #4]
    2b06:	685b      	ldr	r3, [r3, #4]
    2b08:	6043      	str	r3, [r0, #4]
    2b0a:	f100 0208 	add.w	r2, r0, #8
    2b0e:	4293      	cmp	r3, r2
    2b10:	bf04      	itt	eq
    2b12:	68c3      	ldreq	r3, [r0, #12]
    2b14:	6043      	streq	r3, [r0, #4]
    2b16:	6843      	ldr	r3, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:24
static void prvResetRunTimeStatsInList(List_t *pxList) {
    2b18:	b530      	push	{r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:27
  listGET_OWNER_OF_NEXT_ENTRY(pxFirstTCB, pxList);
    2b1a:	68dc      	ldr	r4, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:30
  do {
    listGET_OWNER_OF_NEXT_ENTRY(pxNextTCB, pxList);
    pxNextTCB->ulRunTimeCounter = 0;
    2b1c:	2500      	movs	r5, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:29 (discriminator 4)
    listGET_OWNER_OF_NEXT_ENTRY(pxNextTCB, pxList);
    2b1e:	685b      	ldr	r3, [r3, #4]
    2b20:	429a      	cmp	r2, r3
    2b22:	bf08      	it	eq
    2b24:	6853      	ldreq	r3, [r2, #4]
    2b26:	68d9      	ldr	r1, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:31 (discriminator 4)
  } while (pxNextTCB != pxFirstTCB);
    2b28:	428c      	cmp	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:30 (discriminator 4)
    pxNextTCB->ulRunTimeCounter = 0;
    2b2a:	650d      	str	r5, [r1, #80]	; 0x50
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:31 (discriminator 4)
  } while (pxNextTCB != pxFirstTCB);
    2b2c:	d1f7      	bne.n	2b1e <prvResetRunTimeStatsInList+0x1a>
    2b2e:	6043      	str	r3, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:32
}
    2b30:	bd30      	pop	{r4, r5, pc}
    2b32:	Address 0x0000000000002b32 is out of bounds.


00002b34 <prvAddNewTaskToReadyList>:
prvAddNewTaskToReadyList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1073
{
    2b34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2b38:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1076
	taskENTER_CRITICAL();
    2b3a:	f7ff f99b 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    2b3e:	4b2d      	ldr	r3, [pc, #180]	; (2bf4 <prvAddNewTaskToReadyList+0xc0>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    2b40:	4d2d      	ldr	r5, [pc, #180]	; (2bf8 <prvAddNewTaskToReadyList+0xc4>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    2b42:	681a      	ldr	r2, [r3, #0]
    2b44:	4f2d      	ldr	r7, [pc, #180]	; (2bfc <prvAddNewTaskToReadyList+0xc8>)
    2b46:	3201      	adds	r2, #1
    2b48:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    2b4a:	682e      	ldr	r6, [r5, #0]
    2b4c:	2e00      	cmp	r6, #0
    2b4e:	d146      	bne.n	2bde <prvAddNewTaskToReadyList+0xaa>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1083
			pxCurrentTCB = pxNewTCB;
    2b50:	602c      	str	r4, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1085
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
    2b52:	681b      	ldr	r3, [r3, #0]
    2b54:	2b01      	cmp	r3, #1
    2b56:	d11c      	bne.n	2b92 <prvAddNewTaskToReadyList+0x5e>
    2b58:	46b8      	mov	r8, r7
prvInitialiseTaskLists():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    2b5a:	4640      	mov	r0, r8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    2b5c:	3601      	adds	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    2b5e:	f7ff fae7 	bl	2130 <vListInitialise>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    2b62:	2e0a      	cmp	r6, #10
    2b64:	f108 0814 	add.w	r8, r8, #20
    2b68:	d1f7      	bne.n	2b5a <prvAddNewTaskToReadyList+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	}

	vListInitialise( &xDelayedTaskList1 );
    2b6a:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 2c24 <prvAddNewTaskToReadyList+0xf0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    2b6e:	4e24      	ldr	r6, [pc, #144]	; (2c00 <prvAddNewTaskToReadyList+0xcc>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
    2b70:	4640      	mov	r0, r8
    2b72:	f7ff fadd 	bl	2130 <vListInitialise>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    2b76:	4630      	mov	r0, r6
    2b78:	f7ff fada 	bl	2130 <vListInitialise>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
    2b7c:	4821      	ldr	r0, [pc, #132]	; (2c04 <prvAddNewTaskToReadyList+0xd0>)
    2b7e:	f7ff fad7 	bl	2130 <vListInitialise>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3567
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
    2b82:	4821      	ldr	r0, [pc, #132]	; (2c08 <prvAddNewTaskToReadyList+0xd4>)
    2b84:	f7ff fad4 	bl	2130 <vListInitialise>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3573
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
    2b88:	4b20      	ldr	r3, [pc, #128]	; (2c0c <prvAddNewTaskToReadyList+0xd8>)
    2b8a:	f8c3 8000 	str.w	r8, [r3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
    2b8e:	4b20      	ldr	r3, [pc, #128]	; (2c10 <prvAddNewTaskToReadyList+0xdc>)
    2b90:	601e      	str	r6, [r3, #0]
prvAddNewTaskToReadyList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    2b92:	4a20      	ldr	r2, [pc, #128]	; (2c14 <prvAddNewTaskToReadyList+0xe0>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    2b94:	4920      	ldr	r1, [pc, #128]	; (2c18 <prvAddNewTaskToReadyList+0xe4>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    2b96:	6813      	ldr	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    2b98:	6808      	ldr	r0, [r1, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    2b9a:	3301      	adds	r3, #1
    2b9c:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    2b9e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1124
			pxNewTCB->uxTCBNumber = uxTaskNumber;
    2ba0:	6423      	str	r3, [r4, #64]	; 0x40
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    2ba2:	2301      	movs	r3, #1
    2ba4:	4093      	lsls	r3, r2
    2ba6:	4303      	orrs	r3, r0
    2ba8:	2014      	movs	r0, #20
    2baa:	600b      	str	r3, [r1, #0]
    2bac:	fb00 7002 	mla	r0, r0, r2, r7
    2bb0:	1d21      	adds	r1, r4, #4
    2bb2:	f7ff facb 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
    2bb6:	f7ff f97f 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
    2bba:	4b18      	ldr	r3, [pc, #96]	; (2c1c <prvAddNewTaskToReadyList+0xe8>)
    2bbc:	681b      	ldr	r3, [r3, #0]
    2bbe:	b163      	cbz	r3, 2bda <prvAddNewTaskToReadyList+0xa6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
    2bc0:	682b      	ldr	r3, [r5, #0]
    2bc2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    2bc4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    2bc6:	429a      	cmp	r2, r3
    2bc8:	d207      	bcs.n	2bda <prvAddNewTaskToReadyList+0xa6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
    2bca:	4b15      	ldr	r3, [pc, #84]	; (2c20 <prvAddNewTaskToReadyList+0xec>)
    2bcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2bd0:	601a      	str	r2, [r3, #0]
    2bd2:	f3bf 8f4f 	dsb	sy
    2bd6:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1152
}
    2bda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
    2bde:	4b0f      	ldr	r3, [pc, #60]	; (2c1c <prvAddNewTaskToReadyList+0xe8>)
    2be0:	681b      	ldr	r3, [r3, #0]
    2be2:	2b00      	cmp	r3, #0
    2be4:	d1d5      	bne.n	2b92 <prvAddNewTaskToReadyList+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
    2be6:	682b      	ldr	r3, [r5, #0]
    2be8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    2bea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    2bec:	429a      	cmp	r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
    2bee:	bf98      	it	ls
    2bf0:	602c      	strls	r4, [r5, #0]
    2bf2:	e7ce      	b.n	2b92 <prvAddNewTaskToReadyList+0x5e>
    2bf4:	10001368 	.word	0x10001368
    2bf8:	10001290 	.word	0x10001290
    2bfc:	1000129c 	.word	0x1000129c
    2c00:	10001390 	.word	0x10001390
    2c04:	100013b0 	.word	0x100013b0
    2c08:	100013c8 	.word	0x100013c8
    2c0c:	10001294 	.word	0x10001294
    2c10:	10001298 	.word	0x10001298
    2c14:	10001374 	.word	0x10001374
    2c18:	10001378 	.word	0x10001378
    2c1c:	100013c4 	.word	0x100013c4
    2c20:	e000ed04 	.word	0xe000ed04
    2c24:	1000137c 	.word	0x1000137c

00002c28 <prvIdleTask>:
prvIdleTask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3335
{
    2c28:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    2c2a:	4c07      	ldr	r4, [pc, #28]	; (2c48 <prvIdleTask+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    2c2c:	4d07      	ldr	r5, [pc, #28]	; (2c4c <prvIdleTask+0x24>)
    2c2e:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    2c32:	6823      	ldr	r3, [r4, #0]
    2c34:	2b01      	cmp	r3, #1
    2c36:	d904      	bls.n	2c42 <prvIdleTask+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    2c38:	602e      	str	r6, [r5, #0]
    2c3a:	f3bf 8f4f 	dsb	sy
    2c3e:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3394
			vApplicationIdleHook();
    2c42:	f7fe fe73 	bl	192c <vApplicationIdleHook>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
    2c46:	e7f4      	b.n	2c32 <prvIdleTask+0xa>
    2c48:	1000129c 	.word	0x1000129c
    2c4c:	e000ed04 	.word	0xe000ed04

00002c50 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    2c50:	4a06      	ldr	r2, [pc, #24]	; (2c6c <prvResetNextTaskUnblockTime+0x1c>)
    2c52:	6813      	ldr	r3, [r2, #0]
    2c54:	6819      	ldr	r1, [r3, #0]
    2c56:	4b06      	ldr	r3, [pc, #24]	; (2c70 <prvResetNextTaskUnblockTime+0x20>)
    2c58:	b919      	cbnz	r1, 2c62 <prvResetNextTaskUnblockTime+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
    2c5a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    2c5e:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3901
	}
}
    2c60:	4770      	bx	lr
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2c62:	6812      	ldr	r2, [r2, #0]
    2c64:	68d2      	ldr	r2, [r2, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    2c66:	68d2      	ldr	r2, [r2, #12]
    2c68:	6852      	ldr	r2, [r2, #4]
    2c6a:	e7f8      	b.n	2c5e <prvResetNextTaskUnblockTime+0xe>
    2c6c:	10001294 	.word	0x10001294
    2c70:	100013a8 	.word	0x100013a8

00002c74 <prvTaskIsTaskSuspended>:
prvTaskIsTaskSuspended():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1798
	{
    2c74:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1806
		configASSERT( xTask );
    2c76:	b928      	cbnz	r0, 2c84 <prvTaskIsTaskSuspended+0x10>
    2c78:	4909      	ldr	r1, [pc, #36]	; (2ca0 <prvTaskIsTaskSuspended+0x2c>)
    2c7a:	f240 700e 	movw	r0, #1806	; 0x70e
    2c7e:	f7fe fe5d 	bl	193c <configASSERT_callback>
    2c82:	e7fe      	b.n	2c82 <prvTaskIsTaskSuspended+0xe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1809
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
    2c84:	6942      	ldr	r2, [r0, #20]
    2c86:	4b07      	ldr	r3, [pc, #28]	; (2ca4 <prvTaskIsTaskSuspended+0x30>)
    2c88:	429a      	cmp	r2, r3
    2c8a:	d107      	bne.n	2c9c <prvTaskIsTaskSuspended+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1812
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
    2c8c:	6a80      	ldr	r0, [r0, #40]	; 0x28
    2c8e:	4b06      	ldr	r3, [pc, #24]	; (2ca8 <prvTaskIsTaskSuspended+0x34>)
    2c90:	4298      	cmp	r0, r3
    2c92:	d003      	beq.n	2c9c <prvTaskIsTaskSuspended+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1816
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
    2c94:	fab0 f080 	clz	r0, r0
    2c98:	0940      	lsrs	r0, r0, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1836
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
    2c9a:	bd08      	pop	{r3, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1799
	BaseType_t xReturn = pdFALSE;
    2c9c:	2000      	movs	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1835
		return xReturn;
    2c9e:	e7fc      	b.n	2c9a <prvTaskIsTaskSuspended+0x26>
    2ca0:	0000b7b4 	.word	0x0000b7b4
    2ca4:	100013c8 	.word	0x100013c8
    2ca8:	100013b0 	.word	0x100013b0

00002cac <prvInitialiseNewTask.isra.2>:
prvInitialiseNewTask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    2cac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    2cb0:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    2cb4:	ea4f 0982 	mov.w	r9, r2, lsl #2
    2cb8:	464a      	mov	r2, r9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    2cba:	4607      	mov	r7, r0
    2cbc:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    2cbe:	6b20      	ldr	r0, [r4, #48]	; 0x30
    2cc0:	21a5      	movs	r1, #165	; 0xa5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    2cc2:	4698      	mov	r8, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    2cc4:	f002 fac8 	bl	5258 <memset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
    2cc8:	6b23      	ldr	r3, [r4, #48]	; 0x30
    2cca:	f1a9 0904 	sub.w	r9, r9, #4
    2cce:	4499      	add	r9, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:862
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
    2cd0:	f029 0907 	bic.w	r9, r9, #7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
    2cd4:	b39d      	cbz	r5, 2d3e <prvInitialiseNewTask.isra.2+0x92>
    2cd6:	1e6b      	subs	r3, r5, #1
    2cd8:	f104 0234 	add.w	r2, r4, #52	; 0x34
    2cdc:	350b      	adds	r5, #11
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
    2cde:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    2ce2:	f802 1b01 	strb.w	r1, [r2], #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
    2ce6:	b109      	cbz	r1, 2cec <prvInitialiseNewTask.isra.2+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    2ce8:	42ab      	cmp	r3, r5
    2cea:	d1f8      	bne.n	2cde <prvInitialiseNewTask.isra.2+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
    2cec:	2300      	movs	r3, #0
    2cee:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
    2cf2:	9d08      	ldr	r5, [sp, #32]
    2cf4:	2d09      	cmp	r5, #9
    2cf6:	bf28      	it	cs
    2cf8:	2509      	movcs	r5, #9
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    2cfa:	f04f 0a00 	mov.w	sl, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
    2cfe:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
    2d00:	64a5      	str	r5, [r4, #72]	; 0x48
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    2d02:	1d20      	adds	r0, r4, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    2d04:	f8c4 a04c 	str.w	sl, [r4, #76]	; 0x4c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    2d08:	f7ff fa1d 	bl	2146 <vListInitialiseItem>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2d0c:	f1c5 050a 	rsb	r5, r5, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
    2d10:	f104 0018 	add.w	r0, r4, #24
    2d14:	f7ff fa17 	bl	2146 <vListInitialiseItem>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
    2d18:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
    2d1c:	6124      	str	r4, [r4, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2d1e:	61a5      	str	r5, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
    2d20:	6264      	str	r4, [r4, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:963
		pxNewTCB->ulRunTimeCounter = 0UL;
    2d22:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    2d26:	f884 a058 	strb.w	sl, [r4, #88]	; 0x58
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
    2d2a:	4642      	mov	r2, r8
    2d2c:	4639      	mov	r1, r7
    2d2e:	4648      	mov	r0, r9
    2d30:	f7ff f874 	bl	1e1c <pxPortInitialiseStack>
    2d34:	6020      	str	r0, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
    2d36:	b106      	cbz	r6, 2d3a <prvInitialiseNewTask.isra.2+0x8e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
    2d38:	6034      	str	r4, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1069
}
    2d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
    2d3e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    2d42:	e7d6      	b.n	2cf2 <prvInitialiseNewTask.isra.2+0x46>

00002d44 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
    2d44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
    2d46:	4b1b      	ldr	r3, [pc, #108]	; (2db4 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    2d48:	4e1b      	ldr	r6, [pc, #108]	; (2db8 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
    2d4a:	681c      	ldr	r4, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    2d4c:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    2d4e:	6830      	ldr	r0, [r6, #0]
    2d50:	3004      	adds	r0, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    2d52:	460f      	mov	r7, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    2d54:	f7ff fa1d 	bl	2192 <uxListRemove>
    2d58:	4633      	mov	r3, r6
    2d5a:	b940      	cbnz	r0, 2d6e <prvAddCurrentTaskToDelayedList+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
    2d5c:	6831      	ldr	r1, [r6, #0]
    2d5e:	4e17      	ldr	r6, [pc, #92]	; (2dbc <prvAddCurrentTaskToDelayedList+0x78>)
    2d60:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    2d62:	6832      	ldr	r2, [r6, #0]
    2d64:	2001      	movs	r0, #1
    2d66:	4088      	lsls	r0, r1
    2d68:	ea22 0200 	bic.w	r2, r2, r0
    2d6c:	6032      	str	r2, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
    2d6e:	1c6a      	adds	r2, r5, #1
    2d70:	d107      	bne.n	2d82 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5110 (discriminator 1)
    2d72:	b137      	cbz	r7, 2d82 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    2d74:	6819      	ldr	r1, [r3, #0]
    2d76:	4812      	ldr	r0, [pc, #72]	; (2dc0 <prvAddCurrentTaskToDelayedList+0x7c>)
    2d78:	3104      	adds	r1, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
    2d7a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    2d7e:	f7ff b9e5 	b.w	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
    2d82:	681a      	ldr	r2, [r3, #0]
    2d84:	1964      	adds	r4, r4, r5
    2d86:	6054      	str	r4, [r2, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
    2d88:	d307      	bcc.n	2d9a <prvAddCurrentTaskToDelayedList+0x56>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    2d8a:	4a0e      	ldr	r2, [pc, #56]	; (2dc4 <prvAddCurrentTaskToDelayedList+0x80>)
    2d8c:	6810      	ldr	r0, [r2, #0]
    2d8e:	6819      	ldr	r1, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    2d90:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    2d94:	3104      	adds	r1, #4
    2d96:	f7ff b9e5 	b.w	2164 <vListInsert>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    2d9a:	4a0b      	ldr	r2, [pc, #44]	; (2dc8 <prvAddCurrentTaskToDelayedList+0x84>)
    2d9c:	6810      	ldr	r0, [r2, #0]
    2d9e:	6819      	ldr	r1, [r3, #0]
    2da0:	3104      	adds	r1, #4
    2da2:	f7ff f9df 	bl	2164 <vListInsert>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
    2da6:	4b09      	ldr	r3, [pc, #36]	; (2dcc <prvAddCurrentTaskToDelayedList+0x88>)
    2da8:	681a      	ldr	r2, [r3, #0]
    2daa:	42a2      	cmp	r2, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
    2dac:	bf88      	it	hi
    2dae:	601c      	strhi	r4, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    2db0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2db2:	bf00      	nop
    2db4:	100013dc 	.word	0x100013dc
    2db8:	10001290 	.word	0x10001290
    2dbc:	10001378 	.word	0x10001378
    2dc0:	100013c8 	.word	0x100013c8
    2dc4:	10001298 	.word	0x10001298
    2dc8:	10001294 	.word	0x10001294
    2dcc:	100013a8 	.word	0x100013a8

00002dd0 <xTaskCreateStatic>:
xTaskCreateStatic():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:585
	{
    2dd0:	b570      	push	{r4, r5, r6, lr}
    2dd2:	b086      	sub	sp, #24
    2dd4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:589
		configASSERT( puxStackBuffer != NULL );
    2dd8:	b92d      	cbnz	r5, 2de6 <xTaskCreateStatic+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:589 (discriminator 1)
    2dda:	4915      	ldr	r1, [pc, #84]	; (2e30 <xTaskCreateStatic+0x60>)
    2ddc:	f240 204d 	movw	r0, #589	; 0x24d
    2de0:	f7fe fdac 	bl	193c <configASSERT_callback>
    2de4:	e7fe      	b.n	2de4 <xTaskCreateStatic+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:590
		configASSERT( pxTaskBuffer != NULL );
    2de6:	b92c      	cbnz	r4, 2df4 <xTaskCreateStatic+0x24>
    2de8:	4912      	ldr	r1, [pc, #72]	; (2e34 <xTaskCreateStatic+0x64>)
    2dea:	f240 204e 	movw	r0, #590	; 0x24e
    2dee:	f7fe fda5 	bl	193c <configASSERT_callback>
    2df2:	e7fe      	b.n	2df2 <xTaskCreateStatic+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:597
			volatile size_t xSize = sizeof( StaticTask_t );
    2df4:	265c      	movs	r6, #92	; 0x5c
    2df6:	9605      	str	r6, [sp, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:598
			configASSERT( xSize == sizeof( TCB_t ) );
    2df8:	9e05      	ldr	r6, [sp, #20]
    2dfa:	2e5c      	cmp	r6, #92	; 0x5c
    2dfc:	d005      	beq.n	2e0a <xTaskCreateStatic+0x3a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 1)
    2dfe:	490e      	ldr	r1, [pc, #56]	; (2e38 <xTaskCreateStatic+0x68>)
    2e00:	f240 2056 	movw	r0, #598	; 0x256
    2e04:	f7fe fd9a 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 3)
    2e08:	e7fe      	b.n	2e08 <xTaskCreateStatic+0x38>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:609
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
    2e0a:	6325      	str	r5, [r4, #48]	; 0x30
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:615
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
    2e0c:	2502      	movs	r5, #2
    2e0e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    2e12:	ad04      	add	r5, sp, #16
    2e14:	9501      	str	r5, [sp, #4]
    2e16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    2e18:	9402      	str	r4, [sp, #8]
    2e1a:	9500      	str	r5, [sp, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:599
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
    2e1c:	9e05      	ldr	r6, [sp, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    2e1e:	f7ff ff45 	bl	2cac <prvInitialiseNewTask.isra.2>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:620
			prvAddNewTaskToReadyList( pxNewTCB );
    2e22:	4620      	mov	r0, r4
    2e24:	f7ff fe86 	bl	2b34 <prvAddNewTaskToReadyList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:628
	}
    2e28:	9804      	ldr	r0, [sp, #16]
    2e2a:	b006      	add	sp, #24
    2e2c:	bd70      	pop	{r4, r5, r6, pc}
    2e2e:	bf00      	nop
    2e30:	0000b893 	.word	0x0000b893
    2e34:	0000b8aa 	.word	0x0000b8aa
    2e38:	0000b8bf 	.word	0x0000b8bf

00002e3c <eTaskGetState>:
eTaskGetState():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1379
	{
    2e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1384
		configASSERT( pxTCB );
    2e3e:	4604      	mov	r4, r0
    2e40:	b928      	cbnz	r0, 2e4e <eTaskGetState+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1384 (discriminator 1)
    2e42:	4914      	ldr	r1, [pc, #80]	; (2e94 <eTaskGetState+0x58>)
    2e44:	f44f 60ad 	mov.w	r0, #1384	; 0x568
    2e48:	f7fe fd78 	bl	193c <configASSERT_callback>
    2e4c:	e7fe      	b.n	2e4c <eTaskGetState+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1386
		if( pxTCB == pxCurrentTCB )
    2e4e:	4b12      	ldr	r3, [pc, #72]	; (2e98 <eTaskGetState+0x5c>)
    2e50:	681b      	ldr	r3, [r3, #0]
    2e52:	4283      	cmp	r3, r0
    2e54:	d018      	beq.n	2e88 <eTaskGetState+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1393
			taskENTER_CRITICAL();
    2e56:	f7ff f80d 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1396
				pxDelayedList = pxDelayedTaskList;
    2e5a:	4b10      	ldr	r3, [pc, #64]	; (2e9c <eTaskGetState+0x60>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1395
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
    2e5c:	6965      	ldr	r5, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1396
				pxDelayedList = pxDelayedTaskList;
    2e5e:	681f      	ldr	r7, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1397
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
    2e60:	4b0f      	ldr	r3, [pc, #60]	; (2ea0 <eTaskGetState+0x64>)
    2e62:	681e      	ldr	r6, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1399
			taskEXIT_CRITICAL();
    2e64:	f7ff f828 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1401
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
    2e68:	42bd      	cmp	r5, r7
    2e6a:	d011      	beq.n	2e90 <eTaskGetState+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1401 (discriminator 1)
    2e6c:	42b5      	cmp	r5, r6
    2e6e:	d00f      	beq.n	2e90 <eTaskGetState+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1409
				else if( pxStateList == &xSuspendedTaskList )
    2e70:	4b0c      	ldr	r3, [pc, #48]	; (2ea4 <eTaskGetState+0x68>)
    2e72:	429d      	cmp	r5, r3
    2e74:	d10a      	bne.n	2e8c <eTaskGetState+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1414
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
    2e76:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    2e78:	b953      	cbnz	r3, 2e90 <eTaskGetState+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1422
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
    2e7a:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1428
								eReturn = eSuspended;
    2e7e:	2b01      	cmp	r3, #1
    2e80:	bf0c      	ite	eq
    2e82:	2002      	moveq	r0, #2
    2e84:	2003      	movne	r0, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1463
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
    2e86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1389
			eReturn = eRunning;
    2e88:	2000      	movs	r0, #0
    2e8a:	e7fc      	b.n	2e86 <eTaskGetState+0x4a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1458
				eReturn = eReady;
    2e8c:	2001      	movs	r0, #1
    2e8e:	e7fa      	b.n	2e86 <eTaskGetState+0x4a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1405
				eReturn = eBlocked;
    2e90:	2002      	movs	r0, #2
    2e92:	e7f8      	b.n	2e86 <eTaskGetState+0x4a>
    2e94:	0000b7ae 	.word	0x0000b7ae
    2e98:	10001290 	.word	0x10001290
    2e9c:	10001294 	.word	0x10001294
    2ea0:	10001298 	.word	0x10001298
    2ea4:	100013c8 	.word	0x100013c8

00002ea8 <vTaskResume>:
vTaskResume():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1844
	{
    2ea8:	b570      	push	{r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1848
		configASSERT( xTaskToResume );
    2eaa:	4604      	mov	r4, r0
    2eac:	b928      	cbnz	r0, 2eba <vTaskResume+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1848 (discriminator 1)
    2eae:	491a      	ldr	r1, [pc, #104]	; (2f18 <vTaskResume+0x70>)
    2eb0:	f44f 60e7 	mov.w	r0, #1848	; 0x738
    2eb4:	f7fe fd42 	bl	193c <configASSERT_callback>
    2eb8:	e7fe      	b.n	2eb8 <vTaskResume+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1852
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
    2eba:	4d18      	ldr	r5, [pc, #96]	; (2f1c <vTaskResume+0x74>)
    2ebc:	682b      	ldr	r3, [r5, #0]
    2ebe:	4283      	cmp	r3, r0
    2ec0:	d028      	beq.n	2f14 <vTaskResume+0x6c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1854
			taskENTER_CRITICAL();
    2ec2:	f7fe ffd7 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1856
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
    2ec6:	4620      	mov	r0, r4
    2ec8:	f7ff fed4 	bl	2c74 <prvTaskIsTaskSuspended>
    2ecc:	b1f0      	cbz	r0, 2f0c <vTaskResume+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1862
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
    2ece:	1d26      	adds	r6, r4, #4
    2ed0:	4630      	mov	r0, r6
    2ed2:	f7ff f95e 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1863
					prvAddTaskToReadyList( pxTCB );
    2ed6:	4912      	ldr	r1, [pc, #72]	; (2f20 <vTaskResume+0x78>)
    2ed8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2eda:	6808      	ldr	r0, [r1, #0]
    2edc:	2301      	movs	r3, #1
    2ede:	4093      	lsls	r3, r2
    2ee0:	4303      	orrs	r3, r0
    2ee2:	600b      	str	r3, [r1, #0]
    2ee4:	4b0f      	ldr	r3, [pc, #60]	; (2f24 <vTaskResume+0x7c>)
    2ee6:	2014      	movs	r0, #20
    2ee8:	fb00 3002 	mla	r0, r0, r2, r3
    2eec:	4631      	mov	r1, r6
    2eee:	f7ff f92d 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1866
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    2ef2:	682b      	ldr	r3, [r5, #0]
    2ef4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    2ef8:	429a      	cmp	r2, r3
    2efa:	d307      	bcc.n	2f0c <vTaskResume+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1871
						taskYIELD_IF_USING_PREEMPTION();
    2efc:	4b0a      	ldr	r3, [pc, #40]	; (2f28 <vTaskResume+0x80>)
    2efe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2f02:	601a      	str	r2, [r3, #0]
    2f04:	f3bf 8f4f 	dsb	sy
    2f08:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1889
	}
    2f0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1883
			taskEXIT_CRITICAL();
    2f10:	f7fe bfd2 	b.w	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1889
	}
    2f14:	bd70      	pop	{r4, r5, r6, pc}
    2f16:	bf00      	nop
    2f18:	0000b821 	.word	0x0000b821
    2f1c:	10001290 	.word	0x10001290
    2f20:	10001378 	.word	0x10001378
    2f24:	1000129c 	.word	0x1000129c
    2f28:	e000ed04 	.word	0xe000ed04

00002f2c <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1968
{
    2f2c:	b510      	push	{r4, lr}
    2f2e:	b088      	sub	sp, #32
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1974
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
    2f30:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    2f32:	aa07      	add	r2, sp, #28
    2f34:	a906      	add	r1, sp, #24
    2f36:	a805      	add	r0, sp, #20
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1975
		StackType_t *pxIdleTaskStackBuffer = NULL;
    2f38:	e9cd 4405 	strd	r4, r4, [sp, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    2f3c:	f7fe fd1e 	bl	197c <vApplicationGetIdleTaskMemory>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1981
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
    2f40:	9b05      	ldr	r3, [sp, #20]
    2f42:	9302      	str	r3, [sp, #8]
    2f44:	9b06      	ldr	r3, [sp, #24]
    2f46:	9a07      	ldr	r2, [sp, #28]
    2f48:	490f      	ldr	r1, [pc, #60]	; (2f88 <vTaskStartScheduler+0x5c>)
    2f4a:	4810      	ldr	r0, [pc, #64]	; (2f8c <vTaskStartScheduler+0x60>)
    2f4c:	e9cd 4300 	strd	r4, r3, [sp]
    2f50:	4623      	mov	r3, r4
    2f52:	f7ff ff3d 	bl	2dd0 <xTaskCreateStatic>
    2f56:	4b0e      	ldr	r3, [pc, #56]	; (2f90 <vTaskStartScheduler+0x64>)
    2f58:	6018      	str	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1989
		if( xIdleTaskHandle != NULL )
    2f5a:	b190      	cbz	r0, 2f82 <vTaskStartScheduler+0x56>
vPortRaiseBASEPRI():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    2f5c:	f04f 0318 	mov.w	r3, #24
    2f60:	f383 8811 	msr	BASEPRI, r3
    2f64:	f3bf 8f6f 	isb	sy
    2f68:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
    2f6c:	4b09      	ldr	r3, [pc, #36]	; (2f94 <vTaskStartScheduler+0x68>)
    2f6e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2f72:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
    2f74:	4b08      	ldr	r3, [pc, #32]	; (2f98 <vTaskStartScheduler+0x6c>)
    2f76:	2201      	movs	r2, #1
    2f78:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
    2f7a:	4b08      	ldr	r3, [pc, #32]	; (2f9c <vTaskStartScheduler+0x70>)
    2f7c:	601c      	str	r4, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
    2f7e:	f7ff f80f 	bl	1fa0 <xPortStartScheduler>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
    2f82:	b008      	add	sp, #32
    2f84:	bd10      	pop	{r4, pc}
    2f86:	bf00      	nop
    2f88:	0000b839 	.word	0x0000b839
    2f8c:	00002c29 	.word	0x00002c29
    2f90:	100013a4 	.word	0x100013a4
    2f94:	100013a8 	.word	0x100013a8
    2f98:	100013c4 	.word	0x100013c4
    2f9c:	100013dc 	.word	0x100013dc

00002fa0 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
    2fa0:	4a02      	ldr	r2, [pc, #8]	; (2fac <vTaskSuspendAll+0xc>)
    2fa2:	6813      	ldr	r3, [r2, #0]
    2fa4:	3301      	adds	r3, #1
    2fa6:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2108
}
    2fa8:	4770      	bx	lr
    2faa:	bf00      	nop
    2fac:	10001370 	.word	0x10001370

00002fb0 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2666
{
    2fb0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    2fb4:	4b3b      	ldr	r3, [pc, #236]	; (30a4 <xTaskIncrementTick+0xf4>)
    2fb6:	681b      	ldr	r3, [r3, #0]
    2fb8:	2b00      	cmp	r3, #0
    2fba:	d16b      	bne.n	3094 <xTaskIncrementTick+0xe4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
    2fbc:	4b3a      	ldr	r3, [pc, #232]	; (30a8 <xTaskIncrementTick+0xf8>)
    2fbe:	681c      	ldr	r4, [r3, #0]
    2fc0:	3401      	adds	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
    2fc2:	601c      	str	r4, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
    2fc4:	b9a4      	cbnz	r4, 2ff0 <xTaskIncrementTick+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
    2fc6:	4b39      	ldr	r3, [pc, #228]	; (30ac <xTaskIncrementTick+0xfc>)
    2fc8:	681a      	ldr	r2, [r3, #0]
    2fca:	6812      	ldr	r2, [r2, #0]
    2fcc:	b12a      	cbz	r2, 2fda <xTaskIncrementTick+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 1)
    2fce:	4938      	ldr	r1, [pc, #224]	; (30b0 <xTaskIncrementTick+0x100>)
    2fd0:	f640 207f 	movw	r0, #2687	; 0xa7f
    2fd4:	f7fe fcb2 	bl	193c <configASSERT_callback>
    2fd8:	e7fe      	b.n	2fd8 <xTaskIncrementTick+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 2)
    2fda:	4a36      	ldr	r2, [pc, #216]	; (30b4 <xTaskIncrementTick+0x104>)
    2fdc:	6819      	ldr	r1, [r3, #0]
    2fde:	6810      	ldr	r0, [r2, #0]
    2fe0:	6018      	str	r0, [r3, #0]
    2fe2:	6011      	str	r1, [r2, #0]
    2fe4:	4a34      	ldr	r2, [pc, #208]	; (30b8 <xTaskIncrementTick+0x108>)
    2fe6:	6813      	ldr	r3, [r2, #0]
    2fe8:	3301      	adds	r3, #1
    2fea:	6013      	str	r3, [r2, #0]
    2fec:	f7ff fe30 	bl	2c50 <prvResetNextTaskUnblockTime>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    2ff0:	4d32      	ldr	r5, [pc, #200]	; (30bc <xTaskIncrementTick+0x10c>)
    2ff2:	4f33      	ldr	r7, [pc, #204]	; (30c0 <xTaskIncrementTick+0x110>)
    2ff4:	682b      	ldr	r3, [r5, #0]
    2ff6:	42a3      	cmp	r3, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    2ff8:	f04f 0b00 	mov.w	fp, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    2ffc:	d911      	bls.n	3022 <xTaskIncrementTick+0x72>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
    2ffe:	683a      	ldr	r2, [r7, #0]
    3000:	4b30      	ldr	r3, [pc, #192]	; (30c4 <xTaskIncrementTick+0x114>)
    3002:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    3004:	2214      	movs	r2, #20
    3006:	434a      	muls	r2, r1
    3008:	589a      	ldr	r2, [r3, r2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
    300a:	2a02      	cmp	r2, #2
    300c:	bf28      	it	cs
    300e:	f04f 0b01 	movcs.w	fp, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
    3012:	4a2d      	ldr	r2, [pc, #180]	; (30c8 <xTaskIncrementTick+0x118>)
    3014:	6812      	ldr	r2, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
    3016:	2a00      	cmp	r2, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2834
}
    3018:	bf0c      	ite	eq
    301a:	4658      	moveq	r0, fp
    301c:	2001      	movne	r0, #1
    301e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    3022:	f8df a088 	ldr.w	sl, [pc, #136]	; 30ac <xTaskIncrementTick+0xfc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    3026:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 30d0 <xTaskIncrementTick+0x120>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    302a:	f8da 2000 	ldr.w	r2, [sl]
    302e:	6812      	ldr	r2, [r2, #0]
    3030:	b91a      	cbnz	r2, 303a <xTaskIncrementTick+0x8a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3032:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    3036:	602a      	str	r2, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2710
					break;
    3038:	e7e1      	b.n	2ffe <xTaskIncrementTick+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    303a:	f8da 2000 	ldr.w	r2, [sl]
    303e:	68d2      	ldr	r2, [r2, #12]
    3040:	68d6      	ldr	r6, [r2, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
    3042:	6871      	ldr	r1, [r6, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
    3044:	428c      	cmp	r4, r1
    3046:	d201      	bcs.n	304c <xTaskIncrementTick+0x9c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
    3048:	6029      	str	r1, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
    304a:	e7d8      	b.n	2ffe <xTaskIncrementTick+0x4e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    304c:	f106 0804 	add.w	r8, r6, #4
    3050:	4640      	mov	r0, r8
    3052:	f7ff f89e 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    3056:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    3058:	b119      	cbz	r1, 3062 <xTaskIncrementTick+0xb2>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    305a:	f106 0018 	add.w	r0, r6, #24
    305e:	f7ff f898 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    3062:	6af0      	ldr	r0, [r6, #44]	; 0x2c
    3064:	f8d9 3000 	ldr.w	r3, [r9]
    3068:	2201      	movs	r2, #1
    306a:	fa02 f100 	lsl.w	r1, r2, r0
    306e:	4319      	orrs	r1, r3
    3070:	4b14      	ldr	r3, [pc, #80]	; (30c4 <xTaskIncrementTick+0x114>)
    3072:	f8c9 1000 	str.w	r1, [r9]
    3076:	f04f 0c14 	mov.w	ip, #20
    307a:	4641      	mov	r1, r8
    307c:	fb0c 3000 	mla	r0, ip, r0, r3
    3080:	f7ff f864 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    3084:	6838      	ldr	r0, [r7, #0]
    3086:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    3088:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
    308a:	4291      	cmp	r1, r2
    308c:	bf28      	it	cs
    308e:	f04f 0b01 	movcs.w	fp, #1
    3092:	e7ca      	b.n	302a <xTaskIncrementTick+0x7a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
    3094:	4a0d      	ldr	r2, [pc, #52]	; (30cc <xTaskIncrementTick+0x11c>)
    3096:	6813      	ldr	r3, [r2, #0]
    3098:	3301      	adds	r3, #1
    309a:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    309c:	f04f 0b00 	mov.w	fp, #0
    30a0:	e7b7      	b.n	3012 <xTaskIncrementTick+0x62>
    30a2:	bf00      	nop
    30a4:	10001370 	.word	0x10001370
    30a8:	100013dc 	.word	0x100013dc
    30ac:	10001294 	.word	0x10001294
    30b0:	0000b90a 	.word	0x0000b90a
    30b4:	10001298 	.word	0x10001298
    30b8:	100013ac 	.word	0x100013ac
    30bc:	100013a8 	.word	0x100013a8
    30c0:	10001290 	.word	0x10001290
    30c4:	1000129c 	.word	0x1000129c
    30c8:	100013e0 	.word	0x100013e0
    30cc:	1000136c 	.word	0x1000136c
    30d0:	10001378 	.word	0x10001378

000030d4 <xTaskResumeAll>:
xTaskResumeAll():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2175
{
    30d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
    30d8:	4c2f      	ldr	r4, [pc, #188]	; (3198 <xTaskResumeAll+0xc4>)
    30da:	6823      	ldr	r3, [r4, #0]
    30dc:	b92b      	cbnz	r3, 30ea <xTaskResumeAll+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2181 (discriminator 1)
    30de:	492f      	ldr	r1, [pc, #188]	; (319c <xTaskResumeAll+0xc8>)
    30e0:	f640 0085 	movw	r0, #2181	; 0x885
    30e4:	f7fe fc2a 	bl	193c <configASSERT_callback>
    30e8:	e7fe      	b.n	30e8 <xTaskResumeAll+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
    30ea:	f7fe fec3 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
    30ee:	6823      	ldr	r3, [r4, #0]
    30f0:	3b01      	subs	r3, #1
    30f2:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    30f4:	6824      	ldr	r4, [r4, #0]
    30f6:	b12c      	cbz	r4, 3104 <xTaskResumeAll+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
    30f8:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
    30fa:	f7fe fedd 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2281
}
    30fe:	4620      	mov	r0, r4
    3100:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
    3104:	4b26      	ldr	r3, [pc, #152]	; (31a0 <xTaskResumeAll+0xcc>)
    3106:	681b      	ldr	r3, [r3, #0]
    3108:	2b00      	cmp	r3, #0
    310a:	d0f5      	beq.n	30f8 <xTaskResumeAll+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    310c:	4d25      	ldr	r5, [pc, #148]	; (31a4 <xTaskResumeAll+0xd0>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    310e:	4e26      	ldr	r6, [pc, #152]	; (31a8 <xTaskResumeAll+0xd4>)
    3110:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 31bc <xTaskResumeAll+0xe8>
    3114:	e01f      	b.n	3156 <xTaskResumeAll+0x82>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3116:	68eb      	ldr	r3, [r5, #12]
    3118:	68dc      	ldr	r4, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    311a:	f104 0904 	add.w	r9, r4, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    311e:	f104 0018 	add.w	r0, r4, #24
    3122:	f7ff f836 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    3126:	4648      	mov	r0, r9
    3128:	f7ff f833 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    312c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    312e:	6831      	ldr	r1, [r6, #0]
    3130:	2701      	movs	r7, #1
    3132:	fa07 f302 	lsl.w	r3, r7, r2
    3136:	2014      	movs	r0, #20
    3138:	430b      	orrs	r3, r1
    313a:	fb00 8002 	mla	r0, r0, r2, r8
    313e:	4649      	mov	r1, r9
    3140:	6033      	str	r3, [r6, #0]
    3142:	f7ff f803 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    3146:	4b19      	ldr	r3, [pc, #100]	; (31ac <xTaskResumeAll+0xd8>)
    3148:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    314a:	681b      	ldr	r3, [r3, #0]
    314c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    314e:	429a      	cmp	r2, r3
    3150:	d301      	bcc.n	3156 <xTaskResumeAll+0x82>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
    3152:	4b17      	ldr	r3, [pc, #92]	; (31b0 <xTaskResumeAll+0xdc>)
    3154:	601f      	str	r7, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    3156:	682b      	ldr	r3, [r5, #0]
    3158:	2b00      	cmp	r3, #0
    315a:	d1dc      	bne.n	3116 <xTaskResumeAll+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
    315c:	b10c      	cbz	r4, 3162 <xTaskResumeAll+0x8e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
    315e:	f7ff fd77 	bl	2c50 <prvResetNextTaskUnblockTime>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    3162:	4d14      	ldr	r5, [pc, #80]	; (31b4 <xTaskResumeAll+0xe0>)
    3164:	682c      	ldr	r4, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
    3166:	b144      	cbz	r4, 317a <xTaskResumeAll+0xa6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    3168:	4e11      	ldr	r6, [pc, #68]	; (31b0 <xTaskResumeAll+0xdc>)
    316a:	2701      	movs	r7, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
    316c:	f7ff ff20 	bl	2fb0 <xTaskIncrementTick>
    3170:	b100      	cbz	r0, 3174 <xTaskResumeAll+0xa0>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    3172:	6037      	str	r7, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
    3174:	3c01      	subs	r4, #1
    3176:	d1f9      	bne.n	316c <xTaskResumeAll+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
    3178:	602c      	str	r4, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
    317a:	4b0d      	ldr	r3, [pc, #52]	; (31b0 <xTaskResumeAll+0xdc>)
    317c:	681b      	ldr	r3, [r3, #0]
    317e:	2b00      	cmp	r3, #0
    3180:	d0ba      	beq.n	30f8 <xTaskResumeAll+0x24>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
    3182:	4b0d      	ldr	r3, [pc, #52]	; (31b8 <xTaskResumeAll+0xe4>)
    3184:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3188:	601a      	str	r2, [r3, #0]
    318a:	f3bf 8f4f 	dsb	sy
    318e:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
    3192:	2401      	movs	r4, #1
    3194:	e7b1      	b.n	30fa <xTaskResumeAll+0x26>
    3196:	bf00      	nop
    3198:	10001370 	.word	0x10001370
    319c:	0000b96f 	.word	0x0000b96f
    31a0:	10001368 	.word	0x10001368
    31a4:	100013b0 	.word	0x100013b0
    31a8:	10001378 	.word	0x10001378
    31ac:	10001290 	.word	0x10001290
    31b0:	100013e0 	.word	0x100013e0
    31b4:	1000136c 	.word	0x1000136c
    31b8:	e000ed04 	.word	0xe000ed04
    31bc:	1000129c 	.word	0x1000129c

000031c0 <vTaskDelay>:
vTaskDelay():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1334
	{
    31c0:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
    31c2:	b940      	cbnz	r0, 31d6 <vTaskDelay+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
    31c4:	4b0d      	ldr	r3, [pc, #52]	; (31fc <vTaskDelay+0x3c>)
    31c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    31ca:	601a      	str	r2, [r3, #0]
    31cc:	f3bf 8f4f 	dsb	sy
    31d0:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1371
	}
    31d4:	bd08      	pop	{r3, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
    31d6:	4b0a      	ldr	r3, [pc, #40]	; (3200 <vTaskDelay+0x40>)
    31d8:	6819      	ldr	r1, [r3, #0]
    31da:	b129      	cbz	r1, 31e8 <vTaskDelay+0x28>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1340 (discriminator 1)
    31dc:	4909      	ldr	r1, [pc, #36]	; (3204 <vTaskDelay+0x44>)
    31de:	f240 503c 	movw	r0, #1340	; 0x53c
    31e2:	f7fe fbab 	bl	193c <configASSERT_callback>
    31e6:	e7fe      	b.n	31e6 <vTaskDelay+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
    31e8:	f7ff feda 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
    31ec:	f7ff fdaa 	bl	2d44 <prvAddCurrentTaskToDelayedList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
    31f0:	f7ff ff70 	bl	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
    31f4:	2800      	cmp	r0, #0
    31f6:	d0e5      	beq.n	31c4 <vTaskDelay+0x4>
    31f8:	e7ec      	b.n	31d4 <vTaskDelay+0x14>
    31fa:	bf00      	nop
    31fc:	e000ed04 	.word	0xe000ed04
    3200:	10001370 	.word	0x10001370
    3204:	0000b7e5 	.word	0x0000b7e5

00003208 <xTaskGetHandle>:
xTaskGetHandle():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2421
	{
    3208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    320c:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2426
		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
    320e:	f003 fa0c 	bl	662a <strlen>
    3212:	280b      	cmp	r0, #11
    3214:	d905      	bls.n	3222 <xTaskGetHandle+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2426 (discriminator 1)
    3216:	4916      	ldr	r1, [pc, #88]	; (3270 <xTaskGetHandle+0x68>)
    3218:	f640 107a 	movw	r0, #2426	; 0x97a
    321c:	f7fe fb8e 	bl	193c <configASSERT_callback>
    3220:	e7fe      	b.n	3220 <xTaskGetHandle+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2428
		vTaskSuspendAll();
    3222:	f7ff febd 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2434
				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNameToQuery );
    3226:	f8df 8058 	ldr.w	r8, [pc, #88]	; 3280 <xTaskGetHandle+0x78>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2422
	UBaseType_t uxQueue = configMAX_PRIORITIES;
    322a:	260a      	movs	r6, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2434
				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNameToQuery );
    322c:	2714      	movs	r7, #20
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2433
				uxQueue--;
    322e:	3e01      	subs	r6, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2434
				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNameToQuery );
    3230:	4629      	mov	r1, r5
    3232:	fb07 8006 	mla	r0, r7, r6, r8
    3236:	f7ff fc3b 	bl	2ab0 <prvSearchForNameWithinSingleList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2436
				if( pxTCB != NULL )
    323a:	4604      	mov	r4, r0
    323c:	b990      	cbnz	r0, 3264 <xTaskGetHandle+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2442
			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    323e:	2e00      	cmp	r6, #0
    3240:	d1f5      	bne.n	322e <xTaskGetHandle+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2447
				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
    3242:	4b0c      	ldr	r3, [pc, #48]	; (3274 <xTaskGetHandle+0x6c>)
    3244:	6818      	ldr	r0, [r3, #0]
    3246:	f7ff fc33 	bl	2ab0 <prvSearchForNameWithinSingleList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2450
			if( pxTCB == NULL )
    324a:	4604      	mov	r4, r0
    324c:	b950      	cbnz	r0, 3264 <xTaskGetHandle+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2452
				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery );
    324e:	4b0a      	ldr	r3, [pc, #40]	; (3278 <xTaskGetHandle+0x70>)
    3250:	4629      	mov	r1, r5
    3252:	6818      	ldr	r0, [r3, #0]
    3254:	f7ff fc2c 	bl	2ab0 <prvSearchForNameWithinSingleList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2457
				if( pxTCB == NULL )
    3258:	4604      	mov	r4, r0
    325a:	b918      	cbnz	r0, 3264 <xTaskGetHandle+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2460
					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
    325c:	4807      	ldr	r0, [pc, #28]	; (327c <xTaskGetHandle+0x74>)
    325e:	f7ff fc27 	bl	2ab0 <prvSearchForNameWithinSingleList>
    3262:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2475
		( void ) xTaskResumeAll();
    3264:	f7ff ff36 	bl	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2478
	}
    3268:	4620      	mov	r0, r4
    326a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    326e:	bf00      	nop
    3270:	0000b8d8 	.word	0x0000b8d8
    3274:	10001294 	.word	0x10001294
    3278:	10001298 	.word	0x10001298
    327c:	100013c8 	.word	0x100013c8
    3280:	1000129c 	.word	0x1000129c

00003284 <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2948
{
    3284:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    3286:	4b27      	ldr	r3, [pc, #156]	; (3324 <vTaskSwitchContext+0xa0>)
    3288:	681a      	ldr	r2, [r3, #0]
    328a:	4b27      	ldr	r3, [pc, #156]	; (3328 <vTaskSwitchContext+0xa4>)
    328c:	b112      	cbz	r2, 3294 <vTaskSwitchContext+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
    328e:	2201      	movs	r2, #1
    3290:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    3292:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
    3294:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2965
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    3296:	f7fe fb7d 	bl	1994 <freertos_hooks__get_run_time_counter_value>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2975
			if( ulTotalRunTime > ulTaskSwitchedInTime )
    329a:	4a24      	ldr	r2, [pc, #144]	; (332c <vTaskSwitchContext+0xa8>)
    329c:	4c24      	ldr	r4, [pc, #144]	; (3330 <vTaskSwitchContext+0xac>)
    329e:	6815      	ldr	r5, [r2, #0]
    32a0:	42a8      	cmp	r0, r5
    32a2:	d904      	bls.n	32ae <vTaskSwitchContext+0x2a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2977
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
    32a4:	6821      	ldr	r1, [r4, #0]
    32a6:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    32a8:	1b5b      	subs	r3, r3, r5
    32aa:	4403      	add	r3, r0
    32ac:	650b      	str	r3, [r1, #80]	; 0x50
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    32ae:	6823      	ldr	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2983
			ulTaskSwitchedInTime = ulTotalRunTime;
    32b0:	6010      	str	r0, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    32b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    32b4:	681a      	ldr	r2, [r3, #0]
    32b6:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    32ba:	d10b      	bne.n	32d4 <vTaskSwitchContext+0x50>
    32bc:	685a      	ldr	r2, [r3, #4]
    32be:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    32c2:	d107      	bne.n	32d4 <vTaskSwitchContext+0x50>
    32c4:	689a      	ldr	r2, [r3, #8]
    32c6:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    32ca:	d103      	bne.n	32d4 <vTaskSwitchContext+0x50>
    32cc:	68db      	ldr	r3, [r3, #12]
    32ce:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
    32d2:	d004      	beq.n	32de <vTaskSwitchContext+0x5a>
    32d4:	6820      	ldr	r0, [r4, #0]
    32d6:	6821      	ldr	r1, [r4, #0]
    32d8:	3134      	adds	r1, #52	; 0x34
    32da:	f7fe fb11 	bl	1900 <vApplicationStackOverflowHook>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    32de:	4b15      	ldr	r3, [pc, #84]	; (3334 <vTaskSwitchContext+0xb0>)
    32e0:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
    32e2:	fab3 f383 	clz	r3, r3
    32e6:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
    32e8:	f1c3 031f 	rsb	r3, r3, #31
    32ec:	2214      	movs	r2, #20
    32ee:	4912      	ldr	r1, [pc, #72]	; (3338 <vTaskSwitchContext+0xb4>)
    32f0:	435a      	muls	r2, r3
    32f2:	1888      	adds	r0, r1, r2
    32f4:	588d      	ldr	r5, [r1, r2]
    32f6:	b92d      	cbnz	r5, 3304 <vTaskSwitchContext+0x80>
    32f8:	4910      	ldr	r1, [pc, #64]	; (333c <vTaskSwitchContext+0xb8>)
    32fa:	f640 30b7 	movw	r0, #2999	; 0xbb7
    32fe:	f7fe fb1d 	bl	193c <configASSERT_callback>
    3302:	e7fe      	b.n	3302 <vTaskSwitchContext+0x7e>
    3304:	6845      	ldr	r5, [r0, #4]
    3306:	3208      	adds	r2, #8
    3308:	686d      	ldr	r5, [r5, #4]
    330a:	6045      	str	r5, [r0, #4]
    330c:	440a      	add	r2, r1
    330e:	4295      	cmp	r5, r2
    3310:	bf04      	itt	eq
    3312:	686a      	ldreq	r2, [r5, #4]
    3314:	6042      	streq	r2, [r0, #4]
    3316:	2214      	movs	r2, #20
    3318:	fb02 1303 	mla	r3, r2, r3, r1
    331c:	685b      	ldr	r3, [r3, #4]
    331e:	68db      	ldr	r3, [r3, #12]
    3320:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    3322:	e7b6      	b.n	3292 <vTaskSwitchContext+0xe>
    3324:	10001370 	.word	0x10001370
    3328:	100013e0 	.word	0x100013e0
    332c:	10001364 	.word	0x10001364
    3330:	10001290 	.word	0x10001290
    3334:	10001378 	.word	0x10001378
    3338:	1000129c 	.word	0x1000129c
    333c:	0000b83e 	.word	0x0000b83e

00003340 <vTaskSuspend>:
vTaskSuspend():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1697
	{
    3340:	b570      	push	{r4, r5, r6, lr}
    3342:	4604      	mov	r4, r0
    3344:	4e2a      	ldr	r6, [pc, #168]	; (33f0 <vTaskSuspend+0xb0>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1700
		taskENTER_CRITICAL();
    3346:	f7fe fd95 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1704
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
    334a:	b904      	cbnz	r4, 334e <vTaskSuspend+0xe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1704 (discriminator 1)
    334c:	6834      	ldr	r4, [r6, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1710 (discriminator 4)
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    334e:	1d25      	adds	r5, r4, #4
    3350:	4628      	mov	r0, r5
    3352:	f7fe ff1e 	bl	2192 <uxListRemove>
    3356:	b960      	cbnz	r0, 3372 <vTaskSuspend+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1712
				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3358:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    335a:	4b26      	ldr	r3, [pc, #152]	; (33f4 <vTaskSuspend+0xb4>)
    335c:	2114      	movs	r1, #20
    335e:	4341      	muls	r1, r0
    3360:	585b      	ldr	r3, [r3, r1]
    3362:	b933      	cbnz	r3, 3372 <vTaskSuspend+0x32>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1712 (discriminator 1)
    3364:	4924      	ldr	r1, [pc, #144]	; (33f8 <vTaskSuspend+0xb8>)
    3366:	2201      	movs	r2, #1
    3368:	680b      	ldr	r3, [r1, #0]
    336a:	4082      	lsls	r2, r0
    336c:	ea23 0302 	bic.w	r3, r3, r2
    3370:	600b      	str	r3, [r1, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1720
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    3372:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3374:	b11b      	cbz	r3, 337e <vTaskSuspend+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1722
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    3376:	f104 0018 	add.w	r0, r4, #24
    337a:	f7fe ff0a 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1729
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
    337e:	4629      	mov	r1, r5
    3380:	481e      	ldr	r0, [pc, #120]	; (33fc <vTaskSuspend+0xbc>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1744
		if( xSchedulerRunning != pdFALSE )
    3382:	4d1f      	ldr	r5, [pc, #124]	; (3400 <vTaskSuspend+0xc0>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1729
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
    3384:	f7fe fee2 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1733
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
    3388:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
    338c:	2b01      	cmp	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1737
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    338e:	bf04      	itt	eq
    3390:	2300      	moveq	r3, #0
    3392:	f884 3058 	strbeq.w	r3, [r4, #88]	; 0x58
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1742
		taskEXIT_CRITICAL();
    3396:	f7fe fd8f 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1744
		if( xSchedulerRunning != pdFALSE )
    339a:	682a      	ldr	r2, [r5, #0]
    339c:	b12a      	cbz	r2, 33aa <vTaskSuspend+0x6a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1748
			taskENTER_CRITICAL();
    339e:	f7fe fd69 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1750
				prvResetNextTaskUnblockTime();
    33a2:	f7ff fc55 	bl	2c50 <prvResetNextTaskUnblockTime>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1752
			taskEXIT_CRITICAL();
    33a6:	f7fe fd87 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1759
		if( pxTCB == pxCurrentTCB )
    33aa:	6833      	ldr	r3, [r6, #0]
    33ac:	42a3      	cmp	r3, r4
    33ae:	d112      	bne.n	33d6 <vTaskSuspend+0x96>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1761
			if( xSchedulerRunning != pdFALSE )
    33b0:	682b      	ldr	r3, [r5, #0]
    33b2:	b18b      	cbz	r3, 33d8 <vTaskSuspend+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1764
				configASSERT( uxSchedulerSuspended == 0 );
    33b4:	4b13      	ldr	r3, [pc, #76]	; (3404 <vTaskSuspend+0xc4>)
    33b6:	681b      	ldr	r3, [r3, #0]
    33b8:	b12b      	cbz	r3, 33c6 <vTaskSuspend+0x86>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1764 (discriminator 1)
    33ba:	4913      	ldr	r1, [pc, #76]	; (3408 <vTaskSuspend+0xc8>)
    33bc:	f240 60e4 	movw	r0, #1764	; 0x6e4
    33c0:	f7fe fabc 	bl	193c <configASSERT_callback>
    33c4:	e7fe      	b.n	33c4 <vTaskSuspend+0x84>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1765
				portYIELD_WITHIN_API();
    33c6:	4b11      	ldr	r3, [pc, #68]	; (340c <vTaskSuspend+0xcc>)
    33c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    33cc:	601a      	str	r2, [r3, #0]
    33ce:	f3bf 8f4f 	dsb	sy
    33d2:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1790
	}
    33d6:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1772
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
    33d8:	4a08      	ldr	r2, [pc, #32]	; (33fc <vTaskSuspend+0xbc>)
    33da:	6811      	ldr	r1, [r2, #0]
    33dc:	4a0c      	ldr	r2, [pc, #48]	; (3410 <vTaskSuspend+0xd0>)
    33de:	6812      	ldr	r2, [r2, #0]
    33e0:	4291      	cmp	r1, r2
    33e2:	d101      	bne.n	33e8 <vTaskSuspend+0xa8>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1778
					pxCurrentTCB = NULL;
    33e4:	6033      	str	r3, [r6, #0]
    33e6:	e7f6      	b.n	33d6 <vTaskSuspend+0x96>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1790
	}
    33e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1782
					vTaskSwitchContext();
    33ec:	f7ff bf4a 	b.w	3284 <vTaskSwitchContext>
    33f0:	10001290 	.word	0x10001290
    33f4:	1000129c 	.word	0x1000129c
    33f8:	10001378 	.word	0x10001378
    33fc:	100013c8 	.word	0x100013c8
    3400:	100013c4 	.word	0x100013c4
    3404:	10001370 	.word	0x10001370
    3408:	0000b7e5 	.word	0x0000b7e5
    340c:	e000ed04 	.word	0xe000ed04
    3410:	10001368 	.word	0x10001368

00003414 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
    3414:	b510      	push	{r4, lr}
    3416:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3022
	configASSERT( pxEventList );
    3418:	b928      	cbnz	r0, 3426 <vTaskPlaceOnEventList+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3022 (discriminator 1)
    341a:	4908      	ldr	r1, [pc, #32]	; (343c <vTaskPlaceOnEventList+0x28>)
    341c:	f640 30ce 	movw	r0, #3022	; 0xbce
    3420:	f7fe fa8c 	bl	193c <configASSERT_callback>
    3424:	e7fe      	b.n	3424 <vTaskPlaceOnEventList+0x10>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    3426:	4b06      	ldr	r3, [pc, #24]	; (3440 <vTaskPlaceOnEventList+0x2c>)
    3428:	6819      	ldr	r1, [r3, #0]
    342a:	3118      	adds	r1, #24
    342c:	f7fe fe9a 	bl	2164 <vListInsert>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3430:	4620      	mov	r0, r4
    3432:	2101      	movs	r1, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3034
}
    3434:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3438:	f7ff bc84 	b.w	2d44 <prvAddCurrentTaskToDelayedList>
    343c:	0000b7ff 	.word	0x0000b7ff
    3440:	10001290 	.word	0x10001290

00003444 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3095
{
    3444:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3446:	68c3      	ldr	r3, [r0, #12]
    3448:	68dc      	ldr	r4, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
    344a:	b92c      	cbnz	r4, 3458 <xTaskRemoveFromEventList+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3113 (discriminator 1)
    344c:	4916      	ldr	r1, [pc, #88]	; (34a8 <xTaskRemoveFromEventList+0x64>)
    344e:	f640 4029 	movw	r0, #3113	; 0xc29
    3452:	f7fe fa73 	bl	193c <configASSERT_callback>
    3456:	e7fe      	b.n	3456 <xTaskRemoveFromEventList+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
    3458:	f104 0518 	add.w	r5, r4, #24
    345c:	4628      	mov	r0, r5
    345e:	f7fe fe98 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    3462:	4b12      	ldr	r3, [pc, #72]	; (34ac <xTaskRemoveFromEventList+0x68>)
    3464:	681b      	ldr	r3, [r3, #0]
    3466:	b9e3      	cbnz	r3, 34a2 <xTaskRemoveFromEventList+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    3468:	1d25      	adds	r5, r4, #4
    346a:	4628      	mov	r0, r5
    346c:	f7fe fe91 	bl	2192 <uxListRemove>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
    3470:	490f      	ldr	r1, [pc, #60]	; (34b0 <xTaskRemoveFromEventList+0x6c>)
    3472:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3474:	6808      	ldr	r0, [r1, #0]
    3476:	2301      	movs	r3, #1
    3478:	4093      	lsls	r3, r2
    347a:	4303      	orrs	r3, r0
    347c:	600b      	str	r3, [r1, #0]
    347e:	4b0d      	ldr	r3, [pc, #52]	; (34b4 <xTaskRemoveFromEventList+0x70>)
    3480:	2014      	movs	r0, #20
    3482:	4629      	mov	r1, r5
    3484:	fb00 3002 	mla	r0, r0, r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    3488:	f7fe fe60 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    348c:	4b0a      	ldr	r3, [pc, #40]	; (34b8 <xTaskRemoveFromEventList+0x74>)
    348e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3490:	681b      	ldr	r3, [r3, #0]
    3492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3494:	429a      	cmp	r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
    3496:	bf83      	ittte	hi
    3498:	4b08      	ldrhi	r3, [pc, #32]	; (34bc <xTaskRemoveFromEventList+0x78>)
    349a:	2001      	movhi	r0, #1
    349c:	6018      	strhi	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
    349e:	2000      	movls	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3159
}
    34a0:	bd38      	pop	{r3, r4, r5, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    34a2:	4629      	mov	r1, r5
    34a4:	4806      	ldr	r0, [pc, #24]	; (34c0 <xTaskRemoveFromEventList+0x7c>)
    34a6:	e7ef      	b.n	3488 <xTaskRemoveFromEventList+0x44>
    34a8:	0000b960 	.word	0x0000b960
    34ac:	10001370 	.word	0x10001370
    34b0:	10001378 	.word	0x10001378
    34b4:	1000129c 	.word	0x1000129c
    34b8:	10001290 	.word	0x10001290
    34bc:	100013e0 	.word	0x100013e0
    34c0:	100013b0 	.word	0x100013b0

000034c4 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
    34c4:	4b03      	ldr	r3, [pc, #12]	; (34d4 <vTaskInternalSetTimeOutState+0x10>)
    34c6:	681b      	ldr	r3, [r3, #0]
    34c8:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
    34ca:	4b03      	ldr	r3, [pc, #12]	; (34d8 <vTaskInternalSetTimeOutState+0x14>)
    34cc:	681b      	ldr	r3, [r3, #0]
    34ce:	6043      	str	r3, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3213
}
    34d0:	4770      	bx	lr
    34d2:	bf00      	nop
    34d4:	100013ac 	.word	0x100013ac
    34d8:	100013dc 	.word	0x100013dc

000034dc <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3217
{
    34dc:	b570      	push	{r4, r5, r6, lr}
    34de:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3220
	configASSERT( pxTimeOut );
    34e0:	4605      	mov	r5, r0
    34e2:	b928      	cbnz	r0, 34f0 <xTaskCheckForTimeOut+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3220 (discriminator 1)
    34e4:	4916      	ldr	r1, [pc, #88]	; (3540 <xTaskCheckForTimeOut+0x64>)
    34e6:	f640 4094 	movw	r0, #3220	; 0xc94
    34ea:	f7fe fa27 	bl	193c <configASSERT_callback>
    34ee:	e7fe      	b.n	34ee <xTaskCheckForTimeOut+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3221
	configASSERT( pxTicksToWait );
    34f0:	b929      	cbnz	r1, 34fe <xTaskCheckForTimeOut+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 1)
    34f2:	4914      	ldr	r1, [pc, #80]	; (3544 <xTaskCheckForTimeOut+0x68>)
    34f4:	f640 4095 	movw	r0, #3221	; 0xc95
    34f8:	f7fe fa20 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 2)
    34fc:	e7fe      	b.n	34fc <xTaskCheckForTimeOut+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
    34fe:	f7fe fcb9 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
    3502:	4b11      	ldr	r3, [pc, #68]	; (3548 <xTaskCheckForTimeOut+0x6c>)
    3504:	6819      	ldr	r1, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
    3506:	6823      	ldr	r3, [r4, #0]
    3508:	1c5a      	adds	r2, r3, #1
    350a:	d010      	beq.n	352e <xTaskCheckForTimeOut+0x52>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    350c:	480f      	ldr	r0, [pc, #60]	; (354c <xTaskCheckForTimeOut+0x70>)
    350e:	682e      	ldr	r6, [r5, #0]
    3510:	6800      	ldr	r0, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    3512:	686a      	ldr	r2, [r5, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    3514:	4286      	cmp	r6, r0
    3516:	d001      	beq.n	351c <xTaskCheckForTimeOut+0x40>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251 (discriminator 1)
    3518:	428a      	cmp	r2, r1
    351a:	d90f      	bls.n	353c <xTaskCheckForTimeOut+0x60>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    351c:	1a88      	subs	r0, r1, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
    351e:	4283      	cmp	r3, r0
    3520:	d90a      	bls.n	3538 <xTaskCheckForTimeOut+0x5c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
    3522:	1a5b      	subs	r3, r3, r1
    3524:	4413      	add	r3, r2
    3526:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
    3528:	4628      	mov	r0, r5
    352a:	f7ff ffcb 	bl	34c4 <vTaskInternalSetTimeOutState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
    352e:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
    3530:	f7fe fcc2 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3276
}
    3534:	4620      	mov	r0, r4
    3536:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
    3538:	2300      	movs	r3, #0
    353a:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
    353c:	2401      	movs	r4, #1
    353e:	e7f7      	b.n	3530 <xTaskCheckForTimeOut+0x54>
    3540:	0000b82f 	.word	0x0000b82f
    3544:	0000b885 	.word	0x0000b885
    3548:	100013dc 	.word	0x100013dc
    354c:	100013ac 	.word	0x100013ac

00003550 <vTaskMissedYield>:
vTaskMissedYield():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
    3550:	4b01      	ldr	r3, [pc, #4]	; (3558 <vTaskMissedYield+0x8>)
    3552:	2201      	movs	r2, #1
    3554:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3282
}
    3556:	4770      	bx	lr
    3558:	100013e0 	.word	0x100013e0

0000355c <vTaskGetInfo>:
vTaskGetInfo():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3610
	{
    355c:	b570      	push	{r4, r5, r6, lr}
    355e:	460c      	mov	r4, r1
    3560:	4616      	mov	r6, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3614
		pxTCB = prvGetTCBFromHandle( xTask );
    3562:	4605      	mov	r5, r0
    3564:	b908      	cbnz	r0, 356a <vTaskGetInfo+0xe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3614 (discriminator 1)
    3566:	4a1b      	ldr	r2, [pc, #108]	; (35d4 <vTaskGetInfo+0x78>)
    3568:	6815      	ldr	r5, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3616 (discriminator 4)
		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
    356a:	6025      	str	r5, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3617 (discriminator 4)
		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
    356c:	f105 0234 	add.w	r2, r5, #52	; 0x34
    3570:	6062      	str	r2, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3618 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
    3572:	6aea      	ldr	r2, [r5, #44]	; 0x2c
    3574:	6122      	str	r2, [r4, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3619 (discriminator 4)
		pxTaskStatus->pxStackBase = pxTCB->pxStack;
    3576:	6b2a      	ldr	r2, [r5, #48]	; 0x30
    3578:	61e2      	str	r2, [r4, #28]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3620 (discriminator 4)
		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
    357a:	6c2a      	ldr	r2, [r5, #64]	; 0x40
    357c:	60a2      	str	r2, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3624 (discriminator 4)
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
    357e:	6caa      	ldr	r2, [r5, #72]	; 0x48
    3580:	6162      	str	r2, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3645 (discriminator 4)
		if( eState != eInvalid )
    3582:	2b05      	cmp	r3, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3634 (discriminator 4)
			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
    3584:	6d2a      	ldr	r2, [r5, #80]	; 0x50
    3586:	61a2      	str	r2, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3645 (discriminator 4)
		if( eState != eInvalid )
    3588:	d01a      	beq.n	35c0 <vTaskGetInfo+0x64>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3647
			if( pxTCB == pxCurrentTCB )
    358a:	4a12      	ldr	r2, [pc, #72]	; (35d4 <vTaskGetInfo+0x78>)
    358c:	6812      	ldr	r2, [r2, #0]
    358e:	42aa      	cmp	r2, r5
    3590:	d10a      	bne.n	35a8 <vTaskGetInfo+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3649
				pxTaskStatus->eCurrentState = eRunning;
    3592:	2300      	movs	r3, #0
    3594:	7323      	strb	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3682
		if( xGetFreeStackSpace != pdFALSE )
    3596:	b1d6      	cbz	r6, 35ce <vTaskGetInfo+0x72>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3690
				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
    3598:	6b29      	ldr	r1, [r5, #48]	; 0x30
prvTaskCheckFreeStackSpace():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3740
	uint32_t ulCount = 0U;
    359a:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3742
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
    359c:	5cca      	ldrb	r2, [r1, r3]
    359e:	2aa5      	cmp	r2, #165	; 0xa5
    35a0:	d013      	beq.n	35ca <vTaskGetInfo+0x6e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3748
		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller architectures. */
    35a2:	089b      	lsrs	r3, r3, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3750
		return ( configSTACK_DEPTH_TYPE ) ulCount;
    35a4:	8423      	strh	r3, [r4, #32]
vTaskGetInfo():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3698
	}
    35a6:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3660
					if( eState == eSuspended )
    35a8:	2b03      	cmp	r3, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3653
				pxTaskStatus->eCurrentState = eState;
    35aa:	7323      	strb	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3660
					if( eState == eSuspended )
    35ac:	d1f3      	bne.n	3596 <vTaskGetInfo+0x3a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3662
						vTaskSuspendAll();
    35ae:	f7ff fcf7 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3664
							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    35b2:	6aab      	ldr	r3, [r5, #40]	; 0x28
    35b4:	b10b      	cbz	r3, 35ba <vTaskGetInfo+0x5e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3666
								pxTaskStatus->eCurrentState = eBlocked;
    35b6:	2302      	movs	r3, #2
    35b8:	7323      	strb	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3669
						( void ) xTaskResumeAll();
    35ba:	f7ff fd8b 	bl	30d4 <xTaskResumeAll>
    35be:	e7ea      	b.n	3596 <vTaskGetInfo+0x3a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3677
			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
    35c0:	4628      	mov	r0, r5
    35c2:	f7ff fc3b 	bl	2e3c <eTaskGetState>
    35c6:	7320      	strb	r0, [r4, #12]
    35c8:	e7e5      	b.n	3596 <vTaskGetInfo+0x3a>
prvTaskCheckFreeStackSpace():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3745
			ulCount++;
    35ca:	3301      	adds	r3, #1
    35cc:	e7e6      	b.n	359c <vTaskGetInfo+0x40>
vTaskGetInfo():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3696
			pxTaskStatus->usStackHighWaterMark = 0;
    35ce:	8426      	strh	r6, [r4, #32]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3698
	}
    35d0:	e7e9      	b.n	35a6 <vTaskGetInfo+0x4a>
    35d2:	bf00      	nop
    35d4:	10001290 	.word	0x10001290

000035d8 <prvListTasksWithinSingleList>:
prvListTasksWithinSingleList():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3706
	{
    35d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3710
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    35dc:	680d      	ldr	r5, [r1, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3706
	{
    35de:	4681      	mov	r9, r0
    35e0:	460c      	mov	r4, r1
    35e2:	4693      	mov	fp, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3710
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    35e4:	b315      	cbz	r5, 362c <prvListTasksWithinSingleList+0x54>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3712
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    35e6:	684b      	ldr	r3, [r1, #4]
    35e8:	685b      	ldr	r3, [r3, #4]
    35ea:	604b      	str	r3, [r1, #4]
    35ec:	f101 0608 	add.w	r6, r1, #8
    35f0:	42b3      	cmp	r3, r6
    35f2:	bf04      	itt	eq
    35f4:	68cb      	ldreq	r3, [r1, #12]
    35f6:	604b      	streq	r3, [r1, #4]
    35f8:	684b      	ldr	r3, [r1, #4]
    35fa:	f8d3 800c 	ldr.w	r8, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3708
	UBaseType_t uxTask = 0;
    35fe:	2500      	movs	r5, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3721
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
    3600:	f04f 0a24 	mov.w	sl, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3720
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3604:	6863      	ldr	r3, [r4, #4]
    3606:	685b      	ldr	r3, [r3, #4]
    3608:	6063      	str	r3, [r4, #4]
    360a:	429e      	cmp	r6, r3
    360c:	bf04      	itt	eq
    360e:	6873      	ldreq	r3, [r6, #4]
    3610:	6063      	streq	r3, [r4, #4]
    3612:	6863      	ldr	r3, [r4, #4]
    3614:	68df      	ldr	r7, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3721
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
    3616:	fb0a 9105 	mla	r1, sl, r5, r9
    361a:	465b      	mov	r3, fp
    361c:	2201      	movs	r2, #1
    361e:	4638      	mov	r0, r7
    3620:	f7ff ff9c 	bl	355c <vTaskGetInfo>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3723
			} while( pxNextTCB != pxFirstTCB );
    3624:	45b8      	cmp	r8, r7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3722
				uxTask++;
    3626:	f105 0501 	add.w	r5, r5, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3723
			} while( pxNextTCB != pxFirstTCB );
    362a:	d1eb      	bne.n	3604 <prvListTasksWithinSingleList+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3731
	}
    362c:	4628      	mov	r0, r5
    362e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3632:	Address 0x0000000000003632 is out of bounds.


00003634 <uxTaskGetSystemState>:
uxTaskGetSystemState():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2486
	{
    3634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    3638:	4605      	mov	r5, r0
    363a:	4690      	mov	r8, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2489
		vTaskSuspendAll();
    363c:	f7ff fcb0 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2492
			if( uxArraySize >= uxCurrentNumberOfTasks )
    3640:	4b1d      	ldr	r3, [pc, #116]	; (36b8 <uxTaskGetSystemState+0x84>)
    3642:	681b      	ldr	r3, [r3, #0]
    3644:	428b      	cmp	r3, r1
    3646:	d834      	bhi.n	36b2 <uxTaskGetSystemState+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2499
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    3648:	f8df 907c 	ldr.w	r9, [pc, #124]	; 36c8 <uxTaskGetSystemState+0x94>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2487
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
    364c:	270a      	movs	r7, #10
    364e:	2400      	movs	r4, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2499
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    3650:	f04f 0a14 	mov.w	sl, #20
    3654:	2624      	movs	r6, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2498 (discriminator 1)
					uxQueue--;
    3656:	3f01      	subs	r7, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2499 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    3658:	fb06 5004 	mla	r0, r6, r4, r5
    365c:	2201      	movs	r2, #1
    365e:	fb0a 9107 	mla	r1, sl, r7, r9
    3662:	f7ff ffb9 	bl	35d8 <prvListTasksWithinSingleList>
    3666:	4404      	add	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2501 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3668:	2f00      	cmp	r7, #0
    366a:	d1f4      	bne.n	3656 <uxTaskGetSystemState+0x22>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2505
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
    366c:	4b13      	ldr	r3, [pc, #76]	; (36bc <uxTaskGetSystemState+0x88>)
    366e:	2202      	movs	r2, #2
    3670:	6819      	ldr	r1, [r3, #0]
    3672:	fb06 5004 	mla	r0, r6, r4, r5
    3676:	f7ff ffaf 	bl	35d8 <prvListTasksWithinSingleList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2506
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
    367a:	4b11      	ldr	r3, [pc, #68]	; (36c0 <uxTaskGetSystemState+0x8c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2505
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
    367c:	4404      	add	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2506
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
    367e:	6819      	ldr	r1, [r3, #0]
    3680:	2202      	movs	r2, #2
    3682:	fb06 5004 	mla	r0, r6, r4, r5
    3686:	f7ff ffa7 	bl	35d8 <prvListTasksWithinSingleList>
    368a:	4404      	add	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2520
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
    368c:	fb06 5004 	mla	r0, r6, r4, r5
    3690:	2203      	movs	r2, #3
    3692:	490c      	ldr	r1, [pc, #48]	; (36c4 <uxTaskGetSystemState+0x90>)
    3694:	f7ff ffa0 	bl	35d8 <prvListTasksWithinSingleList>
    3698:	4404      	add	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2526
					if( pulTotalRunTime != NULL )
    369a:	f1b8 0f00 	cmp.w	r8, #0
    369e:	d003      	beq.n	36a8 <uxTaskGetSystemState+0x74>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2531
							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    36a0:	f7fe f978 	bl	1994 <freertos_hooks__get_run_time_counter_value>
    36a4:	f8c8 0000 	str.w	r0, [r8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2549
		( void ) xTaskResumeAll();
    36a8:	f7ff fd14 	bl	30d4 <xTaskResumeAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2552
	}
    36ac:	4620      	mov	r0, r4
    36ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2487
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
    36b2:	2400      	movs	r4, #0
    36b4:	e7f8      	b.n	36a8 <uxTaskGetSystemState+0x74>
    36b6:	bf00      	nop
    36b8:	10001368 	.word	0x10001368
    36bc:	10001294 	.word	0x10001294
    36c0:	10001298 	.word	0x10001298
    36c4:	100013c8 	.word	0x100013c8
    36c8:	1000129c 	.word	0x1000129c

000036cc <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
    36cc:	4b05      	ldr	r3, [pc, #20]	; (36e4 <xTaskGetSchedulerState+0x18>)
    36ce:	681b      	ldr	r3, [r3, #0]
    36d0:	b133      	cbz	r3, 36e0 <xTaskGetSchedulerState+0x14>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    36d2:	4b05      	ldr	r3, [pc, #20]	; (36e8 <xTaskGetSchedulerState+0x1c>)
    36d4:	681b      	ldr	r3, [r3, #0]
    36d6:	2b00      	cmp	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
    36d8:	bf0c      	ite	eq
    36da:	2002      	moveq	r0, #2
    36dc:	2000      	movne	r0, #0
    36de:	4770      	bx	lr
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
    36e0:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3944
	}
    36e2:	4770      	bx	lr
    36e4:	100013c4 	.word	0x100013c4
    36e8:	10001370 	.word	0x10001370

000036ec <xTaskPriorityInherit>:
xTaskPriorityInherit():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3952
	{
    36ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3959
		if( pxMutexHolder != NULL )
    36f0:	4604      	mov	r4, r0
    36f2:	2800      	cmp	r0, #0
    36f4:	d035      	beq.n	3762 <xTaskPriorityInherit+0x76>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
    36f6:	4a23      	ldr	r2, [pc, #140]	; (3784 <xTaskPriorityInherit+0x98>)
    36f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    36fa:	6811      	ldr	r1, [r2, #0]
    36fc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    36fe:	428b      	cmp	r3, r1
    3700:	4617      	mov	r7, r2
    3702:	d236      	bcs.n	3772 <xTaskPriorityInherit+0x86>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3704:	6982      	ldr	r2, [r0, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    3706:	4d20      	ldr	r5, [pc, #128]	; (3788 <xTaskPriorityInherit+0x9c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3708:	2a00      	cmp	r2, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    370a:	bfa1      	itttt	ge
    370c:	683a      	ldrge	r2, [r7, #0]
    370e:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
    3710:	f1c2 020a 	rsbge	r2, r2, #10
    3714:	6182      	strge	r2, [r0, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    3716:	2614      	movs	r6, #20
    3718:	6942      	ldr	r2, [r0, #20]
    371a:	fb06 5303 	mla	r3, r6, r3, r5
    371e:	429a      	cmp	r2, r3
    3720:	d121      	bne.n	3766 <xTaskPriorityInherit+0x7a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3722:	f100 0804 	add.w	r8, r0, #4
    3726:	4640      	mov	r0, r8
    3728:	f7fe fd33 	bl	2192 <uxListRemove>
    372c:	4b17      	ldr	r3, [pc, #92]	; (378c <xTaskPriorityInherit+0xa0>)
    372e:	b948      	cbnz	r0, 3744 <xTaskPriorityInherit+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
    3730:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    3732:	4346      	muls	r6, r0
    3734:	59aa      	ldr	r2, [r5, r6]
    3736:	b92a      	cbnz	r2, 3744 <xTaskPriorityInherit+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3984 (discriminator 1)
    3738:	681a      	ldr	r2, [r3, #0]
    373a:	2101      	movs	r1, #1
    373c:	4081      	lsls	r1, r0
    373e:	ea22 0201 	bic.w	r2, r2, r1
    3742:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3744:	683a      	ldr	r2, [r7, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    3746:	6819      	ldr	r1, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3748:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    374a:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    374c:	2401      	movs	r4, #1
    374e:	fa04 f002 	lsl.w	r0, r4, r2
    3752:	4308      	orrs	r0, r1
    3754:	6018      	str	r0, [r3, #0]
    3756:	2014      	movs	r0, #20
    3758:	4641      	mov	r1, r8
    375a:	fb00 5002 	mla	r0, r0, r2, r5
    375e:	f7fe fcf5 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
    3762:	4620      	mov	r0, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4030
		return xReturn;
    3764:	e003      	b.n	376e <xTaskPriorityInherit+0x82>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3766:	683b      	ldr	r3, [r7, #0]
    3768:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    376a:	62c3      	str	r3, [r0, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4004
				xReturn = pdTRUE;
    376c:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4031
	}
    376e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    3772:	6813      	ldr	r3, [r2, #0]
    3774:	6c80      	ldr	r0, [r0, #72]	; 0x48
    3776:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    3778:	42a0      	cmp	r0, r4
    377a:	bf2c      	ite	cs
    377c:	2000      	movcs	r0, #0
    377e:	2001      	movcc	r0, #1
    3780:	e7f5      	b.n	376e <xTaskPriorityInherit+0x82>
    3782:	bf00      	nop
    3784:	10001290 	.word	0x10001290
    3788:	1000129c 	.word	0x1000129c
    378c:	10001378 	.word	0x10001378

00003790 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4039
	{
    3790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
    3792:	4604      	mov	r4, r0
    3794:	b908      	cbnz	r0, 379a <xTaskPriorityDisinherit+0xa>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    3796:	2000      	movs	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4111
	}
    3798:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
    379a:	4b1f      	ldr	r3, [pc, #124]	; (3818 <xTaskPriorityDisinherit+0x88>)
    379c:	681b      	ldr	r3, [r3, #0]
    379e:	4283      	cmp	r3, r0
    37a0:	d005      	beq.n	37ae <xTaskPriorityDisinherit+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4049 (discriminator 1)
    37a2:	491e      	ldr	r1, [pc, #120]	; (381c <xTaskPriorityDisinherit+0x8c>)
    37a4:	f640 70d1 	movw	r0, #4049	; 0xfd1
    37a8:	f7fe f8c8 	bl	193c <configASSERT_callback>
    37ac:	e7fe      	b.n	37ac <xTaskPriorityDisinherit+0x1c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
    37ae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    37b0:	b92b      	cbnz	r3, 37be <xTaskPriorityDisinherit+0x2e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 1)
    37b2:	491b      	ldr	r1, [pc, #108]	; (3820 <xTaskPriorityDisinherit+0x90>)
    37b4:	f640 70d2 	movw	r0, #4050	; 0xfd2
    37b8:	f7fe f8c0 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 2)
    37bc:	e7fe      	b.n	37bc <xTaskPriorityDisinherit+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    37be:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    37c0:	6c82      	ldr	r2, [r0, #72]	; 0x48
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    37c2:	3b01      	subs	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    37c4:	4291      	cmp	r1, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    37c6:	64c3      	str	r3, [r0, #76]	; 0x4c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    37c8:	d0e5      	beq.n	3796 <xTaskPriorityDisinherit+0x6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    37ca:	2b00      	cmp	r3, #0
    37cc:	d1e3      	bne.n	3796 <xTaskPriorityDisinherit+0x6>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    37ce:	1d05      	adds	r5, r0, #4
    37d0:	4628      	mov	r0, r5
    37d2:	f7fe fcde 	bl	2192 <uxListRemove>
    37d6:	4e13      	ldr	r6, [pc, #76]	; (3824 <xTaskPriorityDisinherit+0x94>)
    37d8:	4a13      	ldr	r2, [pc, #76]	; (3828 <xTaskPriorityDisinherit+0x98>)
    37da:	b950      	cbnz	r0, 37f2 <xTaskPriorityDisinherit+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    37dc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    37de:	2114      	movs	r1, #20
    37e0:	4379      	muls	r1, r7
    37e2:	5873      	ldr	r3, [r6, r1]
    37e4:	b92b      	cbnz	r3, 37f2 <xTaskPriorityDisinherit+0x62>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4067 (discriminator 1)
    37e6:	6813      	ldr	r3, [r2, #0]
    37e8:	2001      	movs	r0, #1
    37ea:	40b8      	lsls	r0, r7
    37ec:	ea23 0300 	bic.w	r3, r3, r0
    37f0:	6013      	str	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    37f2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    37f4:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    37f6:	f1c3 010a 	rsb	r1, r3, #10
    37fa:	61a1      	str	r1, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    37fc:	6811      	ldr	r1, [r2, #0]
    37fe:	2401      	movs	r4, #1
    3800:	fa04 f003 	lsl.w	r0, r4, r3
    3804:	4308      	orrs	r0, r1
    3806:	6010      	str	r0, [r2, #0]
    3808:	2014      	movs	r0, #20
    380a:	fb00 6003 	mla	r0, r0, r3, r6
    380e:	4629      	mov	r1, r5
    3810:	f7fe fc9c 	bl	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
    3814:	4620      	mov	r0, r4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4110
		return xReturn;
    3816:	e7bf      	b.n	3798 <xTaskPriorityDisinherit+0x8>
    3818:	10001290 	.word	0x10001290
    381c:	0000b935 	.word	0x0000b935
    3820:	0000b94b 	.word	0x0000b94b
    3824:	1000129c 	.word	0x1000129c
    3828:	10001378 	.word	0x10001378

0000382c <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4119
	{
    382c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4124
		if( pxMutexHolder != NULL )
    382e:	4604      	mov	r4, r0
    3830:	2800      	cmp	r0, #0
    3832:	d047      	beq.n	38c4 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4128
			configASSERT( pxTCB->uxMutexesHeld );
    3834:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    3836:	b92a      	cbnz	r2, 3844 <vTaskPriorityDisinheritAfterTimeout+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4128 (discriminator 1)
    3838:	4923      	ldr	r1, [pc, #140]	; (38c8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
    383a:	f44f 5081 	mov.w	r0, #4128	; 0x1020
    383e:	f7fe f87d 	bl	193c <configASSERT_callback>
    3842:	e7fe      	b.n	3842 <vTaskPriorityDisinheritAfterTimeout+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    3844:	6c83      	ldr	r3, [r0, #72]	; 0x48
    3846:	4299      	cmp	r1, r3
    3848:	bf38      	it	cc
    384a:	4619      	movcc	r1, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    384c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    384e:	428b      	cmp	r3, r1
    3850:	d038      	beq.n	38c4 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    3852:	2a01      	cmp	r2, #1
    3854:	d136      	bne.n	38c4 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4155
					configASSERT( pxTCB != pxCurrentTCB );
    3856:	4a1d      	ldr	r2, [pc, #116]	; (38cc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
    3858:	6812      	ldr	r2, [r2, #0]
    385a:	4282      	cmp	r2, r0
    385c:	d105      	bne.n	386a <vTaskPriorityDisinheritAfterTimeout+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 1)
    385e:	491c      	ldr	r1, [pc, #112]	; (38d0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
    3860:	f241 003b 	movw	r0, #4155	; 0x103b
    3864:	f7fe f86a 	bl	193c <configASSERT_callback>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 2)
    3868:	e7fe      	b.n	3868 <vTaskPriorityDisinheritAfterTimeout+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    386a:	6982      	ldr	r2, [r0, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    386c:	4d19      	ldr	r5, [pc, #100]	; (38d4 <vTaskPriorityDisinheritAfterTimeout+0xa8>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    386e:	62c1      	str	r1, [r0, #44]	; 0x2c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3870:	2a00      	cmp	r2, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3872:	f04f 0614 	mov.w	r6, #20
    3876:	6942      	ldr	r2, [r0, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3878:	bfa8      	it	ge
    387a:	f1c1 010a 	rsbge	r1, r1, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    387e:	fb06 5303 	mla	r3, r6, r3, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3882:	bfa8      	it	ge
    3884:	6181      	strge	r1, [r0, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3886:	429a      	cmp	r2, r3
    3888:	d11c      	bne.n	38c4 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    388a:	1d07      	adds	r7, r0, #4
    388c:	4638      	mov	r0, r7
    388e:	f7fe fc80 	bl	2192 <uxListRemove>
    3892:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3894:	4c10      	ldr	r4, [pc, #64]	; (38d8 <vTaskPriorityDisinheritAfterTimeout+0xac>)
    3896:	b940      	cbnz	r0, 38aa <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3898:	4356      	muls	r6, r2
    389a:	59ab      	ldr	r3, [r5, r6]
    389c:	b92b      	cbnz	r3, 38aa <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4185 (discriminator 1)
    389e:	6823      	ldr	r3, [r4, #0]
    38a0:	2101      	movs	r1, #1
    38a2:	4091      	lsls	r1, r2
    38a4:	ea23 0301 	bic.w	r3, r3, r1
    38a8:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    38aa:	6821      	ldr	r1, [r4, #0]
    38ac:	2301      	movs	r3, #1
    38ae:	4093      	lsls	r3, r2
    38b0:	430b      	orrs	r3, r1
    38b2:	2014      	movs	r0, #20
    38b4:	6023      	str	r3, [r4, #0]
    38b6:	4639      	mov	r1, r7
    38b8:	fb00 5002 	mla	r0, r0, r2, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    38bc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    38c0:	f7fe bc44 	b.w	214c <vListInsertEnd>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    38c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    38c6:	bf00      	nop
    38c8:	0000b94b 	.word	0x0000b94b
    38cc:	10001290 	.word	0x10001290
    38d0:	0000b80b 	.word	0x0000b80b
    38d4:	1000129c 	.word	0x1000129c
    38d8:	10001378 	.word	0x10001378

000038dc <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    38dc:	4b04      	ldr	r3, [pc, #16]	; (38f0 <pvTaskIncrementMutexHeldCount+0x14>)
    38de:	681a      	ldr	r2, [r3, #0]
    38e0:	b11a      	cbz	r2, 38ea <pvTaskIncrementMutexHeldCount+0xe>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    38e2:	6819      	ldr	r1, [r3, #0]
    38e4:	6cca      	ldr	r2, [r1, #76]	; 0x4c
    38e6:	3201      	adds	r2, #1
    38e8:	64ca      	str	r2, [r1, #76]	; 0x4c
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4558
		return pxCurrentTCB;
    38ea:	6818      	ldr	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4559
	}
    38ec:	4770      	bx	lr
    38ee:	bf00      	nop
    38f0:	10001290 	.word	0x10001290

000038f4 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:34

void vTaskResetRunTimeStats(void) {
    38f4:	b570      	push	{r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:36
  BaseType_t uxQueue = configMAX_PRIORITIES;
  vTaskSuspendAll();
    38f6:	f7ff fb53 	bl	2fa0 <vTaskSuspendAll>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:40
  {
    do {
      uxQueue--;
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    38fa:	4d14      	ldr	r5, [pc, #80]	; (394c <vTaskResetRunTimeStats+0x58>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:35
  BaseType_t uxQueue = configMAX_PRIORITIES;
    38fc:	240a      	movs	r4, #10
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:40
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    38fe:	2614      	movs	r6, #20
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:39
      uxQueue--;
    3900:	3c01      	subs	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:40
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    3902:	fb06 f304 	mul.w	r3, r6, r4
    3906:	18e8      	adds	r0, r5, r3
    3908:	58eb      	ldr	r3, [r5, r3]
    390a:	b10b      	cbz	r3, 3910 <vTaskResetRunTimeStats+0x1c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:41
        prvResetRunTimeStatsInList((List_t *)&(pxReadyTasksLists[uxQueue]));
    390c:	f7ff f8fa 	bl	2b04 <prvResetRunTimeStatsInList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:43
      }
    } while (uxQueue > (unsigned portBASE_TYPE)tskIDLE_PRIORITY);
    3910:	2c00      	cmp	r4, #0
    3912:	d1f5      	bne.n	3900 <vTaskResetRunTimeStats+0xc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:45

    if (listLIST_IS_EMPTY(pxDelayedTaskList) == pdFALSE) {
    3914:	4b0e      	ldr	r3, [pc, #56]	; (3950 <vTaskResetRunTimeStats+0x5c>)
    3916:	681a      	ldr	r2, [r3, #0]
    3918:	6812      	ldr	r2, [r2, #0]
    391a:	b112      	cbz	r2, 3922 <vTaskResetRunTimeStats+0x2e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:46
      prvResetRunTimeStatsInList((List_t *)pxDelayedTaskList);
    391c:	6818      	ldr	r0, [r3, #0]
    391e:	f7ff f8f1 	bl	2b04 <prvResetRunTimeStatsInList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:49
    }

    if (listLIST_IS_EMPTY(pxOverflowDelayedTaskList) == pdFALSE) {
    3922:	4b0c      	ldr	r3, [pc, #48]	; (3954 <vTaskResetRunTimeStats+0x60>)
    3924:	681a      	ldr	r2, [r3, #0]
    3926:	6812      	ldr	r2, [r2, #0]
    3928:	b112      	cbz	r2, 3930 <vTaskResetRunTimeStats+0x3c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:50
      prvResetRunTimeStatsInList((List_t *)pxOverflowDelayedTaskList);
    392a:	6818      	ldr	r0, [r3, #0]
    392c:	f7ff f8ea 	bl	2b04 <prvResetRunTimeStatsInList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:63
    }
#endif

#if (INCLUDE_vTaskSuspend == 1)
    {
      if (listLIST_IS_EMPTY(&xSuspendedTaskList) == pdFALSE) {
    3930:	4809      	ldr	r0, [pc, #36]	; (3958 <vTaskResetRunTimeStats+0x64>)
    3932:	6803      	ldr	r3, [r0, #0]
    3934:	b10b      	cbz	r3, 393a <vTaskResetRunTimeStats+0x46>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:64
        prvResetRunTimeStatsInList((List_t *)&xSuspendedTaskList);
    3936:	f7ff f8e5 	bl	2b04 <prvResetRunTimeStatsInList>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:68
      }
    }
#endif
    ulTaskSwitchedInTime = 0;
    393a:	4b08      	ldr	r3, [pc, #32]	; (395c <vTaskResetRunTimeStats+0x68>)
    393c:	2200      	movs	r2, #0
    393e:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:69
    portRESET_TIMER_FOR_RUN_TIME_STATS();
    3940:	f7fe f832 	bl	19a8 <freertos_hooks__reset_run_time_stats>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:72
  }
  xTaskResumeAll();
}
    3944:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:71
  xTaskResumeAll();
    3948:	f7ff bbc4 	b.w	30d4 <xTaskResumeAll>
    394c:	1000129c 	.word	0x1000129c
    3950:	10001294 	.word	0x10001294
    3954:	10001298 	.word	0x10001298
    3958:	100013c8 	.word	0x100013c8
    395c:	10001364 	.word	0x10001364

00003960 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:74

void vRunTimeStatIsrEntry(void) {
    3960:	b510      	push	{r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:75
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    3962:	f7fe f817 	bl	1994 <freertos_hooks__get_run_time_counter_value>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:78

  // Add the time spent in the previously running task's counter.
  if (NULL != pxCurrentTCB) {
    3966:	4b06      	ldr	r3, [pc, #24]	; (3980 <vRunTimeStatIsrEntry+0x20>)
    3968:	4a06      	ldr	r2, [pc, #24]	; (3984 <vRunTimeStatIsrEntry+0x24>)
    396a:	6819      	ldr	r1, [r3, #0]
    396c:	b129      	cbz	r1, 397a <vRunTimeStatIsrEntry+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:79
    pxCurrentTCB->ulRunTimeCounter += (ulTempCounter - ulTaskSwitchedInTime);
    396e:	6819      	ldr	r1, [r3, #0]
    3970:	6814      	ldr	r4, [r2, #0]
    3972:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    3974:	1b1b      	subs	r3, r3, r4
    3976:	4403      	add	r3, r0
    3978:	650b      	str	r3, [r1, #80]	; 0x50
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:83
  }

  // Save the current time to log how long the ISR is going to take.
  ulTaskSwitchedInTime = ulTempCounter;
    397a:	6010      	str	r0, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:84
}
    397c:	bd10      	pop	{r4, pc}
    397e:	bf00      	nop
    3980:	10001290 	.word	0x10001290
    3984:	10001364 	.word	0x10001364

00003988 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:85
void vRunTimeStatIsrExit(void) {
    3988:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:86
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    398a:	f7fe f803 	bl	1994 <freertos_hooks__get_run_time_counter_value>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:94
  // We don't need this because whatever is the "leftover" for the counters, that is
  // is the overhead itself!
  // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );

  // Save the current time so next time when task is switched out, it will use this time-stamp.
  ulTaskSwitchedInTime = ulTempCounter;
    398e:	4b01      	ldr	r3, [pc, #4]	; (3994 <vRunTimeStatIsrExit+0xc>)
    3990:	6018      	str	r0, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:95
}
    3992:	bd08      	pop	{r3, pc}
    3994:	10001364 	.word	0x10001364

00003998 <board_io__initialize>:
board_io__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:35

static const uint32_t board_io__sd_card_cs_pin = (1 << 8);
static const uint32_t board_io__sd_card_detect_pin = (1 << 9);
static gpio_s board_io__led0, board_io__led1, board_io__led2, board_io__led3;

void board_io__initialize(void) {
    3998:	b507      	push	{r0, r1, r2, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:38
  // Note: return type of gpio__construct_with_function() because we do not need GPIO instance after its configuration

  gpio__construct_with_function(GPIO__PORT_0, 2, GPIO__FUNCTION_1); // P0.2 - Uart-0 Tx
    399a:	2201      	movs	r2, #1
    399c:	2102      	movs	r1, #2
    399e:	2000      	movs	r0, #0
    39a0:	f000 f8f4 	bl	3b8c <gpio__construct_with_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:39
  gpio__construct_with_function(GPIO__PORT_0, 3, GPIO__FUNCTION_1); // P0.3 - Uart-0 Rx
    39a4:	2201      	movs	r2, #1
    39a6:	2103      	movs	r1, #3
    39a8:	2000      	movs	r0, #0
    39aa:	f000 f8ef 	bl	3b8c <gpio__construct_with_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:42

  // SPI bus 2 (SSP2)
  gpio__construct_with_function(GPIO__PORT_1, 0, GPIO__FUNCTION_4); // P1.0 - SCK2
    39ae:	2204      	movs	r2, #4
    39b0:	2100      	movs	r1, #0
    39b2:	2001      	movs	r0, #1
    39b4:	f000 f8ea 	bl	3b8c <gpio__construct_with_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:43
  gpio__construct_with_function(GPIO__PORT_1, 1, GPIO__FUNCTION_4); // P1.1 - MOSI2
    39b8:	2101      	movs	r1, #1
    39ba:	2204      	movs	r2, #4
    39bc:	4608      	mov	r0, r1
    39be:	f000 f8e5 	bl	3b8c <gpio__construct_with_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:44
  gpio__construct_with_function(GPIO__PORT_1, 4, GPIO__FUNCTION_4); // P1.4 - MISO2
    39c2:	2204      	movs	r2, #4
    39c4:	4611      	mov	r1, r2
    39c6:	2001      	movs	r0, #1
    39c8:	f000 f8e0 	bl	3b8c <gpio__construct_with_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:47

  // SD card
  gpio__construct_as_output(GPIO__PORT_1, 8); // SD card CS
    39cc:	2108      	movs	r1, #8
    39ce:	2001      	movs	r0, #1
    39d0:	f000 f932 	bl	3c38 <gpio__construct_as_output>
board_io__sd_card_ds():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:72
  gpio__construct_as_input(GPIO__PORT_0, 29); // SW0
}

// Note: Not using gpio.h API here to optimize the speed of SSP CS selection
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    39d4:	4b2b      	ldr	r3, [pc, #172]	; (3a84 <board_io__initialize+0xec>)
    39d6:	f44f 7280 	mov.w	r2, #256	; 0x100
    39da:	619a      	str	r2, [r3, #24]
board_io__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:49
  gpio__construct_as_input(GPIO__PORT_1, 9); // SD card detect
    39dc:	2109      	movs	r1, #9
    39de:	2001      	movs	r0, #1
    39e0:	f000 f90a 	bl	3bf8 <gpio__construct_as_input>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:52
  const gpio_s sda_2 = gpio__construct_with_function(GPIO__PORT_0, 10, GPIO__FUNCTION_2); // P0.10 - SDA
    39e4:	2202      	movs	r2, #2
    39e6:	210a      	movs	r1, #10
    39e8:	2000      	movs	r0, #0
    39ea:	f000 f8cf 	bl	3b8c <gpio__construct_with_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:53
  const gpio_s scl_2 = gpio__construct_with_function(GPIO__PORT_0, 11, GPIO__FUNCTION_2); // P0.11 - SCL
    39ee:	2202      	movs	r2, #2
    39f0:	210b      	movs	r1, #11
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:52
  const gpio_s sda_2 = gpio__construct_with_function(GPIO__PORT_0, 10, GPIO__FUNCTION_2); // P0.10 - SDA
    39f2:	f8ad 0000 	strh.w	r0, [sp]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:53
  const gpio_s scl_2 = gpio__construct_with_function(GPIO__PORT_0, 11, GPIO__FUNCTION_2); // P0.11 - SCL
    39f6:	2000      	movs	r0, #0
    39f8:	f000 f8c8 	bl	3b8c <gpio__construct_with_function>
    39fc:	f8ad 0004 	strh.w	r0, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:54
  gpio__enable_open_drain(sda_2);
    3a00:	9800      	ldr	r0, [sp, #0]
    3a02:	f000 f8d2 	bl	3baa <gpio__enable_open_drain>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:55
  gpio__enable_open_drain(scl_2);
    3a06:	9801      	ldr	r0, [sp, #4]
    3a08:	f000 f8cf 	bl	3baa <gpio__enable_open_drain>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:58
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_2, 3);
    3a0c:	2103      	movs	r1, #3
    3a0e:	2002      	movs	r0, #2
    3a10:	f000 f912 	bl	3c38 <gpio__construct_as_output>
    3a14:	4b1c      	ldr	r3, [pc, #112]	; (3a88 <board_io__initialize+0xf0>)
    3a16:	b200      	sxth	r0, r0
    3a18:	7018      	strb	r0, [r3, #0]
    3a1a:	f3c0 2007 	ubfx	r0, r0, #8, #8
    3a1e:	7058      	strb	r0, [r3, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 26);
    3a20:	211a      	movs	r1, #26
    3a22:	2001      	movs	r0, #1
    3a24:	f000 f908 	bl	3c38 <gpio__construct_as_output>
    3a28:	4b18      	ldr	r3, [pc, #96]	; (3a8c <board_io__initialize+0xf4>)
    3a2a:	b200      	sxth	r0, r0
    3a2c:	7018      	strb	r0, [r3, #0]
    3a2e:	f3c0 2007 	ubfx	r0, r0, #8, #8
    3a32:	7058      	strb	r0, [r3, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:60
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 24);
    3a34:	2118      	movs	r1, #24
    3a36:	2001      	movs	r0, #1
    3a38:	f000 f8fe 	bl	3c38 <gpio__construct_as_output>
    3a3c:	4b14      	ldr	r3, [pc, #80]	; (3a90 <board_io__initialize+0xf8>)
    3a3e:	b200      	sxth	r0, r0
    3a40:	7018      	strb	r0, [r3, #0]
    3a42:	f3c0 2007 	ubfx	r0, r0, #8, #8
    3a46:	7058      	strb	r0, [r3, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_1, 18);
    3a48:	2112      	movs	r1, #18
    3a4a:	2001      	movs	r0, #1
    3a4c:	f000 f8f4 	bl	3c38 <gpio__construct_as_output>
    3a50:	4b10      	ldr	r3, [pc, #64]	; (3a94 <board_io__initialize+0xfc>)
    3a52:	b200      	sxth	r0, r0
    3a54:	7018      	strb	r0, [r3, #0]
    3a56:	f3c0 2007 	ubfx	r0, r0, #8, #8
    3a5a:	7058      	strb	r0, [r3, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:64
  gpio__construct_as_input(GPIO__PORT_1, 10); // SW3
    3a5c:	210a      	movs	r1, #10
    3a5e:	2001      	movs	r0, #1
    3a60:	f000 f8ca 	bl	3bf8 <gpio__construct_as_input>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:65
  gpio__construct_as_input(GPIO__PORT_1, 15); // SW2
    3a64:	210f      	movs	r1, #15
    3a66:	2001      	movs	r0, #1
    3a68:	f000 f8c6 	bl	3bf8 <gpio__construct_as_input>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:66
  gpio__construct_as_input(GPIO__PORT_0, 30); // SW1
    3a6c:	211e      	movs	r1, #30
    3a6e:	2000      	movs	r0, #0
    3a70:	f000 f8c2 	bl	3bf8 <gpio__construct_as_input>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  gpio__construct_as_input(GPIO__PORT_0, 29); // SW0
    3a74:	211d      	movs	r1, #29
    3a76:	2000      	movs	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
}
    3a78:	b003      	add	sp, #12
    3a7a:	f85d eb04 	ldr.w	lr, [sp], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  gpio__construct_as_input(GPIO__PORT_0, 29); // SW0
    3a7e:	f000 b8bb 	b.w	3bf8 <gpio__construct_as_input>
    3a82:	bf00      	nop
    3a84:	20098020 	.word	0x20098020
    3a88:	100013ea 	.word	0x100013ea
    3a8c:	100013e8 	.word	0x100013e8
    3a90:	100013e6 	.word	0x100013e6
    3a94:	100013e4 	.word	0x100013e4

00003a98 <board_io__sd_card_cs>:
board_io__sd_card_cs():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:71
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
    3a98:	4b02      	ldr	r3, [pc, #8]	; (3aa4 <board_io__sd_card_cs+0xc>)
    3a9a:	f44f 7280 	mov.w	r2, #256	; 0x100
    3a9e:	61da      	str	r2, [r3, #28]
    3aa0:	4770      	bx	lr
    3aa2:	bf00      	nop
    3aa4:	20098020 	.word	0x20098020

00003aa8 <board_io__sd_card_ds>:
board_io__sd_card_ds():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:72
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    3aa8:	4b02      	ldr	r3, [pc, #8]	; (3ab4 <board_io__sd_card_ds+0xc>)
    3aaa:	f44f 7280 	mov.w	r2, #256	; 0x100
    3aae:	619a      	str	r2, [r3, #24]
    3ab0:	4770      	bx	lr
    3ab2:	bf00      	nop
    3ab4:	20098020 	.word	0x20098020

00003ab8 <board_io__sd_card_is_present>:
board_io__sd_card_is_present():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:75

bool board_io__sd_card_is_present(void) {
  const uint32_t card_present_bitmask = (LPC_GPIO1->PIN & board_io__sd_card_detect_pin);
    3ab8:	4b03      	ldr	r3, [pc, #12]	; (3ac8 <board_io__sd_card_is_present+0x10>)
    3aba:	6958      	ldr	r0, [r3, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:76
  return (0 == card_present_bitmask); // Signal is active low
    3abc:	f480 7000 	eor.w	r0, r0, #512	; 0x200
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:77
}
    3ac0:	f3c0 2040 	ubfx	r0, r0, #9, #1
    3ac4:	4770      	bx	lr
    3ac6:	bf00      	nop
    3ac8:	20098020 	.word	0x20098020

00003acc <board_io__get_led0>:
board_io__get_led0():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:79

gpio_s board_io__get_led0(void) { return board_io__led0; }
    3acc:	4b07      	ldr	r3, [pc, #28]	; (3aec <board_io__get_led0+0x20>)
    3ace:	b082      	sub	sp, #8
    3ad0:	881b      	ldrh	r3, [r3, #0]
    3ad2:	f8ad 3004 	strh.w	r3, [sp, #4]
    3ad6:	f89d 3004 	ldrb.w	r3, [sp, #4]
    3ada:	2000      	movs	r0, #0
    3adc:	f363 0007 	bfi	r0, r3, #0, #8
    3ae0:	f89d 3005 	ldrb.w	r3, [sp, #5]
    3ae4:	f363 200f 	bfi	r0, r3, #8, #8
    3ae8:	b002      	add	sp, #8
    3aea:	4770      	bx	lr
    3aec:	100013e4 	.word	0x100013e4

00003af0 <board_io__get_led1>:
board_io__get_led1():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:80
gpio_s board_io__get_led1(void) { return board_io__led1; }
    3af0:	4b07      	ldr	r3, [pc, #28]	; (3b10 <board_io__get_led1+0x20>)
    3af2:	b082      	sub	sp, #8
    3af4:	881b      	ldrh	r3, [r3, #0]
    3af6:	f8ad 3004 	strh.w	r3, [sp, #4]
    3afa:	f89d 3004 	ldrb.w	r3, [sp, #4]
    3afe:	2000      	movs	r0, #0
    3b00:	f363 0007 	bfi	r0, r3, #0, #8
    3b04:	f89d 3005 	ldrb.w	r3, [sp, #5]
    3b08:	f363 200f 	bfi	r0, r3, #8, #8
    3b0c:	b002      	add	sp, #8
    3b0e:	4770      	bx	lr
    3b10:	100013e6 	.word	0x100013e6

00003b14 <board_io__get_led2>:
board_io__get_led2():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:81
gpio_s board_io__get_led2(void) { return board_io__led2; }
    3b14:	4b07      	ldr	r3, [pc, #28]	; (3b34 <board_io__get_led2+0x20>)
    3b16:	b082      	sub	sp, #8
    3b18:	881b      	ldrh	r3, [r3, #0]
    3b1a:	f8ad 3004 	strh.w	r3, [sp, #4]
    3b1e:	f89d 3004 	ldrb.w	r3, [sp, #4]
    3b22:	2000      	movs	r0, #0
    3b24:	f363 0007 	bfi	r0, r3, #0, #8
    3b28:	f89d 3005 	ldrb.w	r3, [sp, #5]
    3b2c:	f363 200f 	bfi	r0, r3, #8, #8
    3b30:	b002      	add	sp, #8
    3b32:	4770      	bx	lr
    3b34:	100013e8 	.word	0x100013e8

00003b38 <board_io__get_led3>:
board_io__get_led3():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/board_io.c:82
gpio_s board_io__get_led3(void) { return board_io__led3; }
    3b38:	4b07      	ldr	r3, [pc, #28]	; (3b58 <board_io__get_led3+0x20>)
    3b3a:	b082      	sub	sp, #8
    3b3c:	881b      	ldrh	r3, [r3, #0]
    3b3e:	f8ad 3004 	strh.w	r3, [sp, #4]
    3b42:	f89d 3004 	ldrb.w	r3, [sp, #4]
    3b46:	2000      	movs	r0, #0
    3b48:	f363 0007 	bfi	r0, r3, #0, #8
    3b4c:	f89d 3005 	ldrb.w	r3, [sp, #5]
    3b50:	f363 200f 	bfi	r0, r3, #8, #8
    3b54:	b002      	add	sp, #8
    3b56:	4770      	bx	lr
    3b58:	100013ea 	.word	0x100013ea

00003b5c <gpio__set_function>:
gpio__set_function():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:56
  gpio_s gpio = gpio__construct(port, pin_number_0_to_31);
  gpio__set_function(gpio, function);
  return gpio;
}

void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    3b5c:	b082      	sub	sp, #8
gpio__get_iocon():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3b5e:	b2c3      	uxtb	r3, r0
gpio__set_function():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:56
void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    3b60:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_iocon():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3b64:	f3c0 2007 	ubfx	r0, r0, #8, #8
    3b68:	0080      	lsls	r0, r0, #2
    3b6a:	eb00 10c3 	add.w	r0, r0, r3, lsl #7
    3b6e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    3b72:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
gpio__set_function():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:62
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_iocon &= ~(config_mask << 0);
  *pin_iocon |= ((uint32_t)function & config_mask);
    3b76:	f001 0107 	and.w	r1, r1, #7
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:61
  *pin_iocon &= ~(config_mask << 0);
    3b7a:	6803      	ldr	r3, [r0, #0]
    3b7c:	f023 0307 	bic.w	r3, r3, #7
    3b80:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:62
  *pin_iocon |= ((uint32_t)function & config_mask);
    3b82:	6803      	ldr	r3, [r0, #0]
    3b84:	4319      	orrs	r1, r3
    3b86:	6001      	str	r1, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:63
}
    3b88:	b002      	add	sp, #8
    3b8a:	4770      	bx	lr

00003b8c <gpio__construct_with_function>:
gpio__construct_with_function():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:50
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    3b8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_function(gpio, function);
    3b8e:	f88d 1001 	strb.w	r1, [sp, #1]
    3b92:	f88d 0000 	strb.w	r0, [sp]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:50
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    3b96:	4604      	mov	r4, r0
    3b98:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_function(gpio, function);
    3b9a:	9800      	ldr	r0, [sp, #0]
    3b9c:	4611      	mov	r1, r2
    3b9e:	f7ff ffdd 	bl	3b5c <gpio__set_function>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:54
}
    3ba2:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    3ba6:	b003      	add	sp, #12
    3ba8:	bd30      	pop	{r4, r5, pc}

00003baa <gpio__enable_open_drain>:
gpio__enable_open_drain():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:65

void gpio__enable_open_drain(gpio_s gpio) {
    3baa:	b082      	sub	sp, #8
gpio__get_iocon():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3bac:	b2c3      	uxtb	r3, r0
gpio__enable_open_drain():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:65
void gpio__enable_open_drain(gpio_s gpio) {
    3bae:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_iocon():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3bb2:	f3c0 2007 	ubfx	r0, r0, #8, #8
    3bb6:	0080      	lsls	r0, r0, #2
    3bb8:	eb00 10c3 	add.w	r0, r0, r3, lsl #7
    3bbc:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    3bc0:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
gpio__enable_open_drain():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:67
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);
  *pin_iocon |= (UINT32_C(1) << 10);
    3bc4:	6803      	ldr	r3, [r0, #0]
    3bc6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    3bca:	6003      	str	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:68
}
    3bcc:	b002      	add	sp, #8
    3bce:	4770      	bx	lr

00003bd0 <gpio__set_as_input>:
gpio__set_as_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:70

void gpio__set_as_input(gpio_s gpio) { gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio); }
    3bd0:	b082      	sub	sp, #8
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3bd2:	4b08      	ldr	r3, [pc, #32]	; (3bf4 <gpio__set_as_input+0x24>)
gpio__set_as_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
void gpio__set_as_input(gpio_s gpio) { gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio); }
    3bd4:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3bd8:	b2c0      	uxtb	r0, r0
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3bda:	2201      	movs	r2, #1
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3bdc:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3be0:	f89d 0005 	ldrb.w	r0, [sp, #5]
gpio__set_as_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
void gpio__set_as_input(gpio_s gpio) { gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio); }
    3be4:	680b      	ldr	r3, [r1, #0]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3be6:	4082      	lsls	r2, r0
gpio__set_as_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
void gpio__set_as_input(gpio_s gpio) { gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio); }
    3be8:	ea23 0302 	bic.w	r3, r3, r2
    3bec:	600b      	str	r3, [r1, #0]
    3bee:	b002      	add	sp, #8
    3bf0:	4770      	bx	lr
    3bf2:	bf00      	nop
    3bf4:	0000b984 	.word	0x0000b984

00003bf8 <gpio__construct_as_input>:
gpio__construct_as_input():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:38
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3bf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:40
  gpio__set_as_input(gpio);
    3bfa:	f88d 0000 	strb.w	r0, [sp]
    3bfe:	f88d 1001 	strb.w	r1, [sp, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:38
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3c02:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:40
  gpio__set_as_input(gpio);
    3c04:	9800      	ldr	r0, [sp, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:38
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3c06:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:40
  gpio__set_as_input(gpio);
    3c08:	f7ff ffe2 	bl	3bd0 <gpio__set_as_input>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:42
}
    3c0c:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    3c10:	b003      	add	sp, #12
    3c12:	bd30      	pop	{r4, r5, pc}

00003c14 <gpio__set_as_output>:
gpio__set_as_output():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:72

void gpio__set_as_output(gpio_s gpio) { gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio); }
    3c14:	b082      	sub	sp, #8
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c16:	4b07      	ldr	r3, [pc, #28]	; (3c34 <gpio__set_as_output+0x20>)
gpio__set_as_output():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:72
void gpio__set_as_output(gpio_s gpio) { gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio); }
    3c18:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c1c:	b2c0      	uxtb	r0, r0
    3c1e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c22:	f89d 0005 	ldrb.w	r0, [sp, #5]
gpio__set_as_output():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:72
void gpio__set_as_output(gpio_s gpio) { gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio); }
    3c26:	6811      	ldr	r1, [r2, #0]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c28:	2301      	movs	r3, #1
    3c2a:	4083      	lsls	r3, r0
gpio__set_as_output():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:72
void gpio__set_as_output(gpio_s gpio) { gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio); }
    3c2c:	430b      	orrs	r3, r1
    3c2e:	6013      	str	r3, [r2, #0]
    3c30:	b002      	add	sp, #8
    3c32:	4770      	bx	lr
    3c34:	0000b984 	.word	0x0000b984

00003c38 <gpio__construct_as_output>:
gpio__construct_as_output():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:44
gpio_s gpio__construct_as_output(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3c38:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  gpio__set_as_output(gpio);
    3c3a:	f88d 0000 	strb.w	r0, [sp]
    3c3e:	f88d 1001 	strb.w	r1, [sp, #1]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:44
gpio_s gpio__construct_as_output(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3c42:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  gpio__set_as_output(gpio);
    3c44:	9800      	ldr	r0, [sp, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:44
gpio_s gpio__construct_as_output(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3c46:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  gpio__set_as_output(gpio);
    3c48:	f7ff ffe4 	bl	3c14 <gpio__set_as_output>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:48
}
    3c4c:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    3c50:	b003      	add	sp, #12
    3c52:	bd30      	pop	{r4, r5, pc}

00003c54 <gpio__get>:
gpio__get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:74

bool gpio__get(gpio_s gpio) { return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio)); }
    3c54:	b082      	sub	sp, #8
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c56:	4b08      	ldr	r3, [pc, #32]	; (3c78 <gpio__get+0x24>)
gpio__get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:74
bool gpio__get(gpio_s gpio) { return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio)); }
    3c58:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c5c:	b2c0      	uxtb	r0, r0
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c5e:	f89d 1005 	ldrb.w	r1, [sp, #5]
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c62:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
gpio__get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:74
bool gpio__get(gpio_s gpio) { return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio)); }
    3c66:	695a      	ldr	r2, [r3, #20]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c68:	2301      	movs	r3, #1
    3c6a:	408b      	lsls	r3, r1
gpio__get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:74
bool gpio__get(gpio_s gpio) { return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio)); }
    3c6c:	4213      	tst	r3, r2
    3c6e:	bf14      	ite	ne
    3c70:	2001      	movne	r0, #1
    3c72:	2000      	moveq	r0, #0
    3c74:	b002      	add	sp, #8
    3c76:	4770      	bx	lr
    3c78:	0000b984 	.word	0x0000b984

00003c7c <gpio__set>:
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c7c:	b2c2      	uxtb	r2, r0
    3c7e:	4b05      	ldr	r3, [pc, #20]	; (3c94 <gpio__set+0x18>)
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c80:	f3c0 2007 	ubfx	r0, r0, #8, #8
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c84:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c88:	2301      	movs	r3, #1
gpio__set():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:76

void gpio__set(gpio_s gpio) { gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio); }
    3c8a:	b082      	sub	sp, #8
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c8c:	4083      	lsls	r3, r0
gpio__set():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:76
void gpio__set(gpio_s gpio) { gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio); }
    3c8e:	6193      	str	r3, [r2, #24]
    3c90:	b002      	add	sp, #8
    3c92:	4770      	bx	lr
    3c94:	0000b984 	.word	0x0000b984

00003c98 <gpio__reset>:
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3c98:	b2c2      	uxtb	r2, r0
    3c9a:	4b05      	ldr	r3, [pc, #20]	; (3cb0 <gpio__reset+0x18>)
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3c9c:	f3c0 2007 	ubfx	r0, r0, #8, #8
gpio__get_struct():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3ca0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3ca4:	2301      	movs	r3, #1
gpio__reset():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:78

void gpio__reset(gpio_s gpio) { gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio); }
    3ca6:	b082      	sub	sp, #8
gpio__get_pin_mask():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3ca8:	4083      	lsls	r3, r0
gpio__reset():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:78
void gpio__reset(gpio_s gpio) { gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio); }
    3caa:	61d3      	str	r3, [r2, #28]
    3cac:	b002      	add	sp, #8
    3cae:	4770      	bx	lr
    3cb0:	0000b984 	.word	0x0000b984

00003cb4 <gpio__toggle>:
gpio__toggle():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:80

void gpio__toggle(gpio_s gpio) {
    3cb4:	b507      	push	{r0, r1, r2, lr}
    3cb6:	f8ad 0004 	strh.w	r0, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:82
  // Avoiding XOR logic with PIN register to make it thread safe
  if (gpio__get(gpio)) {
    3cba:	9801      	ldr	r0, [sp, #4]
    3cbc:	f7ff ffca 	bl	3c54 <gpio__get>
    3cc0:	b128      	cbz	r0, 3cce <gpio__toggle+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:83
    gpio__reset(gpio);
    3cc2:	9801      	ldr	r0, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:87
  } else {
    gpio__set(gpio);
  }
}
    3cc4:	b003      	add	sp, #12
    3cc6:	f85d eb04 	ldr.w	lr, [sp], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:83
    gpio__reset(gpio);
    3cca:	f7ff bfe5 	b.w	3c98 <gpio__reset>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:85
    gpio__set(gpio);
    3cce:	9801      	ldr	r0, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:87
}
    3cd0:	b003      	add	sp, #12
    3cd2:	f85d eb04 	ldr.w	lr, [sp], #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/gpio.c:85
    gpio__set(gpio);
    3cd6:	f7ff bfd1 	b.w	3c7c <gpio__set>
    3cda:	Address 0x0000000000003cda is out of bounds.


00003cdc <hw_timer__enable>:
hw_timer__enable():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:18
    {LPC_TIM1, LPC_PERIPHERAL__TIMER1},
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    3cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    3ce0:	4c0f      	ldr	r4, [pc, #60]	; (3d20 <hw_timer__enable+0x44>)
    3ce2:	eb04 03c0 	add.w	r3, r4, r0, lsl #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    3ce6:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    3ce8:	791d      	ldrb	r5, [r3, #4]
    3cea:	4628      	mov	r0, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    3cec:	460f      	mov	r7, r1
    3cee:	4690      	mov	r8, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    3cf0:	f000 fa0e 	bl	4110 <lpc_peripheral__turn_on_power_to>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22

  hw_timers[timer].registers->TCR = 0;
    3cf4:	f854 4036 	ldr.w	r4, [r4, r6, lsl #3]
    3cf8:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:25
  hw_timers[timer].registers->TC = 0;

  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    3cfa:	223f      	movs	r2, #63	; 0x3f
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  hw_timers[timer].registers->TCR = 0;
    3cfc:	6063      	str	r3, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:35
  hw_timers[timer].registers->MR3 = 0;

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback);
    3cfe:	4641      	mov	r1, r8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:23
  hw_timers[timer].registers->TC = 0;
    3d00:	60a3      	str	r3, [r4, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:35
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback);
    3d02:	4628      	mov	r0, r5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:25
  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    3d04:	6022      	str	r2, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:26
  hw_timers[timer].registers->MCR = 0;   // Clear all match register settings
    3d06:	6163      	str	r3, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->MR0 = 0;
    3d08:	61a3      	str	r3, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:28
  hw_timers[timer].registers->MR1 = 0;
    3d0a:	61e3      	str	r3, [r4, #28]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:29
  hw_timers[timer].registers->MR2 = 0;
    3d0c:	6223      	str	r3, [r4, #32]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:30
  hw_timers[timer].registers->MR3 = 0;
    3d0e:	6263      	str	r3, [r4, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:35
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback);
    3d10:	f000 fa22 	bl	4158 <lpc_peripheral__enable_interrupt>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:38

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    3d14:	2301      	movs	r3, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  hw_timers[timer].registers->PR = prescalar_divider;
    3d16:	60e7      	str	r7, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:38
  hw_timers[timer].registers->TCR = 1; // Enable
    3d18:	6063      	str	r3, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:39
}
    3d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3d1e:	bf00      	nop
    3d20:	0000b99c 	.word	0x0000b99c

00003d24 <hw_timer__enable_match_isr>:
hw_timer__enable_match_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:43

void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    3d24:	4b07      	ldr	r3, [pc, #28]	; (3d44 <hw_timer__enable_match_isr+0x20>)
    3d26:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:41
void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
    3d2a:	b530      	push	{r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:43
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    3d2c:	2001      	movs	r0, #1
    3d2e:	695c      	ldr	r4, [r3, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:42
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    3d30:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:43
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    3d34:	40a8      	lsls	r0, r5
    3d36:	4320      	orrs	r0, r4
    3d38:	6158      	str	r0, [r3, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:46

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    3d3a:	3318      	adds	r3, #24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:49
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    3d3c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:50
}
    3d40:	bd30      	pop	{r4, r5, pc}
    3d42:	bf00      	nop
    3d44:	0000b99c 	.word	0x0000b99c

00003d48 <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:53

void hw_timer__acknowledge_interrupt(lpc_timer_e timer, lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    3d48:	4b03      	ldr	r3, [pc, #12]	; (3d58 <hw_timer__acknowledge_interrupt+0x10>)
    3d4a:	f853 2030 	ldr.w	r2, [r3, r0, lsl #3]
    3d4e:	2301      	movs	r3, #1
    3d50:	fa03 f101 	lsl.w	r1, r3, r1
    3d54:	6011      	str	r1, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:54
}
    3d56:	4770      	bx	lr
    3d58:	0000b99c 	.word	0x0000b99c

00003d5c <hw_timer__get_value>:
hw_timer__get_value():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:56

uint32_t hw_timer__get_value(lpc_timer_e timer) { return hw_timers[timer].registers->TC; }
    3d5c:	4b02      	ldr	r3, [pc, #8]	; (3d68 <hw_timer__get_value+0xc>)
    3d5e:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
    3d62:	6898      	ldr	r0, [r3, #8]
    3d64:	4770      	bx	lr
    3d66:	bf00      	nop
    3d68:	0000b99c 	.word	0x0000b99c

00003d6c <hw_timer__set_value>:
hw_timer__set_value():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:58

void hw_timer__set_value(lpc_timer_e timer, uint32_t tc_value) { hw_timers[timer].registers->TC = tc_value; }
    3d6c:	4b02      	ldr	r3, [pc, #8]	; (3d78 <hw_timer__set_value+0xc>)
    3d6e:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
    3d72:	6099      	str	r1, [r3, #8]
    3d74:	4770      	bx	lr
    3d76:	bf00      	nop
    3d78:	0000b99c 	.word	0x0000b99c

00003d7c <i2c__transfer_unprotected>:
i2c__transfer_unprotected():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:215
  return status;
}

static bool i2c__transfer_unprotected(i2c_s *i2c, uint8_t slave_address, uint8_t starting_slave_memory_address,
                                      uint8_t *input_byte_pointer, const uint8_t *output_byte_pointer,
                                      uint32_t number_of_bytes_to_transfer) {
    3d7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3d80:	4604      	mov	r4, r0
    3d82:	4617      	mov	r7, r2
    3d84:	461e      	mov	r6, r3
    3d86:	4688      	mov	r8, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:218
  bool status = false;
  const uint32_t timeout_ms = 3000;
  const bool rtos_is_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    3d88:	f7ff fca0 	bl	36cc <xTaskGetSchedulerState>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:220

  xSemaphoreTake(i2c->transfer_complete_signal, 0); // Clear potential stale transfer complete signal
    3d8c:	2100      	movs	r1, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:218
  const bool rtos_is_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    3d8e:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:220
  xSemaphoreTake(i2c->transfer_complete_signal, 0); // Clear potential stale transfer complete signal
    3d90:	6860      	ldr	r0, [r4, #4]
    3d92:	f7fe fd6d 	bl	2870 <xQueueSemaphoreTake>
i2c__kick_off_transfer():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:243
}

static void i2c__kick_off_transfer(i2c_s *i2c, uint8_t slave_address, uint8_t starting_slave_memory_address,
                                   uint8_t *input_byte_pointer, const uint8_t *output_byte_pointer,
                                   uint32_t number_of_bytes_to_transfer) {
  i2c->error_code = 0;
    3d96:	2300      	movs	r3, #0
    3d98:	7323      	strb	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:248
  i2c->slave_address = slave_address;
  i2c->starting_slave_memory_address = starting_slave_memory_address;

  i2c->input_byte_pointer = input_byte_pointer;
  i2c->output_byte_pointer = output_byte_pointer;
    3d9a:	9b06      	ldr	r3, [sp, #24]
    3d9c:	6163      	str	r3, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:249
  i2c->number_of_bytes_to_transfer = number_of_bytes_to_transfer;
    3d9e:	9b07      	ldr	r3, [sp, #28]
    3da0:	61a3      	str	r3, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:253

  // Send START, I2C State Machine will finish the rest through interrupts; @see i2c__handle_state_machine()
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X", (unsigned)slave_address);
  i2c__set_start_flag(i2c->registers);
    3da2:	6823      	ldr	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:244
  i2c->slave_address = slave_address;
    3da4:	f884 800d 	strb.w	r8, [r4, #13]
i2c__set_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    3da8:	2220      	movs	r2, #32
i2c__transfer_unprotected():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:225
  if (rtos_is_running) {
    3daa:	2d02      	cmp	r5, #2
i2c__kick_off_transfer():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:245
  i2c->starting_slave_memory_address = starting_slave_memory_address;
    3dac:	73a7      	strb	r7, [r4, #14]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:247
  i2c->input_byte_pointer = input_byte_pointer;
    3dae:	6126      	str	r6, [r4, #16]
i2c__set_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    3db0:	601a      	str	r2, [r3, #0]
i2c__transfer_unprotected():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:225
  if (rtos_is_running) {
    3db2:	d10b      	bne.n	3dcc <i2c__transfer_unprotected+0x50>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:227
    if (xSemaphoreTake(i2c->transfer_complete_signal, timeout_ms)) {
    3db4:	f640 31b8 	movw	r1, #3000	; 0xbb8
    3db8:	6860      	ldr	r0, [r4, #4]
    3dba:	f7fe fd59 	bl	2870 <xQueueSemaphoreTake>
    3dbe:	b118      	cbz	r0, 3dc8 <i2c__transfer_unprotected+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:234
    status = (0 == i2c->error_code);
    3dc0:	7b20      	ldrb	r0, [r4, #12]
    3dc2:	fab0 f080 	clz	r0, r0
    3dc6:	0940      	lsrs	r0, r0, #5
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:238
}
    3dc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:232 (discriminator 1)
    while (!xSemaphoreTake(i2c->transfer_complete_signal, 0)) {
    3dcc:	2100      	movs	r1, #0
    3dce:	6860      	ldr	r0, [r4, #4]
    3dd0:	f7fe fd4e 	bl	2870 <xQueueSemaphoreTake>
    3dd4:	2800      	cmp	r0, #0
    3dd6:	d0f9      	beq.n	3dcc <i2c__transfer_unprotected+0x50>
    3dd8:	e7f2      	b.n	3dc0 <i2c__transfer_unprotected+0x44>
    3dda:	Address 0x0000000000003dda is out of bounds.


00003ddc <i2c__handle_interrupt>:
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:292
   * I2C__STATE_MR_SLAVE_READ_ACK For 2+ bytes:  I2C__STATE_MR_SLAVE_ACK_SENT --> ... (I2C__STATE_MR_SLAVE_ACK_SENT) -->
   * I2C__STATE_MR_SLAVE_NACK_SENT --> (stop) For 1  byte :  I2C__STATE_MR_SLAVE_NACK_SENT --> (stop)
   ***********************************************************************************************************
   */

  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    3ddc:	6803      	ldr	r3, [r0, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:293
  const unsigned i2c_state = lpc_i2c->STAT;
    3dde:	685a      	ldr	r2, [r3, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:296
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);

  switch (i2c_state) {
    3de0:	2a28      	cmp	r2, #40	; 0x28
i2c__handle_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:408
  }

  return true;
}

static void i2c__handle_interrupt(i2c_s *i2c) {
    3de2:	b513      	push	{r0, r1, r4, lr}
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:296
  switch (i2c_state) {
    3de4:	d057      	beq.n	3e96 <i2c__handle_interrupt+0xba>
    3de6:	d80a      	bhi.n	3dfe <i2c__handle_interrupt+0x22>
    3de8:	2a10      	cmp	r2, #16
    3dea:	d02c      	beq.n	3e46 <i2c__handle_interrupt+0x6a>
    3dec:	2a18      	cmp	r2, #24
    3dee:	d032      	beq.n	3e56 <i2c__handle_interrupt+0x7a>
    3df0:	2a08      	cmp	r2, #8
    3df2:	d109      	bne.n	3e08 <i2c__handle_interrupt+0x2c>
i2c__write_address():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:75
static uint8_t i2c__write_address(uint8_t slave_address) { return (slave_address & 0xFE); }
    3df4:	7b41      	ldrb	r1, [r0, #13]
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:299
    lpc_i2c->DAT = i2c__write_address(i2c->slave_address);
    3df6:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:316
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    3dfa:	6099      	str	r1, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3dfc:	e028      	b.n	3e50 <i2c__handle_interrupt+0x74>
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:296
  switch (i2c_state) {
    3dfe:	2a40      	cmp	r2, #64	; 0x40
    3e00:	d063      	beq.n	3eca <i2c__handle_interrupt+0xee>
    3e02:	d80d      	bhi.n	3e20 <i2c__handle_interrupt+0x44>
    3e04:	2a38      	cmp	r2, #56	; 0x38
    3e06:	d077      	beq.n	3ef8 <i2c__handle_interrupt+0x11c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:388
    i2c->error_code = lpc_i2c->STAT;
    3e08:	685a      	ldr	r2, [r3, #4]
    3e0a:	7302      	strb	r2, [r0, #12]
i2c__clear_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3e0c:	2220      	movs	r2, #32
    3e0e:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
  i2c->CONSET = stop_bit;
    3e10:	2210      	movs	r2, #16
    3e12:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3e14:	2208      	movs	r2, #8
    3e16:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:402
  while (i2c->CONSET & stop_bit) {
    3e18:	681a      	ldr	r2, [r3, #0]
    3e1a:	06d2      	lsls	r2, r2, #27
    3e1c:	d4fc      	bmi.n	3e18 <i2c__handle_interrupt+0x3c>
    3e1e:	e026      	b.n	3e6e <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:296
  switch (i2c_state) {
    3e20:	2a50      	cmp	r2, #80	; 0x50
    3e22:	d05b      	beq.n	3edc <i2c__handle_interrupt+0x100>
    3e24:	2a58      	cmp	r2, #88	; 0x58
    3e26:	d1ef      	bne.n	3e08 <i2c__handle_interrupt+0x2c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:372
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    3e28:	6902      	ldr	r2, [r0, #16]
    3e2a:	6899      	ldr	r1, [r3, #8]
    3e2c:	7011      	strb	r1, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:373
    i2c->number_of_bytes_to_transfer = 0;
    3e2e:	2200      	movs	r2, #0
    3e30:	6182      	str	r2, [r0, #24]
i2c__clear_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3e32:	2220      	movs	r2, #32
    3e34:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
  i2c->CONSET = stop_bit;
    3e36:	2210      	movs	r2, #16
    3e38:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3e3a:	2208      	movs	r2, #8
    3e3c:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:402
  while (i2c->CONSET & stop_bit) {
    3e3e:	681a      	ldr	r2, [r3, #0]
    3e40:	06d1      	lsls	r1, r2, #27
    3e42:	d4fc      	bmi.n	3e3e <i2c__handle_interrupt+0x62>
    3e44:	e013      	b.n	3e6e <i2c__handle_interrupt+0x92>
i2c__read_address():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:74
static uint8_t i2c__read_address(uint8_t slave_address) { return (slave_address | 0x01); }
    3e46:	7b42      	ldrb	r2, [r0, #13]
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:304
    lpc_i2c->DAT = i2c__read_address(i2c->slave_address);
    3e48:	f042 0201 	orr.w	r2, r2, #1
    3e4c:	609a      	str	r2, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3e4e:	2208      	movs	r2, #8
    3e50:	619a      	str	r2, [r3, #24]
i2c__handle_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:416
  if (stop_sent) {
    long higher_priority_task_woke = 0;
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal, &higher_priority_task_woke);
    portEND_SWITCHING_ISR(higher_priority_task_woke);
  }
}
    3e52:	b002      	add	sp, #8
    3e54:	bd10      	pop	{r4, pc}
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:313
    if (0 == i2c->number_of_bytes_to_transfer) {
    3e56:	6984      	ldr	r4, [r0, #24]
i2c__clear_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3e58:	2120      	movs	r1, #32
    3e5a:	6199      	str	r1, [r3, #24]
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:313
    if (0 == i2c->number_of_bytes_to_transfer) {
    3e5c:	2208      	movs	r2, #8
    3e5e:	b9c4      	cbnz	r4, 3e92 <i2c__handle_interrupt+0xb6>
i2c__clear_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3e60:	6199      	str	r1, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
  i2c->CONSET = stop_bit;
    3e62:	2110      	movs	r1, #16
    3e64:	6019      	str	r1, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3e66:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:402
  while (i2c->CONSET & stop_bit) {
    3e68:	681a      	ldr	r2, [r3, #0]
    3e6a:	06d1      	lsls	r1, r2, #27
    3e6c:	d4fc      	bmi.n	3e68 <i2c__handle_interrupt+0x8c>
i2c__handle_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:412
    long higher_priority_task_woke = 0;
    3e6e:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:413
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal, &higher_priority_task_woke);
    3e70:	a901      	add	r1, sp, #4
    3e72:	6840      	ldr	r0, [r0, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:412
    long higher_priority_task_woke = 0;
    3e74:	9301      	str	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:413
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal, &higher_priority_task_woke);
    3e76:	f7fe fc0b 	bl	2690 <xQueueGiveFromISR>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:414
    portEND_SWITCHING_ISR(higher_priority_task_woke);
    3e7a:	9b01      	ldr	r3, [sp, #4]
    3e7c:	2b00      	cmp	r3, #0
    3e7e:	d0e8      	beq.n	3e52 <i2c__handle_interrupt+0x76>
    3e80:	4b1f      	ldr	r3, [pc, #124]	; (3f00 <i2c__handle_interrupt+0x124>)
    3e82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3e86:	601a      	str	r2, [r3, #0]
    3e88:	f3bf 8f4f 	dsb	sy
    3e8c:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:416
}
    3e90:	e7df      	b.n	3e52 <i2c__handle_interrupt+0x76>
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:316
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    3e92:	7b81      	ldrb	r1, [r0, #14]
    3e94:	e7b1      	b.n	3dfa <i2c__handle_interrupt+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:324
    if (i2c__is_read_address(i2c->slave_address)) {
    3e96:	7b42      	ldrb	r2, [r0, #13]
    3e98:	07d2      	lsls	r2, r2, #31
    3e9a:	d502      	bpl.n	3ea2 <i2c__handle_interrupt+0xc6>
i2c__set_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    3e9c:	2220      	movs	r2, #32
i2c__set_ack_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    3e9e:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3ea0:	e7d5      	b.n	3e4e <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:328
      if (0 == i2c->number_of_bytes_to_transfer) {
    3ea2:	6982      	ldr	r2, [r0, #24]
    3ea4:	b94a      	cbnz	r2, 3eba <i2c__handle_interrupt+0xde>
i2c__clear_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3ea6:	2220      	movs	r2, #32
    3ea8:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
  i2c->CONSET = stop_bit;
    3eaa:	2210      	movs	r2, #16
    3eac:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3eae:	2208      	movs	r2, #8
    3eb0:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:402
  while (i2c->CONSET & stop_bit) {
    3eb2:	681a      	ldr	r2, [r3, #0]
    3eb4:	06d4      	lsls	r4, r2, #27
    3eb6:	d4fc      	bmi.n	3eb2 <i2c__handle_interrupt+0xd6>
    3eb8:	e7d9      	b.n	3e6e <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:331
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    3eba:	6941      	ldr	r1, [r0, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:333
        --(i2c->number_of_bytes_to_transfer);
    3ebc:	3a01      	subs	r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:331
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    3ebe:	f811 4b01 	ldrb.w	r4, [r1], #1
    3ec2:	609c      	str	r4, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:332
        ++(i2c->output_byte_pointer);
    3ec4:	6141      	str	r1, [r0, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:333
        --(i2c->number_of_bytes_to_transfer);
    3ec6:	6182      	str	r2, [r0, #24]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:86
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3ec8:	e7c1      	b.n	3e4e <i2c__handle_interrupt+0x72>
i2c__clear_start_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3eca:	2220      	movs	r2, #32
    3ecc:	619a      	str	r2, [r3, #24]
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:346
    if (i2c->number_of_bytes_to_transfer > 1) {
    3ece:	6982      	ldr	r2, [r0, #24]
    3ed0:	2a01      	cmp	r2, #1
    3ed2:	f04f 0204 	mov.w	r2, #4
    3ed6:	d8e2      	bhi.n	3e9e <i2c__handle_interrupt+0xc2>
i2c__set_nack_flag():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:90
static void i2c__set_nack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x04; }
    3ed8:	619a      	str	r2, [r3, #24]
    3eda:	e7b8      	b.n	3e4e <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:358
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    3edc:	6902      	ldr	r2, [r0, #16]
    3ede:	6899      	ldr	r1, [r3, #8]
    3ee0:	7011      	strb	r1, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:359
    ++(i2c->input_byte_pointer);
    3ee2:	6902      	ldr	r2, [r0, #16]
    3ee4:	3201      	adds	r2, #1
    3ee6:	6102      	str	r2, [r0, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:360
    --(i2c->number_of_bytes_to_transfer);
    3ee8:	6982      	ldr	r2, [r0, #24]
    3eea:	3a01      	subs	r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:362
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    3eec:	2a01      	cmp	r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:360
    --(i2c->number_of_bytes_to_transfer);
    3eee:	6182      	str	r2, [r0, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:362
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    3ef0:	f04f 0204 	mov.w	r2, #4
    3ef4:	d1d3      	bne.n	3e9e <i2c__handle_interrupt+0xc2>
    3ef6:	e7ef      	b.n	3ed8 <i2c__handle_interrupt+0xfc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:380
    i2c->error_code = lpc_i2c->STAT;
    3ef8:	685b      	ldr	r3, [r3, #4]
    3efa:	7303      	strb	r3, [r0, #12]
i2c__handle_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:411
  if (stop_sent) {
    3efc:	e7b7      	b.n	3e6e <i2c__handle_interrupt+0x92>
    3efe:	bf00      	nop
    3f00:	e000ed04 	.word	0xe000ed04

00003f04 <i2c2_isr>:
i2c2_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:94
static void i2c2_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__2]); }
    3f04:	4801      	ldr	r0, [pc, #4]	; (3f0c <i2c2_isr+0x8>)
    3f06:	f7ff bf69 	b.w	3ddc <i2c__handle_interrupt>
    3f0a:	bf00      	nop
    3f0c:	10000084 	.word	0x10000084

00003f10 <i2c1_isr>:
i2c1_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:93
static void i2c1_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__1]); }
    3f10:	4801      	ldr	r0, [pc, #4]	; (3f18 <i2c1_isr+0x8>)
    3f12:	f7ff bf63 	b.w	3ddc <i2c__handle_interrupt>
    3f16:	bf00      	nop
    3f18:	10000068 	.word	0x10000068

00003f1c <i2c0_isr>:
i2c0_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:92
static void i2c0_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__0]); }
    3f1c:	4801      	ldr	r0, [pc, #4]	; (3f24 <i2c0_isr+0x8>)
    3f1e:	f7ff bf5d 	b.w	3ddc <i2c__handle_interrupt>
    3f22:	bf00      	nop
    3f24:	1000004c 	.word	0x1000004c

00003f28 <i2c__initialize>:
i2c__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:102
void i2c__initialize(i2c_e i2c_number, uint32_t desired_i2c_bus_speed_in_hz, uint32_t peripheral_clock_hz) {
    3f28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:103
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    3f2c:	4b28      	ldr	r3, [pc, #160]	; (3fd0 <i2c__initialize+0xa8>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:102
void i2c__initialize(i2c_e i2c_number, uint32_t desired_i2c_bus_speed_in_hz, uint32_t peripheral_clock_hz) {
    3f2e:	4606      	mov	r6, r0
    3f30:	4615      	mov	r5, r2
    3f32:	4688      	mov	r8, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:103
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    3f34:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:102
void i2c__initialize(i2c_e i2c_number, uint32_t desired_i2c_bus_speed_in_hz, uint32_t peripheral_clock_hz) {
    3f38:	b085      	sub	sp, #20
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:103
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    3f3a:	ab04      	add	r3, sp, #16
    3f3c:	e903 0007 	stmdb	r3, {r0, r1, r2}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:104
  const lpc_peripheral_e peripheral_ids[] = {LPC_PERIPHERAL__I2C0, LPC_PERIPHERAL__I2C1, LPC_PERIPHERAL__I2C2};
    3f40:	f640 330a 	movw	r3, #2826	; 0xb0a
    3f44:	f8ad 3000 	strh.w	r3, [sp]
    3f48:	230c      	movs	r3, #12
    3f4a:	f88d 3002 	strb.w	r3, [sp, #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    3f4e:	231c      	movs	r3, #28
    3f50:	4373      	muls	r3, r6
    3f52:	4a20      	ldr	r2, [pc, #128]	; (3fd4 <i2c__initialize+0xac>)
    3f54:	58d4      	ldr	r4, [r2, r3]
    3f56:	eb02 0903 	add.w	r9, r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    3f5a:	ab04      	add	r3, sp, #16
    3f5c:	4433      	add	r3, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:116
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    3f5e:	2203      	movs	r2, #3
    3f60:	2100      	movs	r1, #0
    3f62:	2001      	movs	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    3f64:	f813 7c10 	ldrb.w	r7, [r3, #-16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:116
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    3f68:	f7fe fa38 	bl	23dc <xQueueGenericCreate>
    3f6c:	f8c9 0004 	str.w	r0, [r9, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:117
  i2c->mutex = xSemaphoreCreateMutex();
    3f70:	2001      	movs	r0, #1
    3f72:	f7fe fb1c 	bl	25ae <xQueueCreateMutex>
    3f76:	f8c9 0008 	str.w	r0, [r9, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:123
  lpc_peripheral__turn_on_power_to(peripheral_id);
    3f7a:	4638      	mov	r0, r7
    3f7c:	f000 f8c8 	bl	4110 <lpc_peripheral__turn_on_power_to>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:124
  lpc_i2c->CONCLR = 0x6C; // Clear ALL I2C Flags
    3f80:	236c      	movs	r3, #108	; 0x6c
    3f82:	61a3      	str	r3, [r4, #24]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:139
  const uint32_t freq_hz = (desired_i2c_bus_speed_in_hz > max_speed_hz) ? ideal_speed_hz : desired_i2c_bus_speed_in_hz;
    3f84:	4a14      	ldr	r2, [pc, #80]	; (3fd8 <i2c__initialize+0xb0>)
    3f86:	4b15      	ldr	r3, [pc, #84]	; (3fdc <i2c__initialize+0xb4>)
    3f88:	4590      	cmp	r8, r2
    3f8a:	bf88      	it	hi
    3f8c:	4698      	movhi	r8, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:143
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    3f8e:	2328      	movs	r3, #40	; 0x28
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:140
  const uint32_t half_clock_divider = (peripheral_clock_hz / freq_hz) / 2;
    3f90:	fbb5 f2f8 	udiv	r2, r5, r8
    3f94:	0852      	lsrs	r2, r2, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:143
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    3f96:	21c8      	movs	r1, #200	; 0xc8
    3f98:	4353      	muls	r3, r2
    3f9a:	fbb3 f3f1 	udiv	r3, r3, r1
    3f9e:	6123      	str	r3, [r4, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:144
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    3fa0:	233c      	movs	r3, #60	; 0x3c
    3fa2:	435a      	muls	r2, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:147
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    3fa4:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:144
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    3fa6:	fbb2 f2f1 	udiv	r2, r2, r1
    3faa:	6162      	str	r2, [r4, #20]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:147
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    3fac:	62a3      	str	r3, [r4, #40]	; 0x28
    3fae:	6263      	str	r3, [r4, #36]	; 0x24
    3fb0:	6223      	str	r3, [r4, #32]
    3fb2:	60e3      	str	r3, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:150
  lpc_i2c->CONSET = 0x40;
    3fb4:	2340      	movs	r3, #64	; 0x40
    3fb6:	6023      	str	r3, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:151
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number]);
    3fb8:	ab04      	add	r3, sp, #16
    3fba:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    3fbe:	4638      	mov	r0, r7
    3fc0:	f856 1c0c 	ldr.w	r1, [r6, #-12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:152
}
    3fc4:	b005      	add	sp, #20
    3fc6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:151
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number]);
    3fca:	f000 b8c5 	b.w	4158 <lpc_peripheral__enable_interrupt>
    3fce:	bf00      	nop
    3fd0:	0000b9bc 	.word	0x0000b9bc
    3fd4:	1000004c 	.word	0x1000004c
    3fd8:	000f4240 	.word	0x000f4240
    3fdc:	000186a0 	.word	0x000186a0

00003fe0 <i2c__read_slave_data>:
i2c__read_slave_data():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:170
                          uint8_t *bytes_to_read, uint32_t number_of_bytes_to_transfer) {
    3fe0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    3fe4:	460f      	mov	r7, r1
    3fe6:	4690      	mov	r8, r2
i2c__transfer():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:201
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    3fe8:	461d      	mov	r5, r3
    3fea:	b923      	cbnz	r3, 3ff6 <i2c__read_slave_data+0x16>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:198
  bool status = false;
    3fec:	2500      	movs	r5, #0
i2c__read_slave_data():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:175
}
    3fee:	4628      	mov	r0, r5
    3ff0:	b002      	add	sp, #8
    3ff2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
i2c__transfer():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:202
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    3ff6:	4c0f      	ldr	r4, [pc, #60]	; (4034 <i2c__read_slave_data+0x54>)
    3ff8:	231c      	movs	r3, #28
    3ffa:	fb03 4400 	mla	r4, r3, r0, r4
    3ffe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    4002:	68a0      	ldr	r0, [r4, #8]
    4004:	f7fe fc34 	bl	2870 <xQueueSemaphoreTake>
    4008:	2800      	cmp	r0, #0
    400a:	d0ef      	beq.n	3fec <i2c__read_slave_data+0xc>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    400c:	2600      	movs	r6, #0
    400e:	9b08      	ldr	r3, [sp, #32]
    4010:	9301      	str	r3, [sp, #4]
    4012:	4642      	mov	r2, r8
    4014:	462b      	mov	r3, r5
    4016:	f047 0101 	orr.w	r1, r7, #1
    401a:	9600      	str	r6, [sp, #0]
    401c:	4620      	mov	r0, r4
    401e:	f7ff fead 	bl	3d7c <i2c__transfer_unprotected>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      xSemaphoreGive(i2c->mutex);
    4022:	4633      	mov	r3, r6
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    4024:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      xSemaphoreGive(i2c->mutex);
    4026:	4632      	mov	r2, r6
    4028:	4631      	mov	r1, r6
    402a:	68a0      	ldr	r0, [r4, #8]
    402c:	f7fe f9fc 	bl	2428 <xQueueGenericSend>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:210
  return status;
    4030:	e7dd      	b.n	3fee <i2c__read_slave_data+0xe>
    4032:	bf00      	nop
    4034:	1000004c 	.word	0x1000004c

00004038 <i2c__read_single>:
i2c__read_single():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:163
uint8_t i2c__read_single(i2c_e i2c_number, uint8_t slave_address, uint8_t slave_memory_address) {
    4038:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:164
  uint8_t byte = 0;
    403a:	2300      	movs	r3, #0
    403c:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:165
  i2c__read_slave_data(i2c_number, slave_address, slave_memory_address, &byte, 1);
    4040:	2301      	movs	r3, #1
    4042:	9300      	str	r3, [sp, #0]
    4044:	f10d 030f 	add.w	r3, sp, #15
    4048:	f7ff ffca 	bl	3fe0 <i2c__read_slave_data>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:167
}
    404c:	f89d 000f 	ldrb.w	r0, [sp, #15]
    4050:	b005      	add	sp, #20
    4052:	f85d fb04 	ldr.w	pc, [sp], #4
    4056:	Address 0x0000000000004056 is out of bounds.


00004058 <i2c__write_slave_data>:
i2c__write_slave_data():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:182
                           const uint8_t *bytes_to_write, uint32_t number_of_bytes_to_transfer) {
    4058:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    405a:	460e      	mov	r6, r1
    405c:	4617      	mov	r7, r2
i2c__transfer():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:201
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    405e:	461d      	mov	r5, r3
    4060:	b91b      	cbnz	r3, 406a <i2c__write_slave_data+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:198
  bool status = false;
    4062:	2500      	movs	r5, #0
i2c__write_slave_data():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:187
}
    4064:	4628      	mov	r0, r5
    4066:	b003      	add	sp, #12
    4068:	bdf0      	pop	{r4, r5, r6, r7, pc}
i2c__transfer():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:202
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    406a:	4c0e      	ldr	r4, [pc, #56]	; (40a4 <i2c__write_slave_data+0x4c>)
    406c:	231c      	movs	r3, #28
    406e:	fb03 4400 	mla	r4, r3, r0, r4
    4072:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    4076:	68a0      	ldr	r0, [r4, #8]
    4078:	f7fe fbfa 	bl	2870 <xQueueSemaphoreTake>
    407c:	2800      	cmp	r0, #0
    407e:	d0f0      	beq.n	4062 <i2c__write_slave_data+0xa>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    4080:	9b08      	ldr	r3, [sp, #32]
    4082:	463a      	mov	r2, r7
    4084:	e9cd 5300 	strd	r5, r3, [sp]
    4088:	f006 01fe 	and.w	r1, r6, #254	; 0xfe
    408c:	2300      	movs	r3, #0
    408e:	4620      	mov	r0, r4
    4090:	f7ff fe74 	bl	3d7c <i2c__transfer_unprotected>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      xSemaphoreGive(i2c->mutex);
    4094:	2300      	movs	r3, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    4096:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      xSemaphoreGive(i2c->mutex);
    4098:	461a      	mov	r2, r3
    409a:	4619      	mov	r1, r3
    409c:	68a0      	ldr	r0, [r4, #8]
    409e:	f7fe f9c3 	bl	2428 <xQueueGenericSend>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:210
  return status;
    40a2:	e7df      	b.n	4064 <i2c__write_slave_data+0xc>
    40a4:	1000004c 	.word	0x1000004c

000040a8 <i2c__detect>:
i2c__detect():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:154
bool i2c__detect(i2c_e i2c_number, uint8_t slave_address) {
    40a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:158
  uint8_t unused = 0;
    40aa:	2200      	movs	r2, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:160
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register, &unused, zero_bytes);
    40ac:	9200      	str	r2, [sp, #0]
    40ae:	f10d 030f 	add.w	r3, sp, #15
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:158
  uint8_t unused = 0;
    40b2:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:160
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register, &unused, zero_bytes);
    40b6:	f7ff ffcf 	bl	4058 <i2c__write_slave_data>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:161
}
    40ba:	b005      	add	sp, #20
    40bc:	f85d fb04 	ldr.w	pc, [sp], #4

000040c0 <i2c__write_single>:
i2c__write_single():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:177
bool i2c__write_single(i2c_e i2c_number, uint8_t slave_address, uint8_t slave_memory_address, uint8_t value) {
    40c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    40c2:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:178
  return i2c__write_slave_data(i2c_number, slave_address, slave_memory_address, &value, 1);
    40c6:	2301      	movs	r3, #1
    40c8:	9300      	str	r3, [sp, #0]
    40ca:	f10d 030f 	add.w	r3, sp, #15
    40ce:	f7ff ffc3 	bl	4058 <i2c__write_slave_data>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/i2c.c:179
}
    40d2:	b005      	add	sp, #20
    40d4:	f85d fb04 	ldr.w	pc, [sp], #4

000040d8 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:41 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    40d8:	e7fe      	b.n	40d8 <lpc_peripheral__halt_handler>
    40da:	Address 0x00000000000040da is out of bounds.


000040dc <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:105

/**
 * This function is intentionally not declared at the header file
 * This is registered by the startup code and registered as the interrupt callback for each peripheral
 */
void lpc_peripheral__interrupt_dispatcher(void) {
    40dc:	b508      	push	{r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:106
  vRunTimeStatIsrEntry();
    40de:	f7ff fc3f 	bl	3960 <vRunTimeStatIsrEntry>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:111

  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset by 16.
   * We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    40e2:	4b08      	ldr	r3, [pc, #32]	; (4104 <lpc_peripheral__interrupt_dispatcher+0x28>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:115

  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
  isr_to_service();
    40e4:	4a08      	ldr	r2, [pc, #32]	; (4108 <lpc_peripheral__interrupt_dispatcher+0x2c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:111
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    40e6:	781b      	ldrb	r3, [r3, #0]
    40e8:	3b10      	subs	r3, #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:114
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    40ea:	b2db      	uxtb	r3, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:115
  isr_to_service();
    40ec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    40f0:	4798      	blx	r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:119

  // http://www.keil.com/support/docs/3928.htm
  static volatile int memory_write_to_avoid_spurious_interrupt;
  memory_write_to_avoid_spurious_interrupt = 0;
    40f2:	4b06      	ldr	r3, [pc, #24]	; (410c <lpc_peripheral__interrupt_dispatcher+0x30>)
    40f4:	2200      	movs	r2, #0
    40f6:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:120
  (void)memory_write_to_avoid_spurious_interrupt; // Avoid 'variable set but not used' warning
    40f8:	681b      	ldr	r3, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:123

  vRunTimeStatIsrExit();
}
    40fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:122
  vRunTimeStatIsrExit();
    40fe:	f7ff bc43 	b.w	3988 <vRunTimeStatIsrExit>
    4102:	bf00      	nop
    4104:	e000ed04 	.word	0xe000ed04
    4108:	100000a0 	.word	0x100000a0
    410c:	100013ec 	.word	0x100013ec

00004110 <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:126

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    4110:	2824      	cmp	r0, #36	; 0x24
    4112:	d809      	bhi.n	4128 <lpc_peripheral__turn_on_power_to+0x18>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:127
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    4114:	4b05      	ldr	r3, [pc, #20]	; (412c <lpc_peripheral__turn_on_power_to+0x1c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:128
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    4116:	4a06      	ldr	r2, [pc, #24]	; (4130 <lpc_peripheral__turn_on_power_to+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:127
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    4118:	5c18      	ldrb	r0, [r3, r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:128
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    411a:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    411e:	2301      	movs	r3, #1
    4120:	4083      	lsls	r3, r0
    4122:	430b      	orrs	r3, r1
    4124:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:130
  }
}
    4128:	4770      	bx	lr
    412a:	bf00      	nop
    412c:	0000b9c8 	.word	0x0000b9c8
    4130:	400fc000 	.word	0x400fc000

00004134 <lpc_peripheral__is_powered_on>:
lpc_peripheral__is_powered_on():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:135

bool lpc_peripheral__is_powered_on(lpc_peripheral_e peripheral) {
  bool powered_on = false;

  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    4134:	2824      	cmp	r0, #36	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:137
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    4136:	bf9f      	itttt	ls
    4138:	4b05      	ldrls	r3, [pc, #20]	; (4150 <lpc_peripheral__is_powered_on+0x1c>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:136
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    413a:	4a06      	ldrls	r2, [pc, #24]	; (4154 <lpc_peripheral__is_powered_on+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:137
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    413c:	f8d3 30c4 	ldrls.w	r3, [r3, #196]	; 0xc4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:136
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    4140:	5c10      	ldrbls	r0, [r2, r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:137
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    4142:	bf9a      	itte	ls
    4144:	fa23 f000 	lsrls.w	r0, r3, r0
    4148:	f000 0001 	andls.w	r0, r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:133
  bool powered_on = false;
    414c:	2000      	movhi	r0, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:141
  }

  return powered_on;
}
    414e:	4770      	bx	lr
    4150:	400fc000 	.word	0x400fc000
    4154:	0000b9c8 	.word	0x0000b9c8

00004158 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:144

void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral, function__void_f isr_callback) {
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    4158:	4b07      	ldr	r3, [pc, #28]	; (4178 <lpc_peripheral__enable_interrupt+0x20>)
    415a:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:159
   * priority higher than the RTOS interrupt (note that higher priority means lower number)
   *
   * Unless you really know what you are doing, never call NVIC_SetPriority() with a priority other than:
   *    NVIC_SetPriority(peripheral, RTOS_HIGHEST_INTERRUPT_PRIORITY + 1);
   */
  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    415e:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  if ((int32_t)(IRQn) >= 0)
    4160:	2b00      	cmp	r3, #0
    4162:	db08      	blt.n	4176 <lpc_peripheral__enable_interrupt+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    4164:	2201      	movs	r2, #1
    4166:	f000 001f 	and.w	r0, r0, #31
    416a:	fa02 f000 	lsl.w	r0, r2, r0
    416e:	095b      	lsrs	r3, r3, #5
    4170:	4a02      	ldr	r2, [pc, #8]	; (417c <lpc_peripheral__enable_interrupt+0x24>)
    4172:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:161
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    4176:	4770      	bx	lr
    4178:	100000a0 	.word	0x100000a0
    417c:	e000e100 	.word	0xe000e100

00004180 <ssp2__dma_transfer_block>:
ssp2__dma_transfer_block():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:111
  // These registers are only initialized once, but this optimization makes no measurable difference
  // ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  // ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
}

ssp_dma_error_e ssp2__dma_transfer_block(unsigned char *buffer_pointer, uint32_t num_bytes, bool is_write_op) {
    4180:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:112
  uint32_t dummyBuffer = 0xffffffff;
    4182:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:115

  // DMA is limited to 12-bit transfer size
  if (num_bytes >= 0x1000) {
    4186:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:112
  uint32_t dummyBuffer = 0xffffffff;
    418a:	9301      	str	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:115
  if (num_bytes >= 0x1000) {
    418c:	d236      	bcs.n	41fc <ssp2__dma_transfer_block+0x7c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:120
    return SSP_DMA__ERROR_LENGTH;
  }

  // DMA channels should not be busy
  if ((ssp2__dma_tx->CConfig & 1) || (ssp2__dma_rx->CConfig & 1)) {
    418e:	4c1d      	ldr	r4, [pc, #116]	; (4204 <ssp2__dma_transfer_block+0x84>)
    4190:	6923      	ldr	r3, [r4, #16]
    4192:	07de      	lsls	r6, r3, #31
    4194:	d434      	bmi.n	4200 <ssp2__dma_transfer_block+0x80>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:120 (discriminator 1)
    4196:	4b1c      	ldr	r3, [pc, #112]	; (4208 <ssp2__dma_transfer_block+0x88>)
    4198:	691d      	ldr	r5, [r3, #16]
    419a:	07ed      	lsls	r5, r5, #31
    419c:	d430      	bmi.n	4200 <ssp2__dma_transfer_block+0x80>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:170

  /**
   * Clear existing terminal count and error interrupts otherwise
   * DMA will not start.
   */
  LPC_GPDMA->IntTCClear = (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
    419e:	4d1b      	ldr	r5, [pc, #108]	; (420c <ssp2__dma_transfer_block+0x8c>)
    41a0:	2603      	movs	r6, #3
    41a2:	60ae      	str	r6, [r5, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:171
  LPC_GPDMA->IntErrClr = (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
    41a4:	612e      	str	r6, [r5, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:184
   *      - Read data into buffer_pointer
   *      - Increment destination
   *
   * Note: Setting destination burst of 2 or 4 bytes makes no difference (1 << 15)
   */
  ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
    41a6:	4d1a      	ldr	r5, [pc, #104]	; (4210 <ssp2__dma_transfer_block+0x90>)
    41a8:	601d      	str	r5, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:185
  if (is_write_op) {
    41aa:	b302      	cbz	r2, 41ee <ssp2__dma_transfer_block+0x6e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:186
    ssp2__dma_rx->CDestAddr = (uint32_t)(&dummyBuffer);
    41ac:	ae01      	add	r6, sp, #4
    41ae:	605e      	str	r6, [r3, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:187
    ssp2__dma_rx->CControl = num_bytes | terminal_count_interrupt_enable;
    41b0:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:190
  } else {
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address | terminal_count_interrupt_enable;
    41b4:	60de      	str	r6, [r3, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:192
  }
  ssp2__dma_rx->CConfig = (SSP2__DMA_REQUEST_RX << 1) | transfer_peripheral_to_memory | dma_enable;
    41b6:	f241 060f 	movw	r6, #4111	; 0x100f
    41ba:	611e      	str	r6, [r3, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:203
   *      - Increment source data
   * For read operation:
   *      - Source data is buffer with 0xFF
   *      - Don't increment source data
   */
  if (is_write_op) {
    41bc:	b1da      	cbz	r2, 41f6 <ssp2__dma_transfer_block+0x76>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:204
    ssp2__dma_tx->CSrcAddr = (uint32_t)(buffer_pointer);
    41be:	6020      	str	r0, [r4, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:205
    ssp2__dma_tx->CControl = num_bytes | increment_source_address;
    41c0:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:211
  } else {
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    ssp2__dma_tx->CControl = num_bytes;
  }
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  ssp2__dma_tx->CConfig = (SSP2__DMA_REQUEST_TX << 6) | transfer_memory_to_peripheral | dma_enable;
    41c4:	f640 1281 	movw	r2, #2433	; 0x981
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:208
    ssp2__dma_tx->CControl = num_bytes;
    41c8:	60e1      	str	r1, [r4, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:210
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
    41ca:	6065      	str	r5, [r4, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:211
  ssp2__dma_tx->CConfig = (SSP2__DMA_REQUEST_TX << 6) | transfer_memory_to_peripheral | dma_enable;
    41cc:	6122      	str	r2, [r4, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:218
  /**
   * Channel must be fully configured and then enabled separately.
   * Setting DMACR's Rx/Tx bits should trigger the DMA
   */
  static const uint32_t enable_rx_tx_dma_triggers = 0x03;
  LPC_SSP2->DMACR |= enable_rx_tx_dma_triggers;
    41ce:	4a11      	ldr	r2, [pc, #68]	; (4214 <ssp2__dma_transfer_block+0x94>)
    41d0:	6a51      	ldr	r1, [r2, #36]	; 0x24
    41d2:	f041 0103 	orr.w	r1, r1, #3
    41d6:	6251      	str	r1, [r2, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:220 (discriminator 1)

  while ((ssp2__dma_rx->CControl & 0xfff)) {
    41d8:	68d8      	ldr	r0, [r3, #12]
    41da:	f3c0 000b 	ubfx	r0, r0, #0, #12
    41de:	2800      	cmp	r0, #0
    41e0:	d1fa      	bne.n	41d8 <ssp2__dma_transfer_block+0x58>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:223
    ; // Poll for DMA transfer to complete
  }
  LPC_SSP2->DMACR &= ~enable_rx_tx_dma_triggers;
    41e2:	6a53      	ldr	r3, [r2, #36]	; 0x24
    41e4:	f023 0303 	bic.w	r3, r3, #3
    41e8:	6253      	str	r3, [r2, #36]	; 0x24
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:226

  return SSP_DMA__ERROR_NONE;
    41ea:	b002      	add	sp, #8
    41ec:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:189
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    41ee:	6058      	str	r0, [r3, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:190
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address | terminal_count_interrupt_enable;
    41f0:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
    41f4:	e7de      	b.n	41b4 <ssp2__dma_transfer_block+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:207
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    41f6:	aa01      	add	r2, sp, #4
    41f8:	6022      	str	r2, [r4, #0]
    41fa:	e7e3      	b.n	41c4 <ssp2__dma_transfer_block+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:116
    return SSP_DMA__ERROR_LENGTH;
    41fc:	2001      	movs	r0, #1
    41fe:	e7f4      	b.n	41ea <ssp2__dma_transfer_block+0x6a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:121
    return SSP_DMA__ERROR_BUSY;
    4200:	2002      	movs	r0, #2
    4202:	e7f2      	b.n	41ea <ssp2__dma_transfer_block+0x6a>
    4204:	20080100 	.word	0x20080100
    4208:	20080120 	.word	0x20080120
    420c:	20080000 	.word	0x20080000
    4210:	400ac008 	.word	0x400ac008
    4214:	400ac000 	.word	0x400ac000

00004218 <ssp2__set_max_clock>:
ssp2__set_max_clock():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:61
void ssp2__set_max_clock(uint32_t max_clock_khz) {
    4218:	b510      	push	{r4, lr}
    421a:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:63
  const uint32_t cpu_clock_khz = clock__get_core_clock_hz() / 1000UL;
    421c:	f7fb fffe 	bl	21c <clock__get_core_clock_hz>
    4220:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    4224:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:62
  uint8_t divider = 2;
    4228:	2302      	movs	r3, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:66
  while (max_clock_khz < (cpu_clock_khz / divider) && divider <= 254) {
    422a:	fbb0 f2f3 	udiv	r2, r0, r3
    422e:	42a2      	cmp	r2, r4
    4230:	d802      	bhi.n	4238 <ssp2__set_max_clock+0x20>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:70
  LPC_SSP2->CPSR = divider;
    4232:	4a03      	ldr	r2, [pc, #12]	; (4240 <ssp2__set_max_clock+0x28>)
    4234:	6113      	str	r3, [r2, #16]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:71
}
    4236:	bd10      	pop	{r4, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:67
    divider += 2;
    4238:	3302      	adds	r3, #2
    423a:	b2db      	uxtb	r3, r3
    423c:	e7f5      	b.n	422a <ssp2__set_max_clock+0x12>
    423e:	bf00      	nop
    4240:	400ac000 	.word	0x400ac000

00004244 <ssp2__initialize>:
ssp2__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:51
void ssp2__initialize(uint32_t max_clock_khz) {
    4244:	b510      	push	{r4, lr}
    4246:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:52
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__SSP2);
    4248:	2024      	movs	r0, #36	; 0x24
    424a:	f7ff ff61 	bl	4110 <lpc_peripheral__turn_on_power_to>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:54
  LPC_SSP2->CR0 = 7;        // 8-bit mode
    424e:	4b0b      	ldr	r3, [pc, #44]	; (427c <ssp2__initialize+0x38>)
    4250:	2207      	movs	r2, #7
    4252:	601a      	str	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:55
  LPC_SSP2->CR1 = (1 << 1); // Enable SSP as Master
    4254:	2202      	movs	r2, #2
    4256:	605a      	str	r2, [r3, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:56
  ssp2__set_max_clock(max_clock_khz);
    4258:	4620      	mov	r0, r4
    425a:	f7ff ffdd 	bl	4218 <ssp2__set_max_clock>
ssp2__dma_init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:94
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__GPDMA);
    425e:	201a      	movs	r0, #26
    4260:	f7ff ff56 	bl	4110 <lpc_peripheral__turn_on_power_to>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:97
  LPC_GPDMA->Config = enable_bitmask;
    4264:	4b06      	ldr	r3, [pc, #24]	; (4280 <ssp2__initialize+0x3c>)
    4266:	2201      	movs	r2, #1
    4268:	631a      	str	r2, [r3, #48]	; 0x30
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:98
  while (!(LPC_GPDMA->Config & enable_bitmask)) {
    426a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    426c:	07d2      	lsls	r2, r2, #31
    426e:	d5fc      	bpl.n	426a <ssp2__initialize+0x26>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:103
  ssp2__dma_rx->CLLI = 0;
    4270:	4a04      	ldr	r2, [pc, #16]	; (4284 <ssp2__initialize+0x40>)
    4272:	2300      	movs	r3, #0
    4274:	6093      	str	r3, [r2, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:104
  ssp2__dma_tx->CLLI = 0;
    4276:	f842 3c18 	str.w	r3, [r2, #-24]
ssp2__initialize():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:59
}
    427a:	bd10      	pop	{r4, pc}
    427c:	400ac000 	.word	0x400ac000
    4280:	20080000 	.word	0x20080000
    4284:	20080120 	.word	0x20080120

00004288 <ssp2__exchange_byte>:
ssp2__exchange_byte():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:74
  LPC_SSP2->DR = byte_to_transmit;
    4288:	4b03      	ldr	r3, [pc, #12]	; (4298 <ssp2__exchange_byte+0x10>)
    428a:	6098      	str	r0, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:76 (discriminator 1)
  while (LPC_SSP2->SR & (1 << 4)) {
    428c:	68da      	ldr	r2, [r3, #12]
    428e:	06d2      	lsls	r2, r2, #27
    4290:	d4fc      	bmi.n	428c <ssp2__exchange_byte+0x4>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:80
  return (uint8_t)(LPC_SSP2->DR & 0xFF);
    4292:	6898      	ldr	r0, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:81
}
    4294:	b2c0      	uxtb	r0, r0
    4296:	4770      	bx	lr
    4298:	400ac000 	.word	0x400ac000

0000429c <ssp2__dma_write_block>:
ssp2__dma_write_block():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:85
  ssp2__dma_transfer_block((unsigned char *)output_block, number_of_bytes, is_write_operation);
    429c:	2201      	movs	r2, #1
    429e:	f7ff bf6f 	b.w	4180 <ssp2__dma_transfer_block>

000042a2 <ssp2__dma_read_block>:
ssp2__dma_read_block():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/ssp2.c:90
  ssp2__dma_transfer_block(input_block, number_of_bytes, !is_write_operation);
    42a2:	2200      	movs	r2, #0
    42a4:	f7ff bf6c 	b.w	4180 <ssp2__dma_transfer_block>

000042a8 <uart__isr_common>:
uart__isr_common():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:142
    transmitter_empty = (1 << 0),
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason = (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    42a8:	6802      	ldr	r2, [r0, #0]
    42aa:	6893      	ldr	r3, [r2, #8]
    42ac:	f3c3 0342 	ubfx	r3, r3, #1, #3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:144

  switch (interrupt_reason) {
    42b0:	2b02      	cmp	r3, #2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:132
static void uart__isr_common(uart_s *uart_type) {
    42b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    42b4:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:144
  switch (interrupt_reason) {
    42b6:	d023      	beq.n	4300 <uart__isr_common+0x58>
    42b8:	2b06      	cmp	r3, #6
    42ba:	d021      	beq.n	4300 <uart__isr_common+0x58>
    42bc:	2b01      	cmp	r3, #1
    42be:	d134      	bne.n	432a <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:73
  char transmit_byte = 0;
    42c0:	2400      	movs	r4, #0
    42c2:	f88d 4003 	strb.w	r4, [sp, #3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:75
  BaseType_t higher_priority_task_woke = 0;
    42c6:	9401      	str	r4, [sp, #4]
    42c8:	2510      	movs	r5, #16
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:78
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte, &higher_priority_task_woke)) {
    42ca:	aa01      	add	r2, sp, #4
    42cc:	f10d 0103 	add.w	r1, sp, #3
    42d0:	6870      	ldr	r0, [r6, #4]
    42d2:	f7fe fb8d 	bl	29f0 <xQueueReceiveFromISR>
    42d6:	b148      	cbz	r0, 42ec <uart__isr_common+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:79
      uart_type->registers->THR = transmit_byte;
    42d8:	6833      	ldr	r3, [r6, #0]
    42da:	f89d 2003 	ldrb.w	r2, [sp, #3]
    42de:	701a      	strb	r2, [r3, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:80
      if (higher_priority_task_woke) {
    42e0:	9b01      	ldr	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:81
        context_switch_required = true;
    42e2:	2b00      	cmp	r3, #0
    42e4:	bf18      	it	ne
    42e6:	2401      	movne	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:77
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    42e8:	3d01      	subs	r5, #1
    42ea:	d1ee      	bne.n	42ca <uart__isr_common+0x22>
uart__isr_common():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:161
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    42ec:	b30c      	cbz	r4, 4332 <uart__isr_common+0x8a>
    42ee:	4b12      	ldr	r3, [pc, #72]	; (4338 <uart__isr_common+0x90>)
    42f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    42f4:	601a      	str	r2, [r3, #0]
    42f6:	f3bf 8f4f 	dsb	sy
    42fa:	f3bf 8f6f 	isb	sy
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:162
}
    42fe:	e018      	b.n	4332 <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:95
  BaseType_t higher_priority_task_woke = 0;
    4300:	2400      	movs	r4, #0
    4302:	9401      	str	r4, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:101
  while (uart_type->registers->LSR & char_available_bitmask) {
    4304:	6833      	ldr	r3, [r6, #0]
    4306:	7d1a      	ldrb	r2, [r3, #20]
    4308:	07d2      	lsls	r2, r2, #31
    430a:	d5ef      	bpl.n	42ec <uart__isr_common+0x44>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:102
    const char received_byte = uart_type->registers->RBR;
    430c:	781b      	ldrb	r3, [r3, #0]
    430e:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:103
    xQueueSendFromISR(uart_type->queue_receive, &received_byte, &higher_priority_task_woke);
    4312:	aa01      	add	r2, sp, #4
    4314:	2300      	movs	r3, #0
    4316:	f10d 0103 	add.w	r1, sp, #3
    431a:	68b0      	ldr	r0, [r6, #8]
    431c:	f7fe f95a 	bl	25d4 <xQueueGenericSendFromISR>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:105
    if (higher_priority_task_woke) {
    4320:	9b01      	ldr	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:106
      context_switch_required = true;
    4322:	2b00      	cmp	r3, #0
    4324:	bf18      	it	ne
    4326:	2401      	movne	r4, #1
    4328:	e7ec      	b.n	4304 <uart__isr_common+0x5c>
uart__isr_common():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:155
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    432a:	7d13      	ldrb	r3, [r2, #20]
    432c:	b2db      	uxtb	r3, r3
    432e:	9301      	str	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:156
    (void)unused_to_clear_isr;
    4330:	9b01      	ldr	r3, [sp, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:162
}
    4332:	b002      	add	sp, #8
    4334:	bd70      	pop	{r4, r5, r6, pc}
    4336:	bf00      	nop
    4338:	e000ed04 	.word	0xe000ed04

0000433c <uart3_isr>:
uart3_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:130
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    433c:	4801      	ldr	r0, [pc, #4]	; (4344 <uart3_isr+0x8>)
    433e:	f7ff bfb3 	b.w	42a8 <uart__isr_common>
    4342:	bf00      	nop
    4344:	10000168 	.word	0x10000168

00004348 <uart2_isr>:
uart2_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:129
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    4348:	4801      	ldr	r0, [pc, #4]	; (4350 <uart2_isr+0x8>)
    434a:	f7ff bfad 	b.w	42a8 <uart__isr_common>
    434e:	bf00      	nop
    4350:	1000015c 	.word	0x1000015c

00004354 <uart1_isr>:
uart1_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:128
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    4354:	4801      	ldr	r0, [pc, #4]	; (435c <uart1_isr+0x8>)
    4356:	f7ff bfa7 	b.w	42a8 <uart__isr_common>
    435a:	bf00      	nop
    435c:	10000150 	.word	0x10000150

00004360 <uart0_isr>:
uart0_isr():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:127
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    4360:	4801      	ldr	r0, [pc, #4]	; (4368 <uart0_isr+0x8>)
    4362:	f7ff bfa1 	b.w	42a8 <uart__isr_common>
    4366:	bf00      	nop
    4368:	10000144 	.word	0x10000144

0000436c <uart__init>:
uart__init():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:171
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    436c:	4b13      	ldr	r3, [pc, #76]	; (43bc <uart__init+0x50>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:170
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    436e:	b570      	push	{r4, r5, r6, lr}
    4370:	4615      	mov	r5, r2
    4372:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:171
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    4374:	5c18      	ldrb	r0, [r3, r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:170
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    4376:	460c      	mov	r4, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:174

  const float roundup_offset = 0.5;
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    4378:	012d      	lsls	r5, r5, #4
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:171
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    437a:	f7ff fec9 	bl	4110 <lpc_peripheral__turn_on_power_to>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:174
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    437e:	fbb4 f3f5 	udiv	r3, r4, r5
    4382:	ee07 3a90 	vmov	s15, r3
    4386:	eef8 7a67 	vcvt.f32.u32	s15, s15
    438a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    438e:	ee77 7a87 	vadd.f32	s15, s15, s14
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:181
  const uint8_t eight_bit_datalen = 3;

  // 2-stop bits helps improve baud rate error; you can remove this if bandwidth is critical to you
  const uint8_t stop_bits_is_2 = (1 << 2);

  lpc_uart *uart_regs = uarts[uart].registers;
    4392:	200c      	movs	r0, #12
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:174
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    4394:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:181
  lpc_uart *uart_regs = uarts[uart].registers;
    4398:	4370      	muls	r0, r6
    439a:	4a09      	ldr	r2, [pc, #36]	; (43c0 <uart__init+0x54>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:174
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    439c:	ee17 3a90 	vmov	r3, s15
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:181
  lpc_uart *uart_regs = uarts[uart].registers;
    43a0:	5812      	ldr	r2, [r2, r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:174
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    43a2:	b29b      	uxth	r3, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:183

  uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    43a4:	2180      	movs	r1, #128	; 0x80
    43a6:	7311      	strb	r1, [r2, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:184
  uart_regs->DLM = (divider >> 8) & 0xFF;
    43a8:	0a19      	lsrs	r1, r3, #8
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:185
  uart_regs->DLL = (divider >> 0) & 0xFF;
    43aa:	b2db      	uxtb	r3, r3
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:184
  uart_regs->DLM = (divider >> 8) & 0xFF;
    43ac:	7111      	strb	r1, [r2, #4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:185
  uart_regs->DLL = (divider >> 0) & 0xFF;
    43ae:	7013      	strb	r3, [r2, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:191

  /* Bootloader uses Uart0 fractional dividers and can wreck havoc in our baud rate code, so re-initialize it
   * Lesson learned: DO NOT RELY ON RESET VALUES
   */
  const uint32_t default_reset_fdr_value = (1 << 4);
  uart_regs->FDR = default_reset_fdr_value;
    43b0:	2310      	movs	r3, #16
    43b2:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:192
  uart_regs->LCR = eight_bit_datalen | stop_bits_is_2; // DLAB is reset back to zero also
    43b6:	2307      	movs	r3, #7
    43b8:	7313      	strb	r3, [r2, #12]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:193
}
    43ba:	bd70      	pop	{r4, r5, r6, pc}
    43bc:	0000ba00 	.word	0x0000ba00
    43c0:	10000144 	.word	0x10000144

000043c4 <uart__is_initialized>:
uart__is_initialized():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:196

bool uart__is_initialized(uart_e uart) {
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) && (0 != uarts[uart].registers->LCR);
    43c4:	4b07      	ldr	r3, [pc, #28]	; (43e4 <uart__is_initialized+0x20>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:195
bool uart__is_initialized(uart_e uart) {
    43c6:	b510      	push	{r4, lr}
    43c8:	4604      	mov	r4, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:196
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) && (0 != uarts[uart].registers->LCR);
    43ca:	5c18      	ldrb	r0, [r3, r0]
    43cc:	f7ff feb2 	bl	4134 <lpc_peripheral__is_powered_on>
    43d0:	b138      	cbz	r0, 43e2 <uart__is_initialized+0x1e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:196 (discriminator 1)
    43d2:	200c      	movs	r0, #12
    43d4:	4360      	muls	r0, r4
    43d6:	4b04      	ldr	r3, [pc, #16]	; (43e8 <uart__is_initialized+0x24>)
    43d8:	581b      	ldr	r3, [r3, r0]
    43da:	7b18      	ldrb	r0, [r3, #12]
    43dc:	3000      	adds	r0, #0
    43de:	bf18      	it	ne
    43e0:	2001      	movne	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:197 (discriminator 6)
}
    43e2:	bd10      	pop	{r4, pc}
    43e4:	0000ba00 	.word	0x0000ba00
    43e8:	10000144 	.word	0x10000144

000043ec <uart__is_transmit_queue_initialized>:
uart__is_transmit_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    43ec:	4a04      	ldr	r2, [pc, #16]	; (4400 <uart__is_transmit_queue_initialized+0x14>)
    43ee:	230c      	movs	r3, #12
    43f0:	fb03 2000 	mla	r0, r3, r0, r2
    43f4:	6840      	ldr	r0, [r0, #4]
uart__is_transmit_queue_initialized():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:199

bool uart__is_transmit_queue_initialized(uart_e uart) { return uart__is_transmit_queue_enabled(uart); }
    43f6:	3000      	adds	r0, #0
    43f8:	bf18      	it	ne
    43fa:	2001      	movne	r0, #1
    43fc:	4770      	bx	lr
    43fe:	bf00      	nop
    4400:	10000144 	.word	0x10000144

00004404 <uart__enable_queues>:
uart__enable_queues():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:201

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive, QueueHandle_t queue_transmit) {
    4404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    4408:	4605      	mov	r5, r0
    440a:	4688      	mov	r8, r1
    440c:	4616      	mov	r6, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:206
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    440e:	f7ff ffd9 	bl	43c4 <uart__is_initialized>
    4412:	4607      	mov	r7, r0
    4414:	b918      	cbnz	r0, 441e <uart__enable_queues+0x1a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:202
  bool status = false;
    4416:	2700      	movs	r7, #0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:226
      uart__enable_receive_and_transmit_interrupts(uart);
    }
  }

  return status;
}
    4418:	4638      	mov	r0, r7
    441a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
uart__is_receive_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    441e:	4c15      	ldr	r4, [pc, #84]	; (4474 <uart__enable_queues+0x70>)
    4420:	230c      	movs	r3, #12
    4422:	fb03 4305 	mla	r3, r3, r5, r4
uart__enable_queues():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:208
    if (!uart__is_receive_queue_enabled(uart) && NULL != queue_receive) {
    4426:	689a      	ldr	r2, [r3, #8]
    4428:	b922      	cbnz	r2, 4434 <uart__enable_queues+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:208 (discriminator 1)
    442a:	f1b8 0f00 	cmp.w	r8, #0
    442e:	d001      	beq.n	4434 <uart__enable_queues+0x30>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:209
      uart_type->queue_receive = queue_receive;
    4430:	f8c3 8008 	str.w	r8, [r3, #8]
uart__is_transmit_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    4434:	230c      	movs	r3, #12
    4436:	fb03 4305 	mla	r3, r3, r5, r4
uart__enable_queues():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:213
    if (!uart__is_transmit_queue_enabled(uart) && NULL != queue_transmit) {
    443a:	685a      	ldr	r2, [r3, #4]
    443c:	b90a      	cbnz	r2, 4442 <uart__enable_queues+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:213 (discriminator 1)
    443e:	b106      	cbz	r6, 4442 <uart__enable_queues+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:214
      uart_type->queue_transmit = queue_transmit;
    4440:	605e      	str	r6, [r3, #4]
uart__is_receive_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    4442:	260c      	movs	r6, #12
    4444:	436e      	muls	r6, r5
    4446:	19a3      	adds	r3, r4, r6
uart__enable_queues():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:219
    status = uart__is_receive_queue_enabled(uart) && uart__is_transmit_queue_enabled(uart);
    4448:	689a      	ldr	r2, [r3, #8]
    444a:	2a00      	cmp	r2, #0
    444c:	d0e3      	beq.n	4416 <uart__enable_queues+0x12>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:220
    if (status) {
    444e:	685b      	ldr	r3, [r3, #4]
    4450:	2b00      	cmp	r3, #0
    4452:	d0e0      	beq.n	4416 <uart__enable_queues+0x12>
uart__enable_receive_and_transmit_interrupts():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:115
  lpc_peripheral__enable_interrupt(uart_peripheral_ids[uart], uart__isrs[uart]);
    4454:	4b08      	ldr	r3, [pc, #32]	; (4478 <uart__enable_queues+0x74>)
    4456:	f853 1025 	ldr.w	r1, [r3, r5, lsl #2]
    445a:	4b08      	ldr	r3, [pc, #32]	; (447c <uart__enable_queues+0x78>)
    445c:	5d58      	ldrb	r0, [r3, r5]
    445e:	f7ff fe7b 	bl	4158 <lpc_peripheral__enable_interrupt>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:120
  uart_type->registers->FCR = enable_rx_tx_fifo;
    4462:	59a3      	ldr	r3, [r4, r6]
    4464:	2241      	movs	r2, #65	; 0x41
    4466:	721a      	strb	r2, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:121
  uart_type->registers->FCR = reset_rx_tx_fifo;
    4468:	2206      	movs	r2, #6
    446a:	721a      	strb	r2, [r3, #8]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:124
  uart_type->registers->IER = enable_rx_tx_interrupts;
    446c:	2207      	movs	r2, #7
    446e:	605a      	str	r2, [r3, #4]
    4470:	e7d2      	b.n	4418 <uart__enable_queues+0x14>
    4472:	bf00      	nop
    4474:	10000144 	.word	0x10000144
    4478:	0000b9f0 	.word	0x0000b9f0
    447c:	0000ba00 	.word	0x0000ba00

00004480 <uart__polled_put>:
uart__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:256
  }

  return status;
}

bool uart__polled_put(uart_e uart, char output_byte) {
    4480:	b538      	push	{r3, r4, r5, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:258
  bool status = false;
  lpc_uart *uart_regs = uarts[uart].registers;
    4482:	230c      	movs	r3, #12
    4484:	4343      	muls	r3, r0
    4486:	4a07      	ldr	r2, [pc, #28]	; (44a4 <uart__polled_put+0x24>)
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:256
bool uart__polled_put(uart_e uart, char output_byte) {
    4488:	460d      	mov	r5, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:258
  lpc_uart *uart_regs = uarts[uart].registers;
    448a:	58d4      	ldr	r4, [r2, r3]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:260

  if (uart__is_initialized(uart)) {
    448c:	f7ff ff9a 	bl	43c4 <uart__is_initialized>
    4490:	b130      	cbz	r0, 44a0 <uart__polled_put+0x20>
uart__wait_for_transmit_to_complete():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    4492:	7d23      	ldrb	r3, [r4, #20]
    4494:	069a      	lsls	r2, r3, #26
    4496:	d5fc      	bpl.n	4492 <uart__polled_put+0x12>
uart__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:265
    status = true;

    // Wait for any prior transmission to complete
    uart__wait_for_transmit_to_complete(uart_regs);
    uart_regs->THR = output_byte;
    4498:	7025      	strb	r5, [r4, #0]
uart__wait_for_transmit_to_complete():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    449a:	7d23      	ldrb	r3, [r4, #20]
    449c:	069b      	lsls	r3, r3, #26
    449e:	d5fc      	bpl.n	449a <uart__polled_put+0x1a>
uart__polled_put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:270
    uart__wait_for_transmit_to_complete(uart_regs);
  }

  return status;
}
    44a0:	bd38      	pop	{r3, r4, r5, pc}
    44a2:	bf00      	nop
    44a4:	10000144 	.word	0x10000144

000044a8 <uart__get>:
uart__get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:272

bool uart__get(uart_e uart, char *input_byte, uint32_t timeout_ms) {
    44a8:	b570      	push	{r4, r5, r6, lr}
    44aa:	4604      	mov	r4, r0
    44ac:	4615      	mov	r5, r2
    44ae:	460e      	mov	r6, r1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:274
  bool status = false;
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    44b0:	f7ff f90c 	bl	36cc <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    44b4:	4b0f      	ldr	r3, [pc, #60]	; (44f4 <uart__get+0x4c>)
    44b6:	220c      	movs	r2, #12
    44b8:	fb02 3404 	mla	r4, r2, r4, r3
    44bc:	68a4      	ldr	r4, [r4, #8]
uart__get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:280

  /* If a user calls this function without the RTOS running, we fail gracefully.
   * We do not desire to perform polling because that would involve time keeping
   * without an RTOS which increases the driver complexity.
   */
  if (uart__is_receive_queue_enabled(uart) && rtos_is_running) {
    44be:	b1b4      	cbz	r4, 44ee <uart__get+0x46>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:280 (discriminator 1)
    44c0:	2802      	cmp	r0, #2
    44c2:	d114      	bne.n	44ee <uart__get+0x46>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:281
    status = xQueueReceive(uarts[uart].queue_receive, input_byte, RTOS_MS_TO_TICKS(timeout_ms));
    44c4:	1c6b      	adds	r3, r5, #1
    44c6:	d009      	beq.n	44dc <uart__get+0x34>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:281 (discriminator 1)
    44c8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    44cc:	fba5 0100 	umull	r0, r1, r5, r0
    44d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    44d4:	2300      	movs	r3, #0
    44d6:	f000 fc6b 	bl	4db0 <__aeabi_uldivmod>
    44da:	4605      	mov	r5, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:281 (discriminator 4)
    44dc:	462a      	mov	r2, r5
    44de:	4631      	mov	r1, r6
    44e0:	4620      	mov	r0, r4
    44e2:	f7fe f927 	bl	2734 <xQueueReceive>
    44e6:	3000      	adds	r0, #0
    44e8:	bf18      	it	ne
    44ea:	2001      	movne	r0, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:285
  }

  return status;
}
    44ec:	bd70      	pop	{r4, r5, r6, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:273
  bool status = false;
    44ee:	2000      	movs	r0, #0
    44f0:	e7fc      	b.n	44ec <uart__get+0x44>
    44f2:	bf00      	nop
    44f4:	10000144 	.word	0x10000144

000044f8 <uart__polled_get>:
uart__polled_get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:228
bool uart__polled_get(uart_e uart, char *input_byte) {
    44f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    44fc:	4606      	mov	r6, r0
    44fe:	460f      	mov	r7, r1
uart__is_receive_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    4500:	4d12      	ldr	r5, [pc, #72]	; (454c <uart__polled_get+0x54>)
uart__polled_get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:231
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4502:	f7ff f8e3 	bl	36cc <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    4506:	240c      	movs	r4, #12
    4508:	fb04 5306 	mla	r3, r4, r6, r5
uart__polled_get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:231
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    450c:	4681      	mov	r9, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:234
  if (uart__is_initialized(uart)) {
    450e:	4630      	mov	r0, r6
uart__is_receive_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    4510:	f8d3 8008 	ldr.w	r8, [r3, #8]
uart__polled_get():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:234
  if (uart__is_initialized(uart)) {
    4514:	f7ff ff56 	bl	43c4 <uart__is_initialized>
    4518:	b1a0      	cbz	r0, 4544 <uart__polled_get+0x4c>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:241
    if (rtos_is_running && queue_is_enabled) {
    451a:	f1b9 0f02 	cmp.w	r9, #2
    451e:	d10a      	bne.n	4536 <uart__polled_get+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:241 (discriminator 1)
    4520:	f1b8 0f00 	cmp.w	r8, #0
    4524:	d007      	beq.n	4536 <uart__polled_get+0x3e>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:242
      status = uart__get(uart, input_byte, UINT32_MAX);
    4526:	4639      	mov	r1, r7
    4528:	4630      	mov	r0, r6
    452a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:254
}
    452e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:242
      status = uart__get(uart, input_byte, UINT32_MAX);
    4532:	f7ff bfb9 	b.w	44a8 <uart__get>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:244
      lpc_uart *uart_regs = uarts[uart].registers;
    4536:	4374      	muls	r4, r6
    4538:	592b      	ldr	r3, [r5, r4]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:247 (discriminator 1)
      while (!(uart_regs->LSR & char_available_bitmask)) {
    453a:	7d1a      	ldrb	r2, [r3, #20]
    453c:	07d2      	lsls	r2, r2, #31
    453e:	d5fc      	bpl.n	453a <uart__polled_get+0x42>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:249
      *input_byte = uart_regs->RBR;
    4540:	781b      	ldrb	r3, [r3, #0]
    4542:	703b      	strb	r3, [r7, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:254
}
    4544:	2000      	movs	r0, #0
    4546:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    454a:	bf00      	nop
    454c:	10000144 	.word	0x10000144

00004550 <uart__put>:
uart__put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:287

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4550:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
uart__is_transmit_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    4552:	4d1f      	ldr	r5, [pc, #124]	; (45d0 <uart__put+0x80>)
uart__put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:287
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4554:	f88d 1007 	strb.w	r1, [sp, #7]
    4558:	4607      	mov	r7, r0
    455a:	4616      	mov	r6, r2
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:289
  bool status = false;
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    455c:	f7ff f8b6 	bl	36cc <xTaskGetSchedulerState>
uart__is_transmit_queue_enabled():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    4560:	230c      	movs	r3, #12
    4562:	fb03 5307 	mla	r3, r3, r7, r5
    4566:	685c      	ldr	r4, [r3, #4]
uart__put():
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:291

  if (uart__is_transmit_queue_enabled(uart) && rtos_is_running) {
    4568:	b364      	cbz	r4, 45c4 <uart__put+0x74>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:291 (discriminator 1)
    456a:	2802      	cmp	r0, #2
    456c:	d12d      	bne.n	45ca <uart__put+0x7a>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:293
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte, RTOS_MS_TO_TICKS(timeout_ms));
    456e:	1c71      	adds	r1, r6, #1
    4570:	d009      	beq.n	4586 <uart__put+0x36>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:293 (discriminator 1)
    4572:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    4576:	fba6 0100 	umull	r0, r1, r6, r0
    457a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    457e:	2300      	movs	r3, #0
    4580:	f000 fc16 	bl	4db0 <__aeabi_uldivmod>
    4584:	4606      	mov	r6, r0
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:293 (discriminator 4)
    4586:	2300      	movs	r3, #0
    4588:	4632      	mov	r2, r6
    458a:	f10d 0107 	add.w	r1, sp, #7
    458e:	4620      	mov	r0, r4
    4590:	f7fd ff4a 	bl	2428 <xQueueGenericSend>
    4594:	1c04      	adds	r4, r0, #0
    4596:	bf18      	it	ne
    4598:	2401      	movne	r4, #1
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:299 (discriminator 4)

    /* 'Transmit Complete Interrupt' may have already fired when we get here, so if there is no further pending data
     * to be sent, it will not fire again to send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    459a:	f7fd fc6b 	bl	1e74 <vPortEnterCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:301 (discriminator 4)
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    459e:	200c      	movs	r0, #12
    45a0:	4378      	muls	r0, r7
    45a2:	182b      	adds	r3, r5, r0
    45a4:	582d      	ldr	r5, [r5, r0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:304 (discriminator 4)
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    45a6:	7d2a      	ldrb	r2, [r5, #20]
    45a8:	0652      	lsls	r2, r2, #25
    45aa:	d509      	bpl.n	45c0 <uart__put+0x70>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:308
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API  variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte, NULL)) {
    45ac:	2200      	movs	r2, #0
    45ae:	f10d 0107 	add.w	r1, sp, #7
    45b2:	6858      	ldr	r0, [r3, #4]
    45b4:	f7fe fa1c 	bl	29f0 <xQueueReceiveFromISR>
    45b8:	b110      	cbz	r0, 45c0 <uart__put+0x70>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:309
          uart_regs->THR = output_byte;
    45ba:	f89d 3007 	ldrb.w	r3, [sp, #7]
    45be:	702b      	strb	r3, [r5, #0]
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:313
        }
      }
    }
    portEXIT_CRITICAL();
    45c0:	f7fd fc7a 	bl	1eb8 <vPortExitCritical>
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:317
  }

  return status;
}
    45c4:	4620      	mov	r0, r4
    45c6:	b003      	add	sp, #12
    45c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/Jannas/sjtwo-c/lpc40xx_freertos/l3_drivers/sources/uart.c:288
  bool status = false;
    45ca:	2400      	movs	r4, #0
    45cc:	e7fa      	b.n	45c4 <uart__put+0x74>
    45ce:	bf00      	nop
    45d0:	10000144 	.word	0x10000144

000045d4 <__aeabi_drsub>:
__aeabi_drsub():
    45d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    45d8:	e002      	b.n	45e0 <__adddf3>
    45da:	bf00      	nop

000045dc <__aeabi_dsub>:
__subdf3():
    45dc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000045e0 <__adddf3>:
__aeabi_dadd():
    45e0:	b530      	push	{r4, r5, lr}
    45e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
    45e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
    45ea:	ea94 0f05 	teq	r4, r5
    45ee:	bf08      	it	eq
    45f0:	ea90 0f02 	teqeq	r0, r2
    45f4:	bf1f      	itttt	ne
    45f6:	ea54 0c00 	orrsne.w	ip, r4, r0
    45fa:	ea55 0c02 	orrsne.w	ip, r5, r2
    45fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    4602:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    4606:	f000 80e2 	beq.w	47ce <__adddf3+0x1ee>
    460a:	ea4f 5454 	mov.w	r4, r4, lsr #21
    460e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    4612:	bfb8      	it	lt
    4614:	426d      	neglt	r5, r5
    4616:	dd0c      	ble.n	4632 <__adddf3+0x52>
    4618:	442c      	add	r4, r5
    461a:	ea80 0202 	eor.w	r2, r0, r2
    461e:	ea81 0303 	eor.w	r3, r1, r3
    4622:	ea82 0000 	eor.w	r0, r2, r0
    4626:	ea83 0101 	eor.w	r1, r3, r1
    462a:	ea80 0202 	eor.w	r2, r0, r2
    462e:	ea81 0303 	eor.w	r3, r1, r3
    4632:	2d36      	cmp	r5, #54	; 0x36
    4634:	bf88      	it	hi
    4636:	bd30      	pophi	{r4, r5, pc}
    4638:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    463c:	ea4f 3101 	mov.w	r1, r1, lsl #12
    4640:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    4644:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    4648:	d002      	beq.n	4650 <__adddf3+0x70>
    464a:	4240      	negs	r0, r0
    464c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    4650:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    4654:	ea4f 3303 	mov.w	r3, r3, lsl #12
    4658:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    465c:	d002      	beq.n	4664 <__adddf3+0x84>
    465e:	4252      	negs	r2, r2
    4660:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    4664:	ea94 0f05 	teq	r4, r5
    4668:	f000 80a7 	beq.w	47ba <__adddf3+0x1da>
    466c:	f1a4 0401 	sub.w	r4, r4, #1
    4670:	f1d5 0e20 	rsbs	lr, r5, #32
    4674:	db0d      	blt.n	4692 <__adddf3+0xb2>
    4676:	fa02 fc0e 	lsl.w	ip, r2, lr
    467a:	fa22 f205 	lsr.w	r2, r2, r5
    467e:	1880      	adds	r0, r0, r2
    4680:	f141 0100 	adc.w	r1, r1, #0
    4684:	fa03 f20e 	lsl.w	r2, r3, lr
    4688:	1880      	adds	r0, r0, r2
    468a:	fa43 f305 	asr.w	r3, r3, r5
    468e:	4159      	adcs	r1, r3
    4690:	e00e      	b.n	46b0 <__adddf3+0xd0>
    4692:	f1a5 0520 	sub.w	r5, r5, #32
    4696:	f10e 0e20 	add.w	lr, lr, #32
    469a:	2a01      	cmp	r2, #1
    469c:	fa03 fc0e 	lsl.w	ip, r3, lr
    46a0:	bf28      	it	cs
    46a2:	f04c 0c02 	orrcs.w	ip, ip, #2
    46a6:	fa43 f305 	asr.w	r3, r3, r5
    46aa:	18c0      	adds	r0, r0, r3
    46ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    46b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    46b4:	d507      	bpl.n	46c6 <__adddf3+0xe6>
    46b6:	f04f 0e00 	mov.w	lr, #0
    46ba:	f1dc 0c00 	rsbs	ip, ip, #0
    46be:	eb7e 0000 	sbcs.w	r0, lr, r0
    46c2:	eb6e 0101 	sbc.w	r1, lr, r1
    46c6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    46ca:	d31b      	bcc.n	4704 <__adddf3+0x124>
    46cc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    46d0:	d30c      	bcc.n	46ec <__adddf3+0x10c>
    46d2:	0849      	lsrs	r1, r1, #1
    46d4:	ea5f 0030 	movs.w	r0, r0, rrx
    46d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
    46dc:	f104 0401 	add.w	r4, r4, #1
    46e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
    46e4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    46e8:	f080 809a 	bcs.w	4820 <__adddf3+0x240>
    46ec:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    46f0:	bf08      	it	eq
    46f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    46f6:	f150 0000 	adcs.w	r0, r0, #0
    46fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    46fe:	ea41 0105 	orr.w	r1, r1, r5
    4702:	bd30      	pop	{r4, r5, pc}
    4704:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    4708:	4140      	adcs	r0, r0
    470a:	eb41 0101 	adc.w	r1, r1, r1
    470e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4712:	f1a4 0401 	sub.w	r4, r4, #1
    4716:	d1e9      	bne.n	46ec <__adddf3+0x10c>
    4718:	f091 0f00 	teq	r1, #0
    471c:	bf04      	itt	eq
    471e:	4601      	moveq	r1, r0
    4720:	2000      	moveq	r0, #0
    4722:	fab1 f381 	clz	r3, r1
    4726:	bf08      	it	eq
    4728:	3320      	addeq	r3, #32
    472a:	f1a3 030b 	sub.w	r3, r3, #11
    472e:	f1b3 0220 	subs.w	r2, r3, #32
    4732:	da0c      	bge.n	474e <__adddf3+0x16e>
    4734:	320c      	adds	r2, #12
    4736:	dd08      	ble.n	474a <__adddf3+0x16a>
    4738:	f102 0c14 	add.w	ip, r2, #20
    473c:	f1c2 020c 	rsb	r2, r2, #12
    4740:	fa01 f00c 	lsl.w	r0, r1, ip
    4744:	fa21 f102 	lsr.w	r1, r1, r2
    4748:	e00c      	b.n	4764 <__adddf3+0x184>
    474a:	f102 0214 	add.w	r2, r2, #20
    474e:	bfd8      	it	le
    4750:	f1c2 0c20 	rsble	ip, r2, #32
    4754:	fa01 f102 	lsl.w	r1, r1, r2
    4758:	fa20 fc0c 	lsr.w	ip, r0, ip
    475c:	bfdc      	itt	le
    475e:	ea41 010c 	orrle.w	r1, r1, ip
    4762:	4090      	lslle	r0, r2
    4764:	1ae4      	subs	r4, r4, r3
    4766:	bfa2      	ittt	ge
    4768:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    476c:	4329      	orrge	r1, r5
    476e:	bd30      	popge	{r4, r5, pc}
    4770:	ea6f 0404 	mvn.w	r4, r4
    4774:	3c1f      	subs	r4, #31
    4776:	da1c      	bge.n	47b2 <__adddf3+0x1d2>
    4778:	340c      	adds	r4, #12
    477a:	dc0e      	bgt.n	479a <__adddf3+0x1ba>
    477c:	f104 0414 	add.w	r4, r4, #20
    4780:	f1c4 0220 	rsb	r2, r4, #32
    4784:	fa20 f004 	lsr.w	r0, r0, r4
    4788:	fa01 f302 	lsl.w	r3, r1, r2
    478c:	ea40 0003 	orr.w	r0, r0, r3
    4790:	fa21 f304 	lsr.w	r3, r1, r4
    4794:	ea45 0103 	orr.w	r1, r5, r3
    4798:	bd30      	pop	{r4, r5, pc}
    479a:	f1c4 040c 	rsb	r4, r4, #12
    479e:	f1c4 0220 	rsb	r2, r4, #32
    47a2:	fa20 f002 	lsr.w	r0, r0, r2
    47a6:	fa01 f304 	lsl.w	r3, r1, r4
    47aa:	ea40 0003 	orr.w	r0, r0, r3
    47ae:	4629      	mov	r1, r5
    47b0:	bd30      	pop	{r4, r5, pc}
    47b2:	fa21 f004 	lsr.w	r0, r1, r4
    47b6:	4629      	mov	r1, r5
    47b8:	bd30      	pop	{r4, r5, pc}
    47ba:	f094 0f00 	teq	r4, #0
    47be:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    47c2:	bf06      	itte	eq
    47c4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    47c8:	3401      	addeq	r4, #1
    47ca:	3d01      	subne	r5, #1
    47cc:	e74e      	b.n	466c <__adddf3+0x8c>
    47ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    47d2:	bf18      	it	ne
    47d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    47d8:	d029      	beq.n	482e <__adddf3+0x24e>
    47da:	ea94 0f05 	teq	r4, r5
    47de:	bf08      	it	eq
    47e0:	ea90 0f02 	teqeq	r0, r2
    47e4:	d005      	beq.n	47f2 <__adddf3+0x212>
    47e6:	ea54 0c00 	orrs.w	ip, r4, r0
    47ea:	bf04      	itt	eq
    47ec:	4619      	moveq	r1, r3
    47ee:	4610      	moveq	r0, r2
    47f0:	bd30      	pop	{r4, r5, pc}
    47f2:	ea91 0f03 	teq	r1, r3
    47f6:	bf1e      	ittt	ne
    47f8:	2100      	movne	r1, #0
    47fa:	2000      	movne	r0, #0
    47fc:	bd30      	popne	{r4, r5, pc}
    47fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    4802:	d105      	bne.n	4810 <__adddf3+0x230>
    4804:	0040      	lsls	r0, r0, #1
    4806:	4149      	adcs	r1, r1
    4808:	bf28      	it	cs
    480a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    480e:	bd30      	pop	{r4, r5, pc}
    4810:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    4814:	bf3c      	itt	cc
    4816:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    481a:	bd30      	popcc	{r4, r5, pc}
    481c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    4820:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    4824:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    4828:	f04f 0000 	mov.w	r0, #0
    482c:	bd30      	pop	{r4, r5, pc}
    482e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    4832:	bf1a      	itte	ne
    4834:	4619      	movne	r1, r3
    4836:	4610      	movne	r0, r2
    4838:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    483c:	bf1c      	itt	ne
    483e:	460b      	movne	r3, r1
    4840:	4602      	movne	r2, r0
    4842:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    4846:	bf06      	itte	eq
    4848:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    484c:	ea91 0f03 	teqeq	r1, r3
    4850:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    4854:	bd30      	pop	{r4, r5, pc}
    4856:	bf00      	nop

00004858 <__aeabi_ui2d>:
__floatunsidf():
    4858:	f090 0f00 	teq	r0, #0
    485c:	bf04      	itt	eq
    485e:	2100      	moveq	r1, #0
    4860:	4770      	bxeq	lr
    4862:	b530      	push	{r4, r5, lr}
    4864:	f44f 6480 	mov.w	r4, #1024	; 0x400
    4868:	f104 0432 	add.w	r4, r4, #50	; 0x32
    486c:	f04f 0500 	mov.w	r5, #0
    4870:	f04f 0100 	mov.w	r1, #0
    4874:	e750      	b.n	4718 <__adddf3+0x138>
    4876:	bf00      	nop

00004878 <__aeabi_i2d>:
__aeabi_i2d():
    4878:	f090 0f00 	teq	r0, #0
    487c:	bf04      	itt	eq
    487e:	2100      	moveq	r1, #0
    4880:	4770      	bxeq	lr
    4882:	b530      	push	{r4, r5, lr}
    4884:	f44f 6480 	mov.w	r4, #1024	; 0x400
    4888:	f104 0432 	add.w	r4, r4, #50	; 0x32
    488c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    4890:	bf48      	it	mi
    4892:	4240      	negmi	r0, r0
    4894:	f04f 0100 	mov.w	r1, #0
    4898:	e73e      	b.n	4718 <__adddf3+0x138>
    489a:	bf00      	nop

0000489c <__aeabi_f2d>:
__aeabi_f2d():
    489c:	0042      	lsls	r2, r0, #1
    489e:	ea4f 01e2 	mov.w	r1, r2, asr #3
    48a2:	ea4f 0131 	mov.w	r1, r1, rrx
    48a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
    48aa:	bf1f      	itttt	ne
    48ac:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    48b0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    48b4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    48b8:	4770      	bxne	lr
    48ba:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    48be:	bf08      	it	eq
    48c0:	4770      	bxeq	lr
    48c2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    48c6:	bf04      	itt	eq
    48c8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    48cc:	4770      	bxeq	lr
    48ce:	b530      	push	{r4, r5, lr}
    48d0:	f44f 7460 	mov.w	r4, #896	; 0x380
    48d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    48d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    48dc:	e71c      	b.n	4718 <__adddf3+0x138>
    48de:	bf00      	nop

000048e0 <__aeabi_ul2d>:
__floatundidf():
    48e0:	ea50 0201 	orrs.w	r2, r0, r1
    48e4:	bf08      	it	eq
    48e6:	4770      	bxeq	lr
    48e8:	b530      	push	{r4, r5, lr}
    48ea:	f04f 0500 	mov.w	r5, #0
    48ee:	e00a      	b.n	4906 <__aeabi_l2d+0x16>

000048f0 <__aeabi_l2d>:
__aeabi_l2d():
    48f0:	ea50 0201 	orrs.w	r2, r0, r1
    48f4:	bf08      	it	eq
    48f6:	4770      	bxeq	lr
    48f8:	b530      	push	{r4, r5, lr}
    48fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    48fe:	d502      	bpl.n	4906 <__aeabi_l2d+0x16>
    4900:	4240      	negs	r0, r0
    4902:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    4906:	f44f 6480 	mov.w	r4, #1024	; 0x400
    490a:	f104 0432 	add.w	r4, r4, #50	; 0x32
    490e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    4912:	f43f aed8 	beq.w	46c6 <__adddf3+0xe6>
    4916:	f04f 0203 	mov.w	r2, #3
    491a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    491e:	bf18      	it	ne
    4920:	3203      	addne	r2, #3
    4922:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    4926:	bf18      	it	ne
    4928:	3203      	addne	r2, #3
    492a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    492e:	f1c2 0320 	rsb	r3, r2, #32
    4932:	fa00 fc03 	lsl.w	ip, r0, r3
    4936:	fa20 f002 	lsr.w	r0, r0, r2
    493a:	fa01 fe03 	lsl.w	lr, r1, r3
    493e:	ea40 000e 	orr.w	r0, r0, lr
    4942:	fa21 f102 	lsr.w	r1, r1, r2
    4946:	4414      	add	r4, r2
    4948:	e6bd      	b.n	46c6 <__adddf3+0xe6>
    494a:	bf00      	nop

0000494c <__aeabi_dmul>:
__muldf3():
    494c:	b570      	push	{r4, r5, r6, lr}
    494e:	f04f 0cff 	mov.w	ip, #255	; 0xff
    4952:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    4956:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    495a:	bf1d      	ittte	ne
    495c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    4960:	ea94 0f0c 	teqne	r4, ip
    4964:	ea95 0f0c 	teqne	r5, ip
    4968:	f000 f8de 	bleq	4b28 <__aeabi_dmul+0x1dc>
    496c:	442c      	add	r4, r5
    496e:	ea81 0603 	eor.w	r6, r1, r3
    4972:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    4976:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    497a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    497e:	bf18      	it	ne
    4980:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    4984:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    4988:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    498c:	d038      	beq.n	4a00 <__aeabi_dmul+0xb4>
    498e:	fba0 ce02 	umull	ip, lr, r0, r2
    4992:	f04f 0500 	mov.w	r5, #0
    4996:	fbe1 e502 	umlal	lr, r5, r1, r2
    499a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    499e:	fbe0 e503 	umlal	lr, r5, r0, r3
    49a2:	f04f 0600 	mov.w	r6, #0
    49a6:	fbe1 5603 	umlal	r5, r6, r1, r3
    49aa:	f09c 0f00 	teq	ip, #0
    49ae:	bf18      	it	ne
    49b0:	f04e 0e01 	orrne.w	lr, lr, #1
    49b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    49b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    49bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    49c0:	d204      	bcs.n	49cc <__aeabi_dmul+0x80>
    49c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    49c6:	416d      	adcs	r5, r5
    49c8:	eb46 0606 	adc.w	r6, r6, r6
    49cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    49d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    49d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    49d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    49dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    49e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    49e4:	bf88      	it	hi
    49e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    49ea:	d81e      	bhi.n	4a2a <__aeabi_dmul+0xde>
    49ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    49f0:	bf08      	it	eq
    49f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    49f6:	f150 0000 	adcs.w	r0, r0, #0
    49fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    49fe:	bd70      	pop	{r4, r5, r6, pc}
    4a00:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    4a04:	ea46 0101 	orr.w	r1, r6, r1
    4a08:	ea40 0002 	orr.w	r0, r0, r2
    4a0c:	ea81 0103 	eor.w	r1, r1, r3
    4a10:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    4a14:	bfc2      	ittt	gt
    4a16:	ebd4 050c 	rsbsgt	r5, r4, ip
    4a1a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    4a1e:	bd70      	popgt	{r4, r5, r6, pc}
    4a20:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    4a24:	f04f 0e00 	mov.w	lr, #0
    4a28:	3c01      	subs	r4, #1
    4a2a:	f300 80ab 	bgt.w	4b84 <__aeabi_dmul+0x238>
    4a2e:	f114 0f36 	cmn.w	r4, #54	; 0x36
    4a32:	bfde      	ittt	le
    4a34:	2000      	movle	r0, #0
    4a36:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    4a3a:	bd70      	pople	{r4, r5, r6, pc}
    4a3c:	f1c4 0400 	rsb	r4, r4, #0
    4a40:	3c20      	subs	r4, #32
    4a42:	da35      	bge.n	4ab0 <__aeabi_dmul+0x164>
    4a44:	340c      	adds	r4, #12
    4a46:	dc1b      	bgt.n	4a80 <__aeabi_dmul+0x134>
    4a48:	f104 0414 	add.w	r4, r4, #20
    4a4c:	f1c4 0520 	rsb	r5, r4, #32
    4a50:	fa00 f305 	lsl.w	r3, r0, r5
    4a54:	fa20 f004 	lsr.w	r0, r0, r4
    4a58:	fa01 f205 	lsl.w	r2, r1, r5
    4a5c:	ea40 0002 	orr.w	r0, r0, r2
    4a60:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    4a64:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    4a68:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    4a6c:	fa21 f604 	lsr.w	r6, r1, r4
    4a70:	eb42 0106 	adc.w	r1, r2, r6
    4a74:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    4a78:	bf08      	it	eq
    4a7a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    4a7e:	bd70      	pop	{r4, r5, r6, pc}
    4a80:	f1c4 040c 	rsb	r4, r4, #12
    4a84:	f1c4 0520 	rsb	r5, r4, #32
    4a88:	fa00 f304 	lsl.w	r3, r0, r4
    4a8c:	fa20 f005 	lsr.w	r0, r0, r5
    4a90:	fa01 f204 	lsl.w	r2, r1, r4
    4a94:	ea40 0002 	orr.w	r0, r0, r2
    4a98:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4a9c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    4aa0:	f141 0100 	adc.w	r1, r1, #0
    4aa4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    4aa8:	bf08      	it	eq
    4aaa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    4aae:	bd70      	pop	{r4, r5, r6, pc}
    4ab0:	f1c4 0520 	rsb	r5, r4, #32
    4ab4:	fa00 f205 	lsl.w	r2, r0, r5
    4ab8:	ea4e 0e02 	orr.w	lr, lr, r2
    4abc:	fa20 f304 	lsr.w	r3, r0, r4
    4ac0:	fa01 f205 	lsl.w	r2, r1, r5
    4ac4:	ea43 0302 	orr.w	r3, r3, r2
    4ac8:	fa21 f004 	lsr.w	r0, r1, r4
    4acc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4ad0:	fa21 f204 	lsr.w	r2, r1, r4
    4ad4:	ea20 0002 	bic.w	r0, r0, r2
    4ad8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    4adc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    4ae0:	bf08      	it	eq
    4ae2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    4ae6:	bd70      	pop	{r4, r5, r6, pc}
    4ae8:	f094 0f00 	teq	r4, #0
    4aec:	d10f      	bne.n	4b0e <__aeabi_dmul+0x1c2>
    4aee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    4af2:	0040      	lsls	r0, r0, #1
    4af4:	eb41 0101 	adc.w	r1, r1, r1
    4af8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4afc:	bf08      	it	eq
    4afe:	3c01      	subeq	r4, #1
    4b00:	d0f7      	beq.n	4af2 <__aeabi_dmul+0x1a6>
    4b02:	ea41 0106 	orr.w	r1, r1, r6
    4b06:	f095 0f00 	teq	r5, #0
    4b0a:	bf18      	it	ne
    4b0c:	4770      	bxne	lr
    4b0e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    4b12:	0052      	lsls	r2, r2, #1
    4b14:	eb43 0303 	adc.w	r3, r3, r3
    4b18:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    4b1c:	bf08      	it	eq
    4b1e:	3d01      	subeq	r5, #1
    4b20:	d0f7      	beq.n	4b12 <__aeabi_dmul+0x1c6>
    4b22:	ea43 0306 	orr.w	r3, r3, r6
    4b26:	4770      	bx	lr
    4b28:	ea94 0f0c 	teq	r4, ip
    4b2c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    4b30:	bf18      	it	ne
    4b32:	ea95 0f0c 	teqne	r5, ip
    4b36:	d00c      	beq.n	4b52 <__aeabi_dmul+0x206>
    4b38:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    4b3c:	bf18      	it	ne
    4b3e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    4b42:	d1d1      	bne.n	4ae8 <__aeabi_dmul+0x19c>
    4b44:	ea81 0103 	eor.w	r1, r1, r3
    4b48:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4b4c:	f04f 0000 	mov.w	r0, #0
    4b50:	bd70      	pop	{r4, r5, r6, pc}
    4b52:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    4b56:	bf06      	itte	eq
    4b58:	4610      	moveq	r0, r2
    4b5a:	4619      	moveq	r1, r3
    4b5c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    4b60:	d019      	beq.n	4b96 <__aeabi_dmul+0x24a>
    4b62:	ea94 0f0c 	teq	r4, ip
    4b66:	d102      	bne.n	4b6e <__aeabi_dmul+0x222>
    4b68:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    4b6c:	d113      	bne.n	4b96 <__aeabi_dmul+0x24a>
    4b6e:	ea95 0f0c 	teq	r5, ip
    4b72:	d105      	bne.n	4b80 <__aeabi_dmul+0x234>
    4b74:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    4b78:	bf1c      	itt	ne
    4b7a:	4610      	movne	r0, r2
    4b7c:	4619      	movne	r1, r3
    4b7e:	d10a      	bne.n	4b96 <__aeabi_dmul+0x24a>
    4b80:	ea81 0103 	eor.w	r1, r1, r3
    4b84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4b88:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    4b8c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    4b90:	f04f 0000 	mov.w	r0, #0
    4b94:	bd70      	pop	{r4, r5, r6, pc}
    4b96:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    4b9a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    4b9e:	bd70      	pop	{r4, r5, r6, pc}

00004ba0 <__aeabi_ddiv>:
__divdf3():
    4ba0:	b570      	push	{r4, r5, r6, lr}
    4ba2:	f04f 0cff 	mov.w	ip, #255	; 0xff
    4ba6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    4baa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    4bae:	bf1d      	ittte	ne
    4bb0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    4bb4:	ea94 0f0c 	teqne	r4, ip
    4bb8:	ea95 0f0c 	teqne	r5, ip
    4bbc:	f000 f8a7 	bleq	4d0e <__aeabi_ddiv+0x16e>
    4bc0:	eba4 0405 	sub.w	r4, r4, r5
    4bc4:	ea81 0e03 	eor.w	lr, r1, r3
    4bc8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    4bcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
    4bd0:	f000 8088 	beq.w	4ce4 <__aeabi_ddiv+0x144>
    4bd4:	ea4f 3303 	mov.w	r3, r3, lsl #12
    4bd8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    4bdc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    4be0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    4be4:	ea4f 2202 	mov.w	r2, r2, lsl #8
    4be8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    4bec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    4bf0:	ea4f 2600 	mov.w	r6, r0, lsl #8
    4bf4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    4bf8:	429d      	cmp	r5, r3
    4bfa:	bf08      	it	eq
    4bfc:	4296      	cmpeq	r6, r2
    4bfe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    4c02:	f504 7440 	add.w	r4, r4, #768	; 0x300
    4c06:	d202      	bcs.n	4c0e <__aeabi_ddiv+0x6e>
    4c08:	085b      	lsrs	r3, r3, #1
    4c0a:	ea4f 0232 	mov.w	r2, r2, rrx
    4c0e:	1ab6      	subs	r6, r6, r2
    4c10:	eb65 0503 	sbc.w	r5, r5, r3
    4c14:	085b      	lsrs	r3, r3, #1
    4c16:	ea4f 0232 	mov.w	r2, r2, rrx
    4c1a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    4c1e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    4c22:	ebb6 0e02 	subs.w	lr, r6, r2
    4c26:	eb75 0e03 	sbcs.w	lr, r5, r3
    4c2a:	bf22      	ittt	cs
    4c2c:	1ab6      	subcs	r6, r6, r2
    4c2e:	4675      	movcs	r5, lr
    4c30:	ea40 000c 	orrcs.w	r0, r0, ip
    4c34:	085b      	lsrs	r3, r3, #1
    4c36:	ea4f 0232 	mov.w	r2, r2, rrx
    4c3a:	ebb6 0e02 	subs.w	lr, r6, r2
    4c3e:	eb75 0e03 	sbcs.w	lr, r5, r3
    4c42:	bf22      	ittt	cs
    4c44:	1ab6      	subcs	r6, r6, r2
    4c46:	4675      	movcs	r5, lr
    4c48:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    4c4c:	085b      	lsrs	r3, r3, #1
    4c4e:	ea4f 0232 	mov.w	r2, r2, rrx
    4c52:	ebb6 0e02 	subs.w	lr, r6, r2
    4c56:	eb75 0e03 	sbcs.w	lr, r5, r3
    4c5a:	bf22      	ittt	cs
    4c5c:	1ab6      	subcs	r6, r6, r2
    4c5e:	4675      	movcs	r5, lr
    4c60:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    4c64:	085b      	lsrs	r3, r3, #1
    4c66:	ea4f 0232 	mov.w	r2, r2, rrx
    4c6a:	ebb6 0e02 	subs.w	lr, r6, r2
    4c6e:	eb75 0e03 	sbcs.w	lr, r5, r3
    4c72:	bf22      	ittt	cs
    4c74:	1ab6      	subcs	r6, r6, r2
    4c76:	4675      	movcs	r5, lr
    4c78:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    4c7c:	ea55 0e06 	orrs.w	lr, r5, r6
    4c80:	d018      	beq.n	4cb4 <__aeabi_ddiv+0x114>
    4c82:	ea4f 1505 	mov.w	r5, r5, lsl #4
    4c86:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    4c8a:	ea4f 1606 	mov.w	r6, r6, lsl #4
    4c8e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    4c92:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    4c96:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    4c9a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    4c9e:	d1c0      	bne.n	4c22 <__aeabi_ddiv+0x82>
    4ca0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4ca4:	d10b      	bne.n	4cbe <__aeabi_ddiv+0x11e>
    4ca6:	ea41 0100 	orr.w	r1, r1, r0
    4caa:	f04f 0000 	mov.w	r0, #0
    4cae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    4cb2:	e7b6      	b.n	4c22 <__aeabi_ddiv+0x82>
    4cb4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4cb8:	bf04      	itt	eq
    4cba:	4301      	orreq	r1, r0
    4cbc:	2000      	moveq	r0, #0
    4cbe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    4cc2:	bf88      	it	hi
    4cc4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    4cc8:	f63f aeaf 	bhi.w	4a2a <__aeabi_dmul+0xde>
    4ccc:	ebb5 0c03 	subs.w	ip, r5, r3
    4cd0:	bf04      	itt	eq
    4cd2:	ebb6 0c02 	subseq.w	ip, r6, r2
    4cd6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    4cda:	f150 0000 	adcs.w	r0, r0, #0
    4cde:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    4ce2:	bd70      	pop	{r4, r5, r6, pc}
    4ce4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    4ce8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    4cec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    4cf0:	bfc2      	ittt	gt
    4cf2:	ebd4 050c 	rsbsgt	r5, r4, ip
    4cf6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    4cfa:	bd70      	popgt	{r4, r5, r6, pc}
    4cfc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    4d00:	f04f 0e00 	mov.w	lr, #0
    4d04:	3c01      	subs	r4, #1
    4d06:	e690      	b.n	4a2a <__aeabi_dmul+0xde>
    4d08:	ea45 0e06 	orr.w	lr, r5, r6
    4d0c:	e68d      	b.n	4a2a <__aeabi_dmul+0xde>
    4d0e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    4d12:	ea94 0f0c 	teq	r4, ip
    4d16:	bf08      	it	eq
    4d18:	ea95 0f0c 	teqeq	r5, ip
    4d1c:	f43f af3b 	beq.w	4b96 <__aeabi_dmul+0x24a>
    4d20:	ea94 0f0c 	teq	r4, ip
    4d24:	d10a      	bne.n	4d3c <__aeabi_ddiv+0x19c>
    4d26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    4d2a:	f47f af34 	bne.w	4b96 <__aeabi_dmul+0x24a>
    4d2e:	ea95 0f0c 	teq	r5, ip
    4d32:	f47f af25 	bne.w	4b80 <__aeabi_dmul+0x234>
    4d36:	4610      	mov	r0, r2
    4d38:	4619      	mov	r1, r3
    4d3a:	e72c      	b.n	4b96 <__aeabi_dmul+0x24a>
    4d3c:	ea95 0f0c 	teq	r5, ip
    4d40:	d106      	bne.n	4d50 <__aeabi_ddiv+0x1b0>
    4d42:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    4d46:	f43f aefd 	beq.w	4b44 <__aeabi_dmul+0x1f8>
    4d4a:	4610      	mov	r0, r2
    4d4c:	4619      	mov	r1, r3
    4d4e:	e722      	b.n	4b96 <__aeabi_dmul+0x24a>
    4d50:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    4d54:	bf18      	it	ne
    4d56:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    4d5a:	f47f aec5 	bne.w	4ae8 <__aeabi_dmul+0x19c>
    4d5e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    4d62:	f47f af0d 	bne.w	4b80 <__aeabi_dmul+0x234>
    4d66:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    4d6a:	f47f aeeb 	bne.w	4b44 <__aeabi_dmul+0x1f8>
    4d6e:	e712      	b.n	4b96 <__aeabi_dmul+0x24a>

00004d70 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    4d70:	004a      	lsls	r2, r1, #1
    4d72:	d211      	bcs.n	4d98 <__aeabi_d2uiz+0x28>
    4d74:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    4d78:	d211      	bcs.n	4d9e <__aeabi_d2uiz+0x2e>
    4d7a:	d50d      	bpl.n	4d98 <__aeabi_d2uiz+0x28>
    4d7c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    4d80:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    4d84:	d40e      	bmi.n	4da4 <__aeabi_d2uiz+0x34>
    4d86:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    4d8a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    4d8e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    4d92:	fa23 f002 	lsr.w	r0, r3, r2
    4d96:	4770      	bx	lr
    4d98:	f04f 0000 	mov.w	r0, #0
    4d9c:	4770      	bx	lr
    4d9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    4da2:	d102      	bne.n	4daa <__aeabi_d2uiz+0x3a>
    4da4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4da8:	4770      	bx	lr
    4daa:	f04f 0000 	mov.w	r0, #0
    4dae:	4770      	bx	lr

00004db0 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    4db0:	b953      	cbnz	r3, 4dc8 <__aeabi_uldivmod+0x18>
    4db2:	b94a      	cbnz	r2, 4dc8 <__aeabi_uldivmod+0x18>
    4db4:	2900      	cmp	r1, #0
    4db6:	bf08      	it	eq
    4db8:	2800      	cmpeq	r0, #0
    4dba:	bf1c      	itt	ne
    4dbc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
    4dc0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    4dc4:	f000 b974 	b.w	50b0 <__aeabi_idiv0>
    4dc8:	f1ad 0c08 	sub.w	ip, sp, #8
    4dcc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    4dd0:	f000 f806 	bl	4de0 <__udivmoddi4>
    4dd4:	f8dd e004 	ldr.w	lr, [sp, #4]
    4dd8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    4ddc:	b004      	add	sp, #16
    4dde:	4770      	bx	lr

00004de0 <__udivmoddi4>:
__udivmoddi4():
    4de0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4de4:	9e08      	ldr	r6, [sp, #32]
    4de6:	4604      	mov	r4, r0
    4de8:	4688      	mov	r8, r1
    4dea:	2b00      	cmp	r3, #0
    4dec:	f040 8085 	bne.w	4efa <__udivmoddi4+0x11a>
    4df0:	428a      	cmp	r2, r1
    4df2:	4615      	mov	r5, r2
    4df4:	d948      	bls.n	4e88 <__udivmoddi4+0xa8>
    4df6:	fab2 f282 	clz	r2, r2
    4dfa:	b14a      	cbz	r2, 4e10 <__udivmoddi4+0x30>
    4dfc:	f1c2 0720 	rsb	r7, r2, #32
    4e00:	fa01 f302 	lsl.w	r3, r1, r2
    4e04:	fa20 f707 	lsr.w	r7, r0, r7
    4e08:	4095      	lsls	r5, r2
    4e0a:	ea47 0803 	orr.w	r8, r7, r3
    4e0e:	4094      	lsls	r4, r2
    4e10:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    4e14:	0c23      	lsrs	r3, r4, #16
    4e16:	fbb8 f7fe 	udiv	r7, r8, lr
    4e1a:	fa1f fc85 	uxth.w	ip, r5
    4e1e:	fb0e 8817 	mls	r8, lr, r7, r8
    4e22:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    4e26:	fb07 f10c 	mul.w	r1, r7, ip
    4e2a:	4299      	cmp	r1, r3
    4e2c:	d909      	bls.n	4e42 <__udivmoddi4+0x62>
    4e2e:	18eb      	adds	r3, r5, r3
    4e30:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
    4e34:	f080 80e3 	bcs.w	4ffe <__udivmoddi4+0x21e>
    4e38:	4299      	cmp	r1, r3
    4e3a:	f240 80e0 	bls.w	4ffe <__udivmoddi4+0x21e>
    4e3e:	3f02      	subs	r7, #2
    4e40:	442b      	add	r3, r5
    4e42:	1a5b      	subs	r3, r3, r1
    4e44:	b2a4      	uxth	r4, r4
    4e46:	fbb3 f0fe 	udiv	r0, r3, lr
    4e4a:	fb0e 3310 	mls	r3, lr, r0, r3
    4e4e:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    4e52:	fb00 fc0c 	mul.w	ip, r0, ip
    4e56:	45a4      	cmp	ip, r4
    4e58:	d909      	bls.n	4e6e <__udivmoddi4+0x8e>
    4e5a:	192c      	adds	r4, r5, r4
    4e5c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4e60:	f080 80cb 	bcs.w	4ffa <__udivmoddi4+0x21a>
    4e64:	45a4      	cmp	ip, r4
    4e66:	f240 80c8 	bls.w	4ffa <__udivmoddi4+0x21a>
    4e6a:	3802      	subs	r0, #2
    4e6c:	442c      	add	r4, r5
    4e6e:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    4e72:	eba4 040c 	sub.w	r4, r4, ip
    4e76:	2700      	movs	r7, #0
    4e78:	b11e      	cbz	r6, 4e82 <__udivmoddi4+0xa2>
    4e7a:	40d4      	lsrs	r4, r2
    4e7c:	2300      	movs	r3, #0
    4e7e:	e9c6 4300 	strd	r4, r3, [r6]
    4e82:	4639      	mov	r1, r7
    4e84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4e88:	2a00      	cmp	r2, #0
    4e8a:	d053      	beq.n	4f34 <__udivmoddi4+0x154>
    4e8c:	fab2 f282 	clz	r2, r2
    4e90:	2a00      	cmp	r2, #0
    4e92:	f040 80b6 	bne.w	5002 <__udivmoddi4+0x222>
    4e96:	1b49      	subs	r1, r1, r5
    4e98:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    4e9c:	fa1f f885 	uxth.w	r8, r5
    4ea0:	2701      	movs	r7, #1
    4ea2:	fbb1 fcfe 	udiv	ip, r1, lr
    4ea6:	0c23      	lsrs	r3, r4, #16
    4ea8:	fb0e 111c 	mls	r1, lr, ip, r1
    4eac:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    4eb0:	fb08 f10c 	mul.w	r1, r8, ip
    4eb4:	4299      	cmp	r1, r3
    4eb6:	d907      	bls.n	4ec8 <__udivmoddi4+0xe8>
    4eb8:	18eb      	adds	r3, r5, r3
    4eba:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
    4ebe:	d202      	bcs.n	4ec6 <__udivmoddi4+0xe6>
    4ec0:	4299      	cmp	r1, r3
    4ec2:	f200 80ec 	bhi.w	509e <__udivmoddi4+0x2be>
    4ec6:	4684      	mov	ip, r0
    4ec8:	1a59      	subs	r1, r3, r1
    4eca:	b2a3      	uxth	r3, r4
    4ecc:	fbb1 f0fe 	udiv	r0, r1, lr
    4ed0:	fb0e 1410 	mls	r4, lr, r0, r1
    4ed4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    4ed8:	fb08 f800 	mul.w	r8, r8, r0
    4edc:	45a0      	cmp	r8, r4
    4ede:	d907      	bls.n	4ef0 <__udivmoddi4+0x110>
    4ee0:	192c      	adds	r4, r5, r4
    4ee2:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4ee6:	d202      	bcs.n	4eee <__udivmoddi4+0x10e>
    4ee8:	45a0      	cmp	r8, r4
    4eea:	f200 80dc 	bhi.w	50a6 <__udivmoddi4+0x2c6>
    4eee:	4618      	mov	r0, r3
    4ef0:	eba4 0408 	sub.w	r4, r4, r8
    4ef4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    4ef8:	e7be      	b.n	4e78 <__udivmoddi4+0x98>
    4efa:	428b      	cmp	r3, r1
    4efc:	d908      	bls.n	4f10 <__udivmoddi4+0x130>
    4efe:	2e00      	cmp	r6, #0
    4f00:	d078      	beq.n	4ff4 <__udivmoddi4+0x214>
    4f02:	2700      	movs	r7, #0
    4f04:	e9c6 0100 	strd	r0, r1, [r6]
    4f08:	4638      	mov	r0, r7
    4f0a:	4639      	mov	r1, r7
    4f0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4f10:	fab3 f783 	clz	r7, r3
    4f14:	b97f      	cbnz	r7, 4f36 <__udivmoddi4+0x156>
    4f16:	428b      	cmp	r3, r1
    4f18:	d302      	bcc.n	4f20 <__udivmoddi4+0x140>
    4f1a:	4282      	cmp	r2, r0
    4f1c:	f200 80bd 	bhi.w	509a <__udivmoddi4+0x2ba>
    4f20:	1a84      	subs	r4, r0, r2
    4f22:	eb61 0303 	sbc.w	r3, r1, r3
    4f26:	2001      	movs	r0, #1
    4f28:	4698      	mov	r8, r3
    4f2a:	2e00      	cmp	r6, #0
    4f2c:	d0a9      	beq.n	4e82 <__udivmoddi4+0xa2>
    4f2e:	e9c6 4800 	strd	r4, r8, [r6]
    4f32:	e7a6      	b.n	4e82 <__udivmoddi4+0xa2>
    4f34:	deff      	udf	#255	; 0xff
    4f36:	f1c7 0520 	rsb	r5, r7, #32
    4f3a:	40bb      	lsls	r3, r7
    4f3c:	fa22 fc05 	lsr.w	ip, r2, r5
    4f40:	ea4c 0c03 	orr.w	ip, ip, r3
    4f44:	fa01 f407 	lsl.w	r4, r1, r7
    4f48:	fa20 f805 	lsr.w	r8, r0, r5
    4f4c:	fa21 f305 	lsr.w	r3, r1, r5
    4f50:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    4f54:	ea48 0404 	orr.w	r4, r8, r4
    4f58:	fbb3 f9fe 	udiv	r9, r3, lr
    4f5c:	0c21      	lsrs	r1, r4, #16
    4f5e:	fb0e 3319 	mls	r3, lr, r9, r3
    4f62:	fa1f f88c 	uxth.w	r8, ip
    4f66:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    4f6a:	fb09 fa08 	mul.w	sl, r9, r8
    4f6e:	459a      	cmp	sl, r3
    4f70:	fa02 f207 	lsl.w	r2, r2, r7
    4f74:	fa00 f107 	lsl.w	r1, r0, r7
    4f78:	d90b      	bls.n	4f92 <__udivmoddi4+0x1b2>
    4f7a:	eb1c 0303 	adds.w	r3, ip, r3
    4f7e:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
    4f82:	f080 8088 	bcs.w	5096 <__udivmoddi4+0x2b6>
    4f86:	459a      	cmp	sl, r3
    4f88:	f240 8085 	bls.w	5096 <__udivmoddi4+0x2b6>
    4f8c:	f1a9 0902 	sub.w	r9, r9, #2
    4f90:	4463      	add	r3, ip
    4f92:	eba3 030a 	sub.w	r3, r3, sl
    4f96:	b2a4      	uxth	r4, r4
    4f98:	fbb3 f0fe 	udiv	r0, r3, lr
    4f9c:	fb0e 3310 	mls	r3, lr, r0, r3
    4fa0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    4fa4:	fb00 f808 	mul.w	r8, r0, r8
    4fa8:	45a0      	cmp	r8, r4
    4faa:	d908      	bls.n	4fbe <__udivmoddi4+0x1de>
    4fac:	eb1c 0404 	adds.w	r4, ip, r4
    4fb0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4fb4:	d26b      	bcs.n	508e <__udivmoddi4+0x2ae>
    4fb6:	45a0      	cmp	r8, r4
    4fb8:	d969      	bls.n	508e <__udivmoddi4+0x2ae>
    4fba:	3802      	subs	r0, #2
    4fbc:	4464      	add	r4, ip
    4fbe:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    4fc2:	eba4 0408 	sub.w	r4, r4, r8
    4fc6:	fba0 8902 	umull	r8, r9, r0, r2
    4fca:	454c      	cmp	r4, r9
    4fcc:	46c6      	mov	lr, r8
    4fce:	464b      	mov	r3, r9
    4fd0:	d354      	bcc.n	507c <__udivmoddi4+0x29c>
    4fd2:	d051      	beq.n	5078 <__udivmoddi4+0x298>
    4fd4:	2e00      	cmp	r6, #0
    4fd6:	d069      	beq.n	50ac <__udivmoddi4+0x2cc>
    4fd8:	ebb1 020e 	subs.w	r2, r1, lr
    4fdc:	eb64 0403 	sbc.w	r4, r4, r3
    4fe0:	fa04 f505 	lsl.w	r5, r4, r5
    4fe4:	fa22 f307 	lsr.w	r3, r2, r7
    4fe8:	40fc      	lsrs	r4, r7
    4fea:	431d      	orrs	r5, r3
    4fec:	e9c6 5400 	strd	r5, r4, [r6]
    4ff0:	2700      	movs	r7, #0
    4ff2:	e746      	b.n	4e82 <__udivmoddi4+0xa2>
    4ff4:	4637      	mov	r7, r6
    4ff6:	4630      	mov	r0, r6
    4ff8:	e743      	b.n	4e82 <__udivmoddi4+0xa2>
    4ffa:	4618      	mov	r0, r3
    4ffc:	e737      	b.n	4e6e <__udivmoddi4+0x8e>
    4ffe:	4607      	mov	r7, r0
    5000:	e71f      	b.n	4e42 <__udivmoddi4+0x62>
    5002:	f1c2 0320 	rsb	r3, r2, #32
    5006:	fa20 f703 	lsr.w	r7, r0, r3
    500a:	4095      	lsls	r5, r2
    500c:	fa01 f002 	lsl.w	r0, r1, r2
    5010:	fa21 f303 	lsr.w	r3, r1, r3
    5014:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    5018:	4338      	orrs	r0, r7
    501a:	0c01      	lsrs	r1, r0, #16
    501c:	fbb3 f7fe 	udiv	r7, r3, lr
    5020:	fa1f f885 	uxth.w	r8, r5
    5024:	fb0e 3317 	mls	r3, lr, r7, r3
    5028:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    502c:	fb07 f308 	mul.w	r3, r7, r8
    5030:	428b      	cmp	r3, r1
    5032:	fa04 f402 	lsl.w	r4, r4, r2
    5036:	d907      	bls.n	5048 <__udivmoddi4+0x268>
    5038:	1869      	adds	r1, r5, r1
    503a:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
    503e:	d228      	bcs.n	5092 <__udivmoddi4+0x2b2>
    5040:	428b      	cmp	r3, r1
    5042:	d926      	bls.n	5092 <__udivmoddi4+0x2b2>
    5044:	3f02      	subs	r7, #2
    5046:	4429      	add	r1, r5
    5048:	1acb      	subs	r3, r1, r3
    504a:	b281      	uxth	r1, r0
    504c:	fbb3 f0fe 	udiv	r0, r3, lr
    5050:	fb0e 3310 	mls	r3, lr, r0, r3
    5054:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    5058:	fb00 f308 	mul.w	r3, r0, r8
    505c:	428b      	cmp	r3, r1
    505e:	d907      	bls.n	5070 <__udivmoddi4+0x290>
    5060:	1869      	adds	r1, r5, r1
    5062:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    5066:	d210      	bcs.n	508a <__udivmoddi4+0x2aa>
    5068:	428b      	cmp	r3, r1
    506a:	d90e      	bls.n	508a <__udivmoddi4+0x2aa>
    506c:	3802      	subs	r0, #2
    506e:	4429      	add	r1, r5
    5070:	1ac9      	subs	r1, r1, r3
    5072:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    5076:	e714      	b.n	4ea2 <__udivmoddi4+0xc2>
    5078:	4541      	cmp	r1, r8
    507a:	d2ab      	bcs.n	4fd4 <__udivmoddi4+0x1f4>
    507c:	ebb8 0e02 	subs.w	lr, r8, r2
    5080:	eb69 020c 	sbc.w	r2, r9, ip
    5084:	3801      	subs	r0, #1
    5086:	4613      	mov	r3, r2
    5088:	e7a4      	b.n	4fd4 <__udivmoddi4+0x1f4>
    508a:	4660      	mov	r0, ip
    508c:	e7f0      	b.n	5070 <__udivmoddi4+0x290>
    508e:	4618      	mov	r0, r3
    5090:	e795      	b.n	4fbe <__udivmoddi4+0x1de>
    5092:	4667      	mov	r7, ip
    5094:	e7d8      	b.n	5048 <__udivmoddi4+0x268>
    5096:	4681      	mov	r9, r0
    5098:	e77b      	b.n	4f92 <__udivmoddi4+0x1b2>
    509a:	4638      	mov	r0, r7
    509c:	e745      	b.n	4f2a <__udivmoddi4+0x14a>
    509e:	f1ac 0c02 	sub.w	ip, ip, #2
    50a2:	442b      	add	r3, r5
    50a4:	e710      	b.n	4ec8 <__udivmoddi4+0xe8>
    50a6:	3802      	subs	r0, #2
    50a8:	442c      	add	r4, r5
    50aa:	e721      	b.n	4ef0 <__udivmoddi4+0x110>
    50ac:	4637      	mov	r7, r6
    50ae:	e6e8      	b.n	4e82 <__udivmoddi4+0xa2>

000050b0 <__aeabi_idiv0>:
__aeabi_idiv0():
    50b0:	4770      	bx	lr
    50b2:	bf00      	nop

000050b4 <atoi>:
atoi():
    50b4:	220a      	movs	r2, #10
    50b6:	2100      	movs	r1, #0
    50b8:	f002 b986 	b.w	73c8 <strtol>

000050bc <fiprintf>:
fiprintf():
    50bc:	b40e      	push	{r1, r2, r3}
    50be:	b503      	push	{r0, r1, lr}
    50c0:	4601      	mov	r1, r0
    50c2:	ab03      	add	r3, sp, #12
    50c4:	4805      	ldr	r0, [pc, #20]	; (50dc <fiprintf+0x20>)
    50c6:	f853 2b04 	ldr.w	r2, [r3], #4
    50ca:	6800      	ldr	r0, [r0, #0]
    50cc:	9301      	str	r3, [sp, #4]
    50ce:	f000 f99d 	bl	540c <_vfiprintf_r>
    50d2:	b002      	add	sp, #8
    50d4:	f85d eb04 	ldr.w	lr, [sp], #4
    50d8:	b003      	add	sp, #12
    50da:	4770      	bx	lr
    50dc:	10000174 	.word	0x10000174

000050e0 <_fputs_r>:
_fputs_r():
    50e0:	b570      	push	{r4, r5, r6, lr}
    50e2:	460e      	mov	r6, r1
    50e4:	4614      	mov	r4, r2
    50e6:	4605      	mov	r5, r0
    50e8:	b118      	cbz	r0, 50f2 <_fputs_r+0x12>
    50ea:	6983      	ldr	r3, [r0, #24]
    50ec:	b90b      	cbnz	r3, 50f2 <_fputs_r+0x12>
    50ee:	f003 fa0d 	bl	850c <__sinit>
    50f2:	4b2b      	ldr	r3, [pc, #172]	; (51a0 <_fputs_r+0xc0>)
    50f4:	429c      	cmp	r4, r3
    50f6:	d11e      	bne.n	5136 <_fputs_r+0x56>
    50f8:	686c      	ldr	r4, [r5, #4]
    50fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
    50fc:	07da      	lsls	r2, r3, #31
    50fe:	d405      	bmi.n	510c <_fputs_r+0x2c>
    5100:	89a3      	ldrh	r3, [r4, #12]
    5102:	059b      	lsls	r3, r3, #22
    5104:	d402      	bmi.n	510c <_fputs_r+0x2c>
    5106:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5108:	f000 f86b 	bl	51e2 <__retarget_lock_acquire_recursive>
    510c:	89a3      	ldrh	r3, [r4, #12]
    510e:	0718      	lsls	r0, r3, #28
    5110:	d51b      	bpl.n	514a <_fputs_r+0x6a>
    5112:	6923      	ldr	r3, [r4, #16]
    5114:	b1cb      	cbz	r3, 514a <_fputs_r+0x6a>
    5116:	3e01      	subs	r6, #1
    5118:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    511c:	bb39      	cbnz	r1, 516e <_fputs_r+0x8e>
    511e:	6e65      	ldr	r5, [r4, #100]	; 0x64
    5120:	f015 0501 	ands.w	r5, r5, #1
    5124:	d139      	bne.n	519a <_fputs_r+0xba>
    5126:	89a3      	ldrh	r3, [r4, #12]
    5128:	0599      	lsls	r1, r3, #22
    512a:	d402      	bmi.n	5132 <_fputs_r+0x52>
    512c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    512e:	f000 f859 	bl	51e4 <__retarget_lock_release_recursive>
    5132:	4628      	mov	r0, r5
    5134:	bd70      	pop	{r4, r5, r6, pc}
    5136:	4b1b      	ldr	r3, [pc, #108]	; (51a4 <_fputs_r+0xc4>)
    5138:	429c      	cmp	r4, r3
    513a:	d101      	bne.n	5140 <_fputs_r+0x60>
    513c:	68ac      	ldr	r4, [r5, #8]
    513e:	e7dc      	b.n	50fa <_fputs_r+0x1a>
    5140:	4b19      	ldr	r3, [pc, #100]	; (51a8 <_fputs_r+0xc8>)
    5142:	429c      	cmp	r4, r3
    5144:	bf08      	it	eq
    5146:	68ec      	ldreq	r4, [r5, #12]
    5148:	e7d7      	b.n	50fa <_fputs_r+0x1a>
    514a:	4621      	mov	r1, r4
    514c:	4628      	mov	r0, r5
    514e:	f002 f9ff 	bl	7550 <__swsetup_r>
    5152:	2800      	cmp	r0, #0
    5154:	d0df      	beq.n	5116 <_fputs_r+0x36>
    5156:	6e63      	ldr	r3, [r4, #100]	; 0x64
    5158:	07da      	lsls	r2, r3, #31
    515a:	d405      	bmi.n	5168 <_fputs_r+0x88>
    515c:	89a3      	ldrh	r3, [r4, #12]
    515e:	059b      	lsls	r3, r3, #22
    5160:	d402      	bmi.n	5168 <_fputs_r+0x88>
    5162:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5164:	f000 f83e 	bl	51e4 <__retarget_lock_release_recursive>
    5168:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    516c:	e7e1      	b.n	5132 <_fputs_r+0x52>
    516e:	68a3      	ldr	r3, [r4, #8]
    5170:	3b01      	subs	r3, #1
    5172:	2b00      	cmp	r3, #0
    5174:	60a3      	str	r3, [r4, #8]
    5176:	da04      	bge.n	5182 <_fputs_r+0xa2>
    5178:	69a2      	ldr	r2, [r4, #24]
    517a:	4293      	cmp	r3, r2
    517c:	db06      	blt.n	518c <_fputs_r+0xac>
    517e:	290a      	cmp	r1, #10
    5180:	d004      	beq.n	518c <_fputs_r+0xac>
    5182:	6823      	ldr	r3, [r4, #0]
    5184:	1c5a      	adds	r2, r3, #1
    5186:	6022      	str	r2, [r4, #0]
    5188:	7019      	strb	r1, [r3, #0]
    518a:	e7c5      	b.n	5118 <_fputs_r+0x38>
    518c:	4622      	mov	r2, r4
    518e:	4628      	mov	r0, r5
    5190:	f002 f98c 	bl	74ac <__swbuf_r>
    5194:	3001      	adds	r0, #1
    5196:	d1bf      	bne.n	5118 <_fputs_r+0x38>
    5198:	e7dd      	b.n	5156 <_fputs_r+0x76>
    519a:	460d      	mov	r5, r1
    519c:	e7c9      	b.n	5132 <_fputs_r+0x52>
    519e:	bf00      	nop
    51a0:	0000bbd8 	.word	0x0000bbd8
    51a4:	0000bbf8 	.word	0x0000bbf8
    51a8:	0000bbb8 	.word	0x0000bbb8

000051ac <fputs>:
fputs():
    51ac:	4b02      	ldr	r3, [pc, #8]	; (51b8 <fputs+0xc>)
    51ae:	460a      	mov	r2, r1
    51b0:	4601      	mov	r1, r0
    51b2:	6818      	ldr	r0, [r3, #0]
    51b4:	f7ff bf94 	b.w	50e0 <_fputs_r>
    51b8:	10000174 	.word	0x10000174

000051bc <getchar>:
getchar():
    51bc:	4b07      	ldr	r3, [pc, #28]	; (51dc <getchar+0x20>)
    51be:	b510      	push	{r4, lr}
    51c0:	681c      	ldr	r4, [r3, #0]
    51c2:	b124      	cbz	r4, 51ce <getchar+0x12>
    51c4:	69a3      	ldr	r3, [r4, #24]
    51c6:	b913      	cbnz	r3, 51ce <getchar+0x12>
    51c8:	4620      	mov	r0, r4
    51ca:	f003 f99f 	bl	850c <__sinit>
    51ce:	6861      	ldr	r1, [r4, #4]
    51d0:	4620      	mov	r0, r4
    51d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    51d6:	f003 bd7b 	b.w	8cd0 <_getc_r>
    51da:	bf00      	nop
    51dc:	10000174 	.word	0x10000174

000051e0 <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
    51e0:	4770      	bx	lr

000051e2 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    51e2:	4770      	bx	lr

000051e4 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    51e4:	4770      	bx	lr
    51e6:	Address 0x00000000000051e6 is out of bounds.


000051e8 <malloc>:
malloc():
    51e8:	4b02      	ldr	r3, [pc, #8]	; (51f4 <malloc+0xc>)
    51ea:	4601      	mov	r1, r0
    51ec:	6818      	ldr	r0, [r3, #0]
    51ee:	f000 b889 	b.w	5304 <_malloc_r>
    51f2:	bf00      	nop
    51f4:	10000174 	.word	0x10000174

000051f8 <free>:
free():
    51f8:	4b02      	ldr	r3, [pc, #8]	; (5204 <free+0xc>)
    51fa:	4601      	mov	r1, r0
    51fc:	6818      	ldr	r0, [r3, #0]
    51fe:	f000 b833 	b.w	5268 <_free_r>
    5202:	bf00      	nop
    5204:	10000174 	.word	0x10000174

00005208 <memcpy>:
memcpy():
    5208:	440a      	add	r2, r1
    520a:	4291      	cmp	r1, r2
    520c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    5210:	d100      	bne.n	5214 <memcpy+0xc>
    5212:	4770      	bx	lr
    5214:	b510      	push	{r4, lr}
    5216:	f811 4b01 	ldrb.w	r4, [r1], #1
    521a:	f803 4f01 	strb.w	r4, [r3, #1]!
    521e:	4291      	cmp	r1, r2
    5220:	d1f9      	bne.n	5216 <memcpy+0xe>
    5222:	bd10      	pop	{r4, pc}

00005224 <memmove>:
memmove():
    5224:	4288      	cmp	r0, r1
    5226:	b510      	push	{r4, lr}
    5228:	eb01 0302 	add.w	r3, r1, r2
    522c:	d902      	bls.n	5234 <memmove+0x10>
    522e:	4283      	cmp	r3, r0
    5230:	461c      	mov	r4, r3
    5232:	d807      	bhi.n	5244 <memmove+0x20>
    5234:	1e42      	subs	r2, r0, #1
    5236:	4299      	cmp	r1, r3
    5238:	d008      	beq.n	524c <memmove+0x28>
    523a:	f811 4b01 	ldrb.w	r4, [r1], #1
    523e:	f802 4f01 	strb.w	r4, [r2, #1]!
    5242:	e7f8      	b.n	5236 <memmove+0x12>
    5244:	1883      	adds	r3, r0, r2
    5246:	1a9a      	subs	r2, r3, r2
    5248:	429a      	cmp	r2, r3
    524a:	d100      	bne.n	524e <memmove+0x2a>
    524c:	bd10      	pop	{r4, pc}
    524e:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
    5252:	f803 1d01 	strb.w	r1, [r3, #-1]!
    5256:	e7f7      	b.n	5248 <memmove+0x24>

00005258 <memset>:
memset():
    5258:	4402      	add	r2, r0
    525a:	4603      	mov	r3, r0
    525c:	4293      	cmp	r3, r2
    525e:	d100      	bne.n	5262 <memset+0xa>
    5260:	4770      	bx	lr
    5262:	f803 1b01 	strb.w	r1, [r3], #1
    5266:	e7f9      	b.n	525c <memset+0x4>

00005268 <_free_r>:
_free_r():
    5268:	b538      	push	{r3, r4, r5, lr}
    526a:	4605      	mov	r5, r0
    526c:	2900      	cmp	r1, #0
    526e:	d045      	beq.n	52fc <_free_r+0x94>
    5270:	f851 3c04 	ldr.w	r3, [r1, #-4]
    5274:	1f0c      	subs	r4, r1, #4
    5276:	2b00      	cmp	r3, #0
    5278:	bfb8      	it	lt
    527a:	18e4      	addlt	r4, r4, r3
    527c:	f003 fe38 	bl	8ef0 <__malloc_lock>
    5280:	4a1f      	ldr	r2, [pc, #124]	; (5300 <_free_r+0x98>)
    5282:	6813      	ldr	r3, [r2, #0]
    5284:	4610      	mov	r0, r2
    5286:	b933      	cbnz	r3, 5296 <_free_r+0x2e>
    5288:	6063      	str	r3, [r4, #4]
    528a:	6014      	str	r4, [r2, #0]
    528c:	4628      	mov	r0, r5
    528e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    5292:	f003 be33 	b.w	8efc <__malloc_unlock>
    5296:	42a3      	cmp	r3, r4
    5298:	d90c      	bls.n	52b4 <_free_r+0x4c>
    529a:	6821      	ldr	r1, [r4, #0]
    529c:	1862      	adds	r2, r4, r1
    529e:	4293      	cmp	r3, r2
    52a0:	bf04      	itt	eq
    52a2:	681a      	ldreq	r2, [r3, #0]
    52a4:	685b      	ldreq	r3, [r3, #4]
    52a6:	6063      	str	r3, [r4, #4]
    52a8:	bf04      	itt	eq
    52aa:	1852      	addeq	r2, r2, r1
    52ac:	6022      	streq	r2, [r4, #0]
    52ae:	6004      	str	r4, [r0, #0]
    52b0:	e7ec      	b.n	528c <_free_r+0x24>
    52b2:	4613      	mov	r3, r2
    52b4:	685a      	ldr	r2, [r3, #4]
    52b6:	b10a      	cbz	r2, 52bc <_free_r+0x54>
    52b8:	42a2      	cmp	r2, r4
    52ba:	d9fa      	bls.n	52b2 <_free_r+0x4a>
    52bc:	6819      	ldr	r1, [r3, #0]
    52be:	1858      	adds	r0, r3, r1
    52c0:	42a0      	cmp	r0, r4
    52c2:	d10b      	bne.n	52dc <_free_r+0x74>
    52c4:	6820      	ldr	r0, [r4, #0]
    52c6:	4401      	add	r1, r0
    52c8:	1858      	adds	r0, r3, r1
    52ca:	4282      	cmp	r2, r0
    52cc:	6019      	str	r1, [r3, #0]
    52ce:	d1dd      	bne.n	528c <_free_r+0x24>
    52d0:	6810      	ldr	r0, [r2, #0]
    52d2:	6852      	ldr	r2, [r2, #4]
    52d4:	605a      	str	r2, [r3, #4]
    52d6:	4401      	add	r1, r0
    52d8:	6019      	str	r1, [r3, #0]
    52da:	e7d7      	b.n	528c <_free_r+0x24>
    52dc:	d902      	bls.n	52e4 <_free_r+0x7c>
    52de:	230c      	movs	r3, #12
    52e0:	602b      	str	r3, [r5, #0]
    52e2:	e7d3      	b.n	528c <_free_r+0x24>
    52e4:	6820      	ldr	r0, [r4, #0]
    52e6:	1821      	adds	r1, r4, r0
    52e8:	428a      	cmp	r2, r1
    52ea:	bf04      	itt	eq
    52ec:	6811      	ldreq	r1, [r2, #0]
    52ee:	6852      	ldreq	r2, [r2, #4]
    52f0:	6062      	str	r2, [r4, #4]
    52f2:	bf04      	itt	eq
    52f4:	1809      	addeq	r1, r1, r0
    52f6:	6021      	streq	r1, [r4, #0]
    52f8:	605c      	str	r4, [r3, #4]
    52fa:	e7c7      	b.n	528c <_free_r+0x24>
    52fc:	bd38      	pop	{r3, r4, r5, pc}
    52fe:	bf00      	nop
    5300:	100013f0 	.word	0x100013f0

00005304 <_malloc_r>:
_malloc_r():
    5304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5306:	1ccd      	adds	r5, r1, #3
    5308:	f025 0503 	bic.w	r5, r5, #3
    530c:	3508      	adds	r5, #8
    530e:	2d0c      	cmp	r5, #12
    5310:	bf38      	it	cc
    5312:	250c      	movcc	r5, #12
    5314:	2d00      	cmp	r5, #0
    5316:	4606      	mov	r6, r0
    5318:	db01      	blt.n	531e <_malloc_r+0x1a>
    531a:	42a9      	cmp	r1, r5
    531c:	d903      	bls.n	5326 <_malloc_r+0x22>
    531e:	230c      	movs	r3, #12
    5320:	6033      	str	r3, [r6, #0]
    5322:	2000      	movs	r0, #0
    5324:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5326:	f003 fde3 	bl	8ef0 <__malloc_lock>
    532a:	4921      	ldr	r1, [pc, #132]	; (53b0 <_malloc_r+0xac>)
    532c:	680a      	ldr	r2, [r1, #0]
    532e:	4614      	mov	r4, r2
    5330:	b99c      	cbnz	r4, 535a <_malloc_r+0x56>
    5332:	4f20      	ldr	r7, [pc, #128]	; (53b4 <_malloc_r+0xb0>)
    5334:	683b      	ldr	r3, [r7, #0]
    5336:	b923      	cbnz	r3, 5342 <_malloc_r+0x3e>
    5338:	4621      	mov	r1, r4
    533a:	4630      	mov	r0, r6
    533c:	f001 f854 	bl	63e8 <_sbrk_r>
    5340:	6038      	str	r0, [r7, #0]
    5342:	4629      	mov	r1, r5
    5344:	4630      	mov	r0, r6
    5346:	f001 f84f 	bl	63e8 <_sbrk_r>
    534a:	1c43      	adds	r3, r0, #1
    534c:	d123      	bne.n	5396 <_malloc_r+0x92>
    534e:	230c      	movs	r3, #12
    5350:	6033      	str	r3, [r6, #0]
    5352:	4630      	mov	r0, r6
    5354:	f003 fdd2 	bl	8efc <__malloc_unlock>
    5358:	e7e3      	b.n	5322 <_malloc_r+0x1e>
    535a:	6823      	ldr	r3, [r4, #0]
    535c:	1b5b      	subs	r3, r3, r5
    535e:	d417      	bmi.n	5390 <_malloc_r+0x8c>
    5360:	2b0b      	cmp	r3, #11
    5362:	d903      	bls.n	536c <_malloc_r+0x68>
    5364:	6023      	str	r3, [r4, #0]
    5366:	441c      	add	r4, r3
    5368:	6025      	str	r5, [r4, #0]
    536a:	e004      	b.n	5376 <_malloc_r+0x72>
    536c:	6863      	ldr	r3, [r4, #4]
    536e:	42a2      	cmp	r2, r4
    5370:	bf0c      	ite	eq
    5372:	600b      	streq	r3, [r1, #0]
    5374:	6053      	strne	r3, [r2, #4]
    5376:	4630      	mov	r0, r6
    5378:	f003 fdc0 	bl	8efc <__malloc_unlock>
    537c:	f104 000b 	add.w	r0, r4, #11
    5380:	1d23      	adds	r3, r4, #4
    5382:	f020 0007 	bic.w	r0, r0, #7
    5386:	1ac2      	subs	r2, r0, r3
    5388:	d0cc      	beq.n	5324 <_malloc_r+0x20>
    538a:	1a1b      	subs	r3, r3, r0
    538c:	50a3      	str	r3, [r4, r2]
    538e:	e7c9      	b.n	5324 <_malloc_r+0x20>
    5390:	4622      	mov	r2, r4
    5392:	6864      	ldr	r4, [r4, #4]
    5394:	e7cc      	b.n	5330 <_malloc_r+0x2c>
    5396:	1cc4      	adds	r4, r0, #3
    5398:	f024 0403 	bic.w	r4, r4, #3
    539c:	42a0      	cmp	r0, r4
    539e:	d0e3      	beq.n	5368 <_malloc_r+0x64>
    53a0:	1a21      	subs	r1, r4, r0
    53a2:	4630      	mov	r0, r6
    53a4:	f001 f820 	bl	63e8 <_sbrk_r>
    53a8:	3001      	adds	r0, #1
    53aa:	d1dd      	bne.n	5368 <_malloc_r+0x64>
    53ac:	e7cf      	b.n	534e <_malloc_r+0x4a>
    53ae:	bf00      	nop
    53b0:	100013f0 	.word	0x100013f0
    53b4:	100013f4 	.word	0x100013f4

000053b8 <__sfputc_r>:
__sfputc_r():
    53b8:	6893      	ldr	r3, [r2, #8]
    53ba:	3b01      	subs	r3, #1
    53bc:	2b00      	cmp	r3, #0
    53be:	b410      	push	{r4}
    53c0:	6093      	str	r3, [r2, #8]
    53c2:	da08      	bge.n	53d6 <__sfputc_r+0x1e>
    53c4:	6994      	ldr	r4, [r2, #24]
    53c6:	42a3      	cmp	r3, r4
    53c8:	db01      	blt.n	53ce <__sfputc_r+0x16>
    53ca:	290a      	cmp	r1, #10
    53cc:	d103      	bne.n	53d6 <__sfputc_r+0x1e>
    53ce:	f85d 4b04 	ldr.w	r4, [sp], #4
    53d2:	f002 b86b 	b.w	74ac <__swbuf_r>
    53d6:	6813      	ldr	r3, [r2, #0]
    53d8:	1c58      	adds	r0, r3, #1
    53da:	6010      	str	r0, [r2, #0]
    53dc:	7019      	strb	r1, [r3, #0]
    53de:	4608      	mov	r0, r1
    53e0:	f85d 4b04 	ldr.w	r4, [sp], #4
    53e4:	4770      	bx	lr

000053e6 <__sfputs_r>:
__sfputs_r():
    53e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    53e8:	4606      	mov	r6, r0
    53ea:	460f      	mov	r7, r1
    53ec:	4614      	mov	r4, r2
    53ee:	18d5      	adds	r5, r2, r3
    53f0:	42ac      	cmp	r4, r5
    53f2:	d101      	bne.n	53f8 <__sfputs_r+0x12>
    53f4:	2000      	movs	r0, #0
    53f6:	e007      	b.n	5408 <__sfputs_r+0x22>
    53f8:	463a      	mov	r2, r7
    53fa:	f814 1b01 	ldrb.w	r1, [r4], #1
    53fe:	4630      	mov	r0, r6
    5400:	f7ff ffda 	bl	53b8 <__sfputc_r>
    5404:	1c43      	adds	r3, r0, #1
    5406:	d1f3      	bne.n	53f0 <__sfputs_r+0xa>
    5408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    540a:	Address 0x000000000000540a is out of bounds.


0000540c <_vfiprintf_r>:
_vfprintf_r():
    540c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5410:	460d      	mov	r5, r1
    5412:	b09d      	sub	sp, #116	; 0x74
    5414:	4614      	mov	r4, r2
    5416:	461e      	mov	r6, r3
    5418:	4607      	mov	r7, r0
    541a:	b118      	cbz	r0, 5424 <_vfiprintf_r+0x18>
    541c:	6983      	ldr	r3, [r0, #24]
    541e:	b90b      	cbnz	r3, 5424 <_vfiprintf_r+0x18>
    5420:	f003 f874 	bl	850c <__sinit>
    5424:	4b85      	ldr	r3, [pc, #532]	; (563c <_vfiprintf_r+0x230>)
    5426:	429d      	cmp	r5, r3
    5428:	d11b      	bne.n	5462 <_vfiprintf_r+0x56>
    542a:	687d      	ldr	r5, [r7, #4]
    542c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    542e:	07d9      	lsls	r1, r3, #31
    5430:	d405      	bmi.n	543e <_vfiprintf_r+0x32>
    5432:	89ab      	ldrh	r3, [r5, #12]
    5434:	059a      	lsls	r2, r3, #22
    5436:	d402      	bmi.n	543e <_vfiprintf_r+0x32>
    5438:	6da8      	ldr	r0, [r5, #88]	; 0x58
    543a:	f7ff fed2 	bl	51e2 <__retarget_lock_acquire_recursive>
    543e:	89ab      	ldrh	r3, [r5, #12]
    5440:	071b      	lsls	r3, r3, #28
    5442:	d501      	bpl.n	5448 <_vfiprintf_r+0x3c>
    5444:	692b      	ldr	r3, [r5, #16]
    5446:	b9eb      	cbnz	r3, 5484 <_vfiprintf_r+0x78>
    5448:	4629      	mov	r1, r5
    544a:	4638      	mov	r0, r7
    544c:	f002 f880 	bl	7550 <__swsetup_r>
    5450:	b1c0      	cbz	r0, 5484 <_vfiprintf_r+0x78>
    5452:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    5454:	07d8      	lsls	r0, r3, #31
    5456:	d50e      	bpl.n	5476 <_vfiprintf_r+0x6a>
    5458:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    545c:	b01d      	add	sp, #116	; 0x74
    545e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5462:	4b77      	ldr	r3, [pc, #476]	; (5640 <_vfiprintf_r+0x234>)
    5464:	429d      	cmp	r5, r3
    5466:	d101      	bne.n	546c <_vfiprintf_r+0x60>
    5468:	68bd      	ldr	r5, [r7, #8]
    546a:	e7df      	b.n	542c <_vfiprintf_r+0x20>
    546c:	4b75      	ldr	r3, [pc, #468]	; (5644 <_vfiprintf_r+0x238>)
    546e:	429d      	cmp	r5, r3
    5470:	bf08      	it	eq
    5472:	68fd      	ldreq	r5, [r7, #12]
    5474:	e7da      	b.n	542c <_vfiprintf_r+0x20>
    5476:	89ab      	ldrh	r3, [r5, #12]
    5478:	0599      	lsls	r1, r3, #22
    547a:	d4ed      	bmi.n	5458 <_vfiprintf_r+0x4c>
    547c:	6da8      	ldr	r0, [r5, #88]	; 0x58
    547e:	f7ff feb1 	bl	51e4 <__retarget_lock_release_recursive>
    5482:	e7e9      	b.n	5458 <_vfiprintf_r+0x4c>
    5484:	2300      	movs	r3, #0
    5486:	9309      	str	r3, [sp, #36]	; 0x24
    5488:	2320      	movs	r3, #32
    548a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    548e:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 5648 <_vfiprintf_r+0x23c>
    5492:	9603      	str	r6, [sp, #12]
    5494:	2330      	movs	r3, #48	; 0x30
    5496:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    549a:	f04f 0a01 	mov.w	sl, #1
    549e:	4623      	mov	r3, r4
    54a0:	461e      	mov	r6, r3
    54a2:	f813 2b01 	ldrb.w	r2, [r3], #1
    54a6:	b10a      	cbz	r2, 54ac <_vfiprintf_r+0xa0>
    54a8:	2a25      	cmp	r2, #37	; 0x25
    54aa:	d1f9      	bne.n	54a0 <_vfiprintf_r+0x94>
    54ac:	ebb6 0b04 	subs.w	fp, r6, r4
    54b0:	d00b      	beq.n	54ca <_vfiprintf_r+0xbe>
    54b2:	465b      	mov	r3, fp
    54b4:	4622      	mov	r2, r4
    54b6:	4629      	mov	r1, r5
    54b8:	4638      	mov	r0, r7
    54ba:	f7ff ff94 	bl	53e6 <__sfputs_r>
    54be:	3001      	adds	r0, #1
    54c0:	f000 80a3 	beq.w	560a <_vfiprintf_r+0x1fe>
    54c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    54c6:	445b      	add	r3, fp
    54c8:	9309      	str	r3, [sp, #36]	; 0x24
    54ca:	7833      	ldrb	r3, [r6, #0]
    54cc:	2b00      	cmp	r3, #0
    54ce:	f000 809c 	beq.w	560a <_vfiprintf_r+0x1fe>
    54d2:	2300      	movs	r3, #0
    54d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    54d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
    54dc:	3601      	adds	r6, #1
    54de:	9304      	str	r3, [sp, #16]
    54e0:	9307      	str	r3, [sp, #28]
    54e2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    54e6:	931a      	str	r3, [sp, #104]	; 0x68
    54e8:	4634      	mov	r4, r6
    54ea:	2205      	movs	r2, #5
    54ec:	f814 1b01 	ldrb.w	r1, [r4], #1
    54f0:	4855      	ldr	r0, [pc, #340]	; (5648 <_vfiprintf_r+0x23c>)
    54f2:	f003 fcad 	bl	8e50 <memchr>
    54f6:	9b04      	ldr	r3, [sp, #16]
    54f8:	b9c0      	cbnz	r0, 552c <_vfiprintf_r+0x120>
    54fa:	06da      	lsls	r2, r3, #27
    54fc:	bf44      	itt	mi
    54fe:	2220      	movmi	r2, #32
    5500:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    5504:	0718      	lsls	r0, r3, #28
    5506:	bf44      	itt	mi
    5508:	222b      	movmi	r2, #43	; 0x2b
    550a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    550e:	7832      	ldrb	r2, [r6, #0]
    5510:	2a2a      	cmp	r2, #42	; 0x2a
    5512:	d013      	beq.n	553c <_vfiprintf_r+0x130>
    5514:	9a07      	ldr	r2, [sp, #28]
    5516:	4634      	mov	r4, r6
    5518:	2000      	movs	r0, #0
    551a:	260a      	movs	r6, #10
    551c:	4621      	mov	r1, r4
    551e:	f811 3b01 	ldrb.w	r3, [r1], #1
    5522:	3b30      	subs	r3, #48	; 0x30
    5524:	2b09      	cmp	r3, #9
    5526:	d94b      	bls.n	55c0 <_vfiprintf_r+0x1b4>
    5528:	b970      	cbnz	r0, 5548 <_vfiprintf_r+0x13c>
    552a:	e014      	b.n	5556 <_vfiprintf_r+0x14a>
    552c:	eba0 0009 	sub.w	r0, r0, r9
    5530:	fa0a f000 	lsl.w	r0, sl, r0
    5534:	4318      	orrs	r0, r3
    5536:	9004      	str	r0, [sp, #16]
    5538:	4626      	mov	r6, r4
    553a:	e7d5      	b.n	54e8 <_vfiprintf_r+0xdc>
    553c:	9a03      	ldr	r2, [sp, #12]
    553e:	1d11      	adds	r1, r2, #4
    5540:	6812      	ldr	r2, [r2, #0]
    5542:	9103      	str	r1, [sp, #12]
    5544:	2a00      	cmp	r2, #0
    5546:	db01      	blt.n	554c <_vfiprintf_r+0x140>
    5548:	9207      	str	r2, [sp, #28]
    554a:	e004      	b.n	5556 <_vfiprintf_r+0x14a>
    554c:	4252      	negs	r2, r2
    554e:	f043 0302 	orr.w	r3, r3, #2
    5552:	9207      	str	r2, [sp, #28]
    5554:	9304      	str	r3, [sp, #16]
    5556:	7823      	ldrb	r3, [r4, #0]
    5558:	2b2e      	cmp	r3, #46	; 0x2e
    555a:	d10c      	bne.n	5576 <_vfiprintf_r+0x16a>
    555c:	7863      	ldrb	r3, [r4, #1]
    555e:	2b2a      	cmp	r3, #42	; 0x2a
    5560:	d133      	bne.n	55ca <_vfiprintf_r+0x1be>
    5562:	9b03      	ldr	r3, [sp, #12]
    5564:	1d1a      	adds	r2, r3, #4
    5566:	681b      	ldr	r3, [r3, #0]
    5568:	9203      	str	r2, [sp, #12]
    556a:	2b00      	cmp	r3, #0
    556c:	bfb8      	it	lt
    556e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    5572:	3402      	adds	r4, #2
    5574:	9305      	str	r3, [sp, #20]
    5576:	4e35      	ldr	r6, [pc, #212]	; (564c <_vfiprintf_r+0x240>)
    5578:	7821      	ldrb	r1, [r4, #0]
    557a:	2203      	movs	r2, #3
    557c:	4630      	mov	r0, r6
    557e:	f003 fc67 	bl	8e50 <memchr>
    5582:	b138      	cbz	r0, 5594 <_vfiprintf_r+0x188>
    5584:	2340      	movs	r3, #64	; 0x40
    5586:	1b80      	subs	r0, r0, r6
    5588:	fa03 f000 	lsl.w	r0, r3, r0
    558c:	9b04      	ldr	r3, [sp, #16]
    558e:	4303      	orrs	r3, r0
    5590:	3401      	adds	r4, #1
    5592:	9304      	str	r3, [sp, #16]
    5594:	f814 1b01 	ldrb.w	r1, [r4], #1
    5598:	482d      	ldr	r0, [pc, #180]	; (5650 <_vfiprintf_r+0x244>)
    559a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    559e:	2206      	movs	r2, #6
    55a0:	f003 fc56 	bl	8e50 <memchr>
    55a4:	2800      	cmp	r0, #0
    55a6:	d03f      	beq.n	5628 <_vfiprintf_r+0x21c>
    55a8:	4b2a      	ldr	r3, [pc, #168]	; (5654 <_vfiprintf_r+0x248>)
    55aa:	bb13      	cbnz	r3, 55f2 <_vfiprintf_r+0x1e6>
    55ac:	9b03      	ldr	r3, [sp, #12]
    55ae:	3307      	adds	r3, #7
    55b0:	f023 0307 	bic.w	r3, r3, #7
    55b4:	3308      	adds	r3, #8
    55b6:	9303      	str	r3, [sp, #12]
    55b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    55ba:	4443      	add	r3, r8
    55bc:	9309      	str	r3, [sp, #36]	; 0x24
    55be:	e76e      	b.n	549e <_vfiprintf_r+0x92>
    55c0:	fb06 3202 	mla	r2, r6, r2, r3
    55c4:	2001      	movs	r0, #1
    55c6:	460c      	mov	r4, r1
    55c8:	e7a8      	b.n	551c <_vfiprintf_r+0x110>
    55ca:	2300      	movs	r3, #0
    55cc:	3401      	adds	r4, #1
    55ce:	9305      	str	r3, [sp, #20]
    55d0:	4619      	mov	r1, r3
    55d2:	260a      	movs	r6, #10
    55d4:	4620      	mov	r0, r4
    55d6:	f810 2b01 	ldrb.w	r2, [r0], #1
    55da:	3a30      	subs	r2, #48	; 0x30
    55dc:	2a09      	cmp	r2, #9
    55de:	d903      	bls.n	55e8 <_vfiprintf_r+0x1dc>
    55e0:	2b00      	cmp	r3, #0
    55e2:	d0c8      	beq.n	5576 <_vfiprintf_r+0x16a>
    55e4:	9105      	str	r1, [sp, #20]
    55e6:	e7c6      	b.n	5576 <_vfiprintf_r+0x16a>
    55e8:	fb06 2101 	mla	r1, r6, r1, r2
    55ec:	2301      	movs	r3, #1
    55ee:	4604      	mov	r4, r0
    55f0:	e7f0      	b.n	55d4 <_vfiprintf_r+0x1c8>
    55f2:	ab03      	add	r3, sp, #12
    55f4:	9300      	str	r3, [sp, #0]
    55f6:	462a      	mov	r2, r5
    55f8:	4b17      	ldr	r3, [pc, #92]	; (5658 <_vfiprintf_r+0x24c>)
    55fa:	a904      	add	r1, sp, #16
    55fc:	4638      	mov	r0, r7
    55fe:	f000 f8bd 	bl	577c <_printf_float>
    5602:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    5606:	4680      	mov	r8, r0
    5608:	d1d6      	bne.n	55b8 <_vfiprintf_r+0x1ac>
    560a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    560c:	07d9      	lsls	r1, r3, #31
    560e:	d405      	bmi.n	561c <_vfiprintf_r+0x210>
    5610:	89ab      	ldrh	r3, [r5, #12]
    5612:	059a      	lsls	r2, r3, #22
    5614:	d402      	bmi.n	561c <_vfiprintf_r+0x210>
    5616:	6da8      	ldr	r0, [r5, #88]	; 0x58
    5618:	f7ff fde4 	bl	51e4 <__retarget_lock_release_recursive>
    561c:	89ab      	ldrh	r3, [r5, #12]
    561e:	065b      	lsls	r3, r3, #25
    5620:	f53f af1a 	bmi.w	5458 <_vfiprintf_r+0x4c>
    5624:	9809      	ldr	r0, [sp, #36]	; 0x24
    5626:	e719      	b.n	545c <_vfiprintf_r+0x50>
    5628:	ab03      	add	r3, sp, #12
    562a:	9300      	str	r3, [sp, #0]
    562c:	462a      	mov	r2, r5
    562e:	4b0a      	ldr	r3, [pc, #40]	; (5658 <_vfiprintf_r+0x24c>)
    5630:	a904      	add	r1, sp, #16
    5632:	4638      	mov	r0, r7
    5634:	f000 fb42 	bl	5cbc <_printf_i>
    5638:	e7e3      	b.n	5602 <_vfiprintf_r+0x1f6>
    563a:	bf00      	nop
    563c:	0000bbd8 	.word	0x0000bbd8
    5640:	0000bbf8 	.word	0x0000bbf8
    5644:	0000bbb8 	.word	0x0000bbb8
    5648:	0000bb0c 	.word	0x0000bb0c
    564c:	0000bb12 	.word	0x0000bb12
    5650:	0000bb16 	.word	0x0000bb16
    5654:	0000577d 	.word	0x0000577d
    5658:	000053e7 	.word	0x000053e7

0000565c <__cvt>:
__cvt():
    565c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    5660:	ec55 4b10 	vmov	r4, r5, d0
    5664:	2d00      	cmp	r5, #0
    5666:	460e      	mov	r6, r1
    5668:	4691      	mov	r9, r2
    566a:	4619      	mov	r1, r3
    566c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    5670:	f04f 0200 	mov.w	r2, #0
    5674:	da03      	bge.n	567e <__cvt+0x22>
    5676:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    567a:	461d      	mov	r5, r3
    567c:	222d      	movs	r2, #45	; 0x2d
    567e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    5680:	700a      	strb	r2, [r1, #0]
    5682:	f027 0720 	bic.w	r7, r7, #32
    5686:	2f46      	cmp	r7, #70	; 0x46
    5688:	d004      	beq.n	5694 <__cvt+0x38>
    568a:	2f45      	cmp	r7, #69	; 0x45
    568c:	d100      	bne.n	5690 <__cvt+0x34>
    568e:	3601      	adds	r6, #1
    5690:	2102      	movs	r1, #2
    5692:	e000      	b.n	5696 <__cvt+0x3a>
    5694:	2103      	movs	r1, #3
    5696:	ab03      	add	r3, sp, #12
    5698:	9301      	str	r3, [sp, #4]
    569a:	ab02      	add	r3, sp, #8
    569c:	9300      	str	r3, [sp, #0]
    569e:	4632      	mov	r2, r6
    56a0:	4653      	mov	r3, sl
    56a2:	ec45 4b10 	vmov	d0, r4, r5
    56a6:	f002 f84b 	bl	7740 <_dtoa_r>
    56aa:	2f47      	cmp	r7, #71	; 0x47
    56ac:	4680      	mov	r8, r0
    56ae:	d102      	bne.n	56b6 <__cvt+0x5a>
    56b0:	f019 0f01 	tst.w	r9, #1
    56b4:	d022      	beq.n	56fc <__cvt+0xa0>
    56b6:	2f46      	cmp	r7, #70	; 0x46
    56b8:	eb08 0906 	add.w	r9, r8, r6
    56bc:	d111      	bne.n	56e2 <__cvt+0x86>
    56be:	f898 3000 	ldrb.w	r3, [r8]
    56c2:	2b30      	cmp	r3, #48	; 0x30
    56c4:	d10a      	bne.n	56dc <__cvt+0x80>
    56c6:	2200      	movs	r2, #0
    56c8:	2300      	movs	r3, #0
    56ca:	4620      	mov	r0, r4
    56cc:	4629      	mov	r1, r5
    56ce:	f004 ff9b 	bl	a608 <__aeabi_dcmpeq>
    56d2:	b918      	cbnz	r0, 56dc <__cvt+0x80>
    56d4:	f1c6 0601 	rsb	r6, r6, #1
    56d8:	f8ca 6000 	str.w	r6, [sl]
    56dc:	f8da 3000 	ldr.w	r3, [sl]
    56e0:	4499      	add	r9, r3
    56e2:	2200      	movs	r2, #0
    56e4:	2300      	movs	r3, #0
    56e6:	4620      	mov	r0, r4
    56e8:	4629      	mov	r1, r5
    56ea:	f004 ff8d 	bl	a608 <__aeabi_dcmpeq>
    56ee:	b108      	cbz	r0, 56f4 <__cvt+0x98>
    56f0:	f8cd 900c 	str.w	r9, [sp, #12]
    56f4:	2230      	movs	r2, #48	; 0x30
    56f6:	9b03      	ldr	r3, [sp, #12]
    56f8:	454b      	cmp	r3, r9
    56fa:	d308      	bcc.n	570e <__cvt+0xb2>
    56fc:	9b03      	ldr	r3, [sp, #12]
    56fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5700:	eba3 0308 	sub.w	r3, r3, r8
    5704:	4640      	mov	r0, r8
    5706:	6013      	str	r3, [r2, #0]
    5708:	b004      	add	sp, #16
    570a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    570e:	1c59      	adds	r1, r3, #1
    5710:	9103      	str	r1, [sp, #12]
    5712:	701a      	strb	r2, [r3, #0]
    5714:	e7ef      	b.n	56f6 <__cvt+0x9a>

00005716 <__exponent>:
__exponent():
    5716:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5718:	2900      	cmp	r1, #0
    571a:	bfba      	itte	lt
    571c:	4249      	neglt	r1, r1
    571e:	232d      	movlt	r3, #45	; 0x2d
    5720:	232b      	movge	r3, #43	; 0x2b
    5722:	2909      	cmp	r1, #9
    5724:	7002      	strb	r2, [r0, #0]
    5726:	7043      	strb	r3, [r0, #1]
    5728:	dd21      	ble.n	576e <__exponent+0x58>
    572a:	f10d 0307 	add.w	r3, sp, #7
    572e:	461f      	mov	r7, r3
    5730:	260a      	movs	r6, #10
    5732:	fb91 f2f6 	sdiv	r2, r1, r6
    5736:	fb06 1412 	mls	r4, r6, r2, r1
    573a:	3430      	adds	r4, #48	; 0x30
    573c:	2963      	cmp	r1, #99	; 0x63
    573e:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
    5742:	f803 4c01 	strb.w	r4, [r3, #-1]
    5746:	dc0a      	bgt.n	575e <__exponent+0x48>
    5748:	3230      	adds	r2, #48	; 0x30
    574a:	f805 2c01 	strb.w	r2, [r5, #-1]
    574e:	3b02      	subs	r3, #2
    5750:	1c82      	adds	r2, r0, #2
    5752:	42bb      	cmp	r3, r7
    5754:	4614      	mov	r4, r2
    5756:	d305      	bcc.n	5764 <__exponent+0x4e>
    5758:	1a20      	subs	r0, r4, r0
    575a:	b003      	add	sp, #12
    575c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    575e:	462b      	mov	r3, r5
    5760:	4611      	mov	r1, r2
    5762:	e7e6      	b.n	5732 <__exponent+0x1c>
    5764:	f813 1b01 	ldrb.w	r1, [r3], #1
    5768:	f802 1b01 	strb.w	r1, [r2], #1
    576c:	e7f1      	b.n	5752 <__exponent+0x3c>
    576e:	2330      	movs	r3, #48	; 0x30
    5770:	4419      	add	r1, r3
    5772:	7083      	strb	r3, [r0, #2]
    5774:	1d04      	adds	r4, r0, #4
    5776:	70c1      	strb	r1, [r0, #3]
    5778:	e7ee      	b.n	5758 <__exponent+0x42>
    577a:	Address 0x000000000000577a is out of bounds.


0000577c <_printf_float>:
_printf_float():
    577c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5780:	b08d      	sub	sp, #52	; 0x34
    5782:	460c      	mov	r4, r1
    5784:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    5788:	4616      	mov	r6, r2
    578a:	461f      	mov	r7, r3
    578c:	4605      	mov	r5, r0
    578e:	f003 fadf 	bl	8d50 <_localeconv_r>
    5792:	6803      	ldr	r3, [r0, #0]
    5794:	9306      	str	r3, [sp, #24]
    5796:	4618      	mov	r0, r3
    5798:	f000 ff47 	bl	662a <strlen>
    579c:	2300      	movs	r3, #0
    579e:	930a      	str	r3, [sp, #40]	; 0x28
    57a0:	f8d8 3000 	ldr.w	r3, [r8]
    57a4:	9007      	str	r0, [sp, #28]
    57a6:	3307      	adds	r3, #7
    57a8:	f023 0307 	bic.w	r3, r3, #7
    57ac:	f103 0208 	add.w	r2, r3, #8
    57b0:	f894 a018 	ldrb.w	sl, [r4, #24]
    57b4:	f8d4 b000 	ldr.w	fp, [r4]
    57b8:	f8c8 2000 	str.w	r2, [r8]
    57bc:	e9d3 2300 	ldrd	r2, r3, [r3]
    57c0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    57c4:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
    57c8:	ed8d 7b04 	vstr	d7, [sp, #16]
    57cc:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
    57d0:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
    57d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    57d8:	4ba6      	ldr	r3, [pc, #664]	; (5a74 <_printf_float+0x2f8>)
    57da:	4640      	mov	r0, r8
    57dc:	4649      	mov	r1, r9
    57de:	f004 ff45 	bl	a66c <__aeabi_dcmpun>
    57e2:	bb70      	cbnz	r0, 5842 <_printf_float+0xc6>
    57e4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    57e8:	4ba2      	ldr	r3, [pc, #648]	; (5a74 <_printf_float+0x2f8>)
    57ea:	4640      	mov	r0, r8
    57ec:	4649      	mov	r1, r9
    57ee:	f004 ff1f 	bl	a630 <__aeabi_dcmple>
    57f2:	bb30      	cbnz	r0, 5842 <_printf_float+0xc6>
    57f4:	2200      	movs	r2, #0
    57f6:	2300      	movs	r3, #0
    57f8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    57fc:	f004 ff0e 	bl	a61c <__aeabi_dcmplt>
    5800:	b110      	cbz	r0, 5808 <_printf_float+0x8c>
    5802:	232d      	movs	r3, #45	; 0x2d
    5804:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5808:	4a9b      	ldr	r2, [pc, #620]	; (5a78 <_printf_float+0x2fc>)
    580a:	4b9c      	ldr	r3, [pc, #624]	; (5a7c <_printf_float+0x300>)
    580c:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    5810:	bf94      	ite	ls
    5812:	4690      	movls	r8, r2
    5814:	4698      	movhi	r8, r3
    5816:	2303      	movs	r3, #3
    5818:	f02b 0204 	bic.w	r2, fp, #4
    581c:	6123      	str	r3, [r4, #16]
    581e:	6022      	str	r2, [r4, #0]
    5820:	f04f 0900 	mov.w	r9, #0
    5824:	9700      	str	r7, [sp, #0]
    5826:	4633      	mov	r3, r6
    5828:	aa0b      	add	r2, sp, #44	; 0x2c
    582a:	4621      	mov	r1, r4
    582c:	4628      	mov	r0, r5
    582e:	f000 f9cf 	bl	5bd0 <_printf_common>
    5832:	3001      	adds	r0, #1
    5834:	f040 808c 	bne.w	5950 <_printf_float+0x1d4>
    5838:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    583c:	b00d      	add	sp, #52	; 0x34
    583e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5842:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    5846:	4610      	mov	r0, r2
    5848:	4619      	mov	r1, r3
    584a:	f004 ff0f 	bl	a66c <__aeabi_dcmpun>
    584e:	b140      	cbz	r0, 5862 <_printf_float+0xe6>
    5850:	9b05      	ldr	r3, [sp, #20]
    5852:	4a8b      	ldr	r2, [pc, #556]	; (5a80 <_printf_float+0x304>)
    5854:	2b00      	cmp	r3, #0
    5856:	bfbc      	itt	lt
    5858:	232d      	movlt	r3, #45	; 0x2d
    585a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
    585e:	4b89      	ldr	r3, [pc, #548]	; (5a84 <_printf_float+0x308>)
    5860:	e7d4      	b.n	580c <_printf_float+0x90>
    5862:	6863      	ldr	r3, [r4, #4]
    5864:	1c5a      	adds	r2, r3, #1
    5866:	f00a 09df 	and.w	r9, sl, #223	; 0xdf
    586a:	d13e      	bne.n	58ea <_printf_float+0x16e>
    586c:	2306      	movs	r3, #6
    586e:	6063      	str	r3, [r4, #4]
    5870:	2300      	movs	r3, #0
    5872:	9303      	str	r3, [sp, #12]
    5874:	ab0a      	add	r3, sp, #40	; 0x28
    5876:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    587a:	e9cd a301 	strd	sl, r3, [sp, #4]
    587e:	ab09      	add	r3, sp, #36	; 0x24
    5880:	9300      	str	r3, [sp, #0]
    5882:	6861      	ldr	r1, [r4, #4]
    5884:	6022      	str	r2, [r4, #0]
    5886:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    588a:	ed9d 0b04 	vldr	d0, [sp, #16]
    588e:	4628      	mov	r0, r5
    5890:	f7ff fee4 	bl	565c <__cvt>
    5894:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    5898:	4680      	mov	r8, r0
    589a:	9909      	ldr	r1, [sp, #36]	; 0x24
    589c:	d108      	bne.n	58b0 <_printf_float+0x134>
    589e:	1cc8      	adds	r0, r1, #3
    58a0:	db02      	blt.n	58a8 <_printf_float+0x12c>
    58a2:	6863      	ldr	r3, [r4, #4]
    58a4:	4299      	cmp	r1, r3
    58a6:	dd41      	ble.n	592c <_printf_float+0x1b0>
    58a8:	f1aa 0a02 	sub.w	sl, sl, #2
    58ac:	fa5f fa8a 	uxtb.w	sl, sl
    58b0:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    58b4:	d820      	bhi.n	58f8 <_printf_float+0x17c>
    58b6:	3901      	subs	r1, #1
    58b8:	4652      	mov	r2, sl
    58ba:	f104 0050 	add.w	r0, r4, #80	; 0x50
    58be:	9109      	str	r1, [sp, #36]	; 0x24
    58c0:	f7ff ff29 	bl	5716 <__exponent>
    58c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    58c6:	1813      	adds	r3, r2, r0
    58c8:	2a01      	cmp	r2, #1
    58ca:	4681      	mov	r9, r0
    58cc:	6123      	str	r3, [r4, #16]
    58ce:	dc02      	bgt.n	58d6 <_printf_float+0x15a>
    58d0:	6822      	ldr	r2, [r4, #0]
    58d2:	07d2      	lsls	r2, r2, #31
    58d4:	d501      	bpl.n	58da <_printf_float+0x15e>
    58d6:	3301      	adds	r3, #1
    58d8:	6123      	str	r3, [r4, #16]
    58da:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    58de:	2b00      	cmp	r3, #0
    58e0:	d0a0      	beq.n	5824 <_printf_float+0xa8>
    58e2:	232d      	movs	r3, #45	; 0x2d
    58e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    58e8:	e79c      	b.n	5824 <_printf_float+0xa8>
    58ea:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    58ee:	d1bf      	bne.n	5870 <_printf_float+0xf4>
    58f0:	2b00      	cmp	r3, #0
    58f2:	d1bd      	bne.n	5870 <_printf_float+0xf4>
    58f4:	2301      	movs	r3, #1
    58f6:	e7ba      	b.n	586e <_printf_float+0xf2>
    58f8:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    58fc:	d118      	bne.n	5930 <_printf_float+0x1b4>
    58fe:	2900      	cmp	r1, #0
    5900:	6863      	ldr	r3, [r4, #4]
    5902:	dd0b      	ble.n	591c <_printf_float+0x1a0>
    5904:	6121      	str	r1, [r4, #16]
    5906:	b913      	cbnz	r3, 590e <_printf_float+0x192>
    5908:	6822      	ldr	r2, [r4, #0]
    590a:	07d0      	lsls	r0, r2, #31
    590c:	d502      	bpl.n	5914 <_printf_float+0x198>
    590e:	3301      	adds	r3, #1
    5910:	440b      	add	r3, r1
    5912:	6123      	str	r3, [r4, #16]
    5914:	65a1      	str	r1, [r4, #88]	; 0x58
    5916:	f04f 0900 	mov.w	r9, #0
    591a:	e7de      	b.n	58da <_printf_float+0x15e>
    591c:	b913      	cbnz	r3, 5924 <_printf_float+0x1a8>
    591e:	6822      	ldr	r2, [r4, #0]
    5920:	07d2      	lsls	r2, r2, #31
    5922:	d501      	bpl.n	5928 <_printf_float+0x1ac>
    5924:	3302      	adds	r3, #2
    5926:	e7f4      	b.n	5912 <_printf_float+0x196>
    5928:	2301      	movs	r3, #1
    592a:	e7f2      	b.n	5912 <_printf_float+0x196>
    592c:	f04f 0a67 	mov.w	sl, #103	; 0x67
    5930:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5932:	4299      	cmp	r1, r3
    5934:	db05      	blt.n	5942 <_printf_float+0x1c6>
    5936:	6823      	ldr	r3, [r4, #0]
    5938:	6121      	str	r1, [r4, #16]
    593a:	07d8      	lsls	r0, r3, #31
    593c:	d5ea      	bpl.n	5914 <_printf_float+0x198>
    593e:	1c4b      	adds	r3, r1, #1
    5940:	e7e7      	b.n	5912 <_printf_float+0x196>
    5942:	2900      	cmp	r1, #0
    5944:	bfd4      	ite	le
    5946:	f1c1 0202 	rsble	r2, r1, #2
    594a:	2201      	movgt	r2, #1
    594c:	4413      	add	r3, r2
    594e:	e7e0      	b.n	5912 <_printf_float+0x196>
    5950:	6823      	ldr	r3, [r4, #0]
    5952:	055a      	lsls	r2, r3, #21
    5954:	d407      	bmi.n	5966 <_printf_float+0x1ea>
    5956:	6923      	ldr	r3, [r4, #16]
    5958:	4642      	mov	r2, r8
    595a:	4631      	mov	r1, r6
    595c:	4628      	mov	r0, r5
    595e:	47b8      	blx	r7
    5960:	3001      	adds	r0, #1
    5962:	d12b      	bne.n	59bc <_printf_float+0x240>
    5964:	e768      	b.n	5838 <_printf_float+0xbc>
    5966:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    596a:	f240 80dc 	bls.w	5b26 <_printf_float+0x3aa>
    596e:	2200      	movs	r2, #0
    5970:	2300      	movs	r3, #0
    5972:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5976:	f004 fe47 	bl	a608 <__aeabi_dcmpeq>
    597a:	2800      	cmp	r0, #0
    597c:	d033      	beq.n	59e6 <_printf_float+0x26a>
    597e:	2301      	movs	r3, #1
    5980:	4a41      	ldr	r2, [pc, #260]	; (5a88 <_printf_float+0x30c>)
    5982:	4631      	mov	r1, r6
    5984:	4628      	mov	r0, r5
    5986:	47b8      	blx	r7
    5988:	3001      	adds	r0, #1
    598a:	f43f af55 	beq.w	5838 <_printf_float+0xbc>
    598e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5992:	429a      	cmp	r2, r3
    5994:	db02      	blt.n	599c <_printf_float+0x220>
    5996:	6823      	ldr	r3, [r4, #0]
    5998:	07d8      	lsls	r0, r3, #31
    599a:	d50f      	bpl.n	59bc <_printf_float+0x240>
    599c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    59a0:	4631      	mov	r1, r6
    59a2:	4628      	mov	r0, r5
    59a4:	47b8      	blx	r7
    59a6:	3001      	adds	r0, #1
    59a8:	f43f af46 	beq.w	5838 <_printf_float+0xbc>
    59ac:	f04f 0800 	mov.w	r8, #0
    59b0:	f104 091a 	add.w	r9, r4, #26
    59b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    59b6:	3b01      	subs	r3, #1
    59b8:	4543      	cmp	r3, r8
    59ba:	dc09      	bgt.n	59d0 <_printf_float+0x254>
    59bc:	6823      	ldr	r3, [r4, #0]
    59be:	079b      	lsls	r3, r3, #30
    59c0:	f100 8101 	bmi.w	5bc6 <_printf_float+0x44a>
    59c4:	68e0      	ldr	r0, [r4, #12]
    59c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    59c8:	4298      	cmp	r0, r3
    59ca:	bfb8      	it	lt
    59cc:	4618      	movlt	r0, r3
    59ce:	e735      	b.n	583c <_printf_float+0xc0>
    59d0:	2301      	movs	r3, #1
    59d2:	464a      	mov	r2, r9
    59d4:	4631      	mov	r1, r6
    59d6:	4628      	mov	r0, r5
    59d8:	47b8      	blx	r7
    59da:	3001      	adds	r0, #1
    59dc:	f43f af2c 	beq.w	5838 <_printf_float+0xbc>
    59e0:	f108 0801 	add.w	r8, r8, #1
    59e4:	e7e6      	b.n	59b4 <_printf_float+0x238>
    59e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    59e8:	2b00      	cmp	r3, #0
    59ea:	dc2b      	bgt.n	5a44 <_printf_float+0x2c8>
    59ec:	2301      	movs	r3, #1
    59ee:	4a26      	ldr	r2, [pc, #152]	; (5a88 <_printf_float+0x30c>)
    59f0:	4631      	mov	r1, r6
    59f2:	4628      	mov	r0, r5
    59f4:	47b8      	blx	r7
    59f6:	3001      	adds	r0, #1
    59f8:	f43f af1e 	beq.w	5838 <_printf_float+0xbc>
    59fc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5a00:	4313      	orrs	r3, r2
    5a02:	d102      	bne.n	5a0a <_printf_float+0x28e>
    5a04:	6823      	ldr	r3, [r4, #0]
    5a06:	07d9      	lsls	r1, r3, #31
    5a08:	d5d8      	bpl.n	59bc <_printf_float+0x240>
    5a0a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5a0e:	4631      	mov	r1, r6
    5a10:	4628      	mov	r0, r5
    5a12:	47b8      	blx	r7
    5a14:	3001      	adds	r0, #1
    5a16:	f43f af0f 	beq.w	5838 <_printf_float+0xbc>
    5a1a:	f04f 0900 	mov.w	r9, #0
    5a1e:	f104 0a1a 	add.w	sl, r4, #26
    5a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5a24:	425b      	negs	r3, r3
    5a26:	454b      	cmp	r3, r9
    5a28:	dc01      	bgt.n	5a2e <_printf_float+0x2b2>
    5a2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5a2c:	e794      	b.n	5958 <_printf_float+0x1dc>
    5a2e:	2301      	movs	r3, #1
    5a30:	4652      	mov	r2, sl
    5a32:	4631      	mov	r1, r6
    5a34:	4628      	mov	r0, r5
    5a36:	47b8      	blx	r7
    5a38:	3001      	adds	r0, #1
    5a3a:	f43f aefd 	beq.w	5838 <_printf_float+0xbc>
    5a3e:	f109 0901 	add.w	r9, r9, #1
    5a42:	e7ee      	b.n	5a22 <_printf_float+0x2a6>
    5a44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5a46:	6da3      	ldr	r3, [r4, #88]	; 0x58
    5a48:	429a      	cmp	r2, r3
    5a4a:	bfa8      	it	ge
    5a4c:	461a      	movge	r2, r3
    5a4e:	2a00      	cmp	r2, #0
    5a50:	4691      	mov	r9, r2
    5a52:	dd07      	ble.n	5a64 <_printf_float+0x2e8>
    5a54:	4613      	mov	r3, r2
    5a56:	4631      	mov	r1, r6
    5a58:	4642      	mov	r2, r8
    5a5a:	4628      	mov	r0, r5
    5a5c:	47b8      	blx	r7
    5a5e:	3001      	adds	r0, #1
    5a60:	f43f aeea 	beq.w	5838 <_printf_float+0xbc>
    5a64:	f104 031a 	add.w	r3, r4, #26
    5a68:	f04f 0b00 	mov.w	fp, #0
    5a6c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    5a70:	9304      	str	r3, [sp, #16]
    5a72:	e015      	b.n	5aa0 <_printf_float+0x324>
    5a74:	7fefffff 	.word	0x7fefffff
    5a78:	0000bb1d 	.word	0x0000bb1d
    5a7c:	0000bb21 	.word	0x0000bb21
    5a80:	0000bb25 	.word	0x0000bb25
    5a84:	0000bb29 	.word	0x0000bb29
    5a88:	0000b4cc 	.word	0x0000b4cc
    5a8c:	2301      	movs	r3, #1
    5a8e:	9a04      	ldr	r2, [sp, #16]
    5a90:	4631      	mov	r1, r6
    5a92:	4628      	mov	r0, r5
    5a94:	47b8      	blx	r7
    5a96:	3001      	adds	r0, #1
    5a98:	f43f aece 	beq.w	5838 <_printf_float+0xbc>
    5a9c:	f10b 0b01 	add.w	fp, fp, #1
    5aa0:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    5aa4:	ebaa 0309 	sub.w	r3, sl, r9
    5aa8:	455b      	cmp	r3, fp
    5aaa:	dcef      	bgt.n	5a8c <_printf_float+0x310>
    5aac:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5ab0:	429a      	cmp	r2, r3
    5ab2:	db1b      	blt.n	5aec <_printf_float+0x370>
    5ab4:	6823      	ldr	r3, [r4, #0]
    5ab6:	07da      	lsls	r2, r3, #31
    5ab8:	d418      	bmi.n	5aec <_printf_float+0x370>
    5aba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5abe:	4592      	cmp	sl, r2
    5ac0:	db1c      	blt.n	5afc <_printf_float+0x380>
    5ac2:	eba3 090a 	sub.w	r9, r3, sl
    5ac6:	f1b9 0f00 	cmp.w	r9, #0
    5aca:	dd08      	ble.n	5ade <_printf_float+0x362>
    5acc:	464b      	mov	r3, r9
    5ace:	eb08 020a 	add.w	r2, r8, sl
    5ad2:	4631      	mov	r1, r6
    5ad4:	4628      	mov	r0, r5
    5ad6:	47b8      	blx	r7
    5ad8:	3001      	adds	r0, #1
    5ada:	f43f aead 	beq.w	5838 <_printf_float+0xbc>
    5ade:	f04f 0800 	mov.w	r8, #0
    5ae2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    5ae6:	f104 0a1a 	add.w	sl, r4, #26
    5aea:	e014      	b.n	5b16 <_printf_float+0x39a>
    5aec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5af0:	4631      	mov	r1, r6
    5af2:	4628      	mov	r0, r5
    5af4:	47b8      	blx	r7
    5af6:	3001      	adds	r0, #1
    5af8:	d1df      	bne.n	5aba <_printf_float+0x33e>
    5afa:	e69d      	b.n	5838 <_printf_float+0xbc>
    5afc:	eba3 0902 	sub.w	r9, r3, r2
    5b00:	e7e1      	b.n	5ac6 <_printf_float+0x34a>
    5b02:	2301      	movs	r3, #1
    5b04:	4652      	mov	r2, sl
    5b06:	4631      	mov	r1, r6
    5b08:	4628      	mov	r0, r5
    5b0a:	47b8      	blx	r7
    5b0c:	3001      	adds	r0, #1
    5b0e:	f43f ae93 	beq.w	5838 <_printf_float+0xbc>
    5b12:	f108 0801 	add.w	r8, r8, #1
    5b16:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5b1a:	1a9b      	subs	r3, r3, r2
    5b1c:	eba3 0309 	sub.w	r3, r3, r9
    5b20:	4543      	cmp	r3, r8
    5b22:	dcee      	bgt.n	5b02 <_printf_float+0x386>
    5b24:	e74a      	b.n	59bc <_printf_float+0x240>
    5b26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5b28:	2a01      	cmp	r2, #1
    5b2a:	dc01      	bgt.n	5b30 <_printf_float+0x3b4>
    5b2c:	07db      	lsls	r3, r3, #31
    5b2e:	d537      	bpl.n	5ba0 <_printf_float+0x424>
    5b30:	2301      	movs	r3, #1
    5b32:	4642      	mov	r2, r8
    5b34:	4631      	mov	r1, r6
    5b36:	4628      	mov	r0, r5
    5b38:	47b8      	blx	r7
    5b3a:	3001      	adds	r0, #1
    5b3c:	f43f ae7c 	beq.w	5838 <_printf_float+0xbc>
    5b40:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5b44:	4631      	mov	r1, r6
    5b46:	4628      	mov	r0, r5
    5b48:	47b8      	blx	r7
    5b4a:	3001      	adds	r0, #1
    5b4c:	f43f ae74 	beq.w	5838 <_printf_float+0xbc>
    5b50:	2200      	movs	r2, #0
    5b52:	2300      	movs	r3, #0
    5b54:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5b58:	f004 fd56 	bl	a608 <__aeabi_dcmpeq>
    5b5c:	b9d8      	cbnz	r0, 5b96 <_printf_float+0x41a>
    5b5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5b60:	f108 0201 	add.w	r2, r8, #1
    5b64:	3b01      	subs	r3, #1
    5b66:	4631      	mov	r1, r6
    5b68:	4628      	mov	r0, r5
    5b6a:	47b8      	blx	r7
    5b6c:	3001      	adds	r0, #1
    5b6e:	d10e      	bne.n	5b8e <_printf_float+0x412>
    5b70:	e662      	b.n	5838 <_printf_float+0xbc>
    5b72:	2301      	movs	r3, #1
    5b74:	4652      	mov	r2, sl
    5b76:	4631      	mov	r1, r6
    5b78:	4628      	mov	r0, r5
    5b7a:	47b8      	blx	r7
    5b7c:	3001      	adds	r0, #1
    5b7e:	f43f ae5b 	beq.w	5838 <_printf_float+0xbc>
    5b82:	f108 0801 	add.w	r8, r8, #1
    5b86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5b88:	3b01      	subs	r3, #1
    5b8a:	4543      	cmp	r3, r8
    5b8c:	dcf1      	bgt.n	5b72 <_printf_float+0x3f6>
    5b8e:	464b      	mov	r3, r9
    5b90:	f104 0250 	add.w	r2, r4, #80	; 0x50
    5b94:	e6e1      	b.n	595a <_printf_float+0x1de>
    5b96:	f04f 0800 	mov.w	r8, #0
    5b9a:	f104 0a1a 	add.w	sl, r4, #26
    5b9e:	e7f2      	b.n	5b86 <_printf_float+0x40a>
    5ba0:	2301      	movs	r3, #1
    5ba2:	4642      	mov	r2, r8
    5ba4:	e7df      	b.n	5b66 <_printf_float+0x3ea>
    5ba6:	2301      	movs	r3, #1
    5ba8:	464a      	mov	r2, r9
    5baa:	4631      	mov	r1, r6
    5bac:	4628      	mov	r0, r5
    5bae:	47b8      	blx	r7
    5bb0:	3001      	adds	r0, #1
    5bb2:	f43f ae41 	beq.w	5838 <_printf_float+0xbc>
    5bb6:	f108 0801 	add.w	r8, r8, #1
    5bba:	68e3      	ldr	r3, [r4, #12]
    5bbc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5bbe:	1a9b      	subs	r3, r3, r2
    5bc0:	4543      	cmp	r3, r8
    5bc2:	dcf0      	bgt.n	5ba6 <_printf_float+0x42a>
    5bc4:	e6fe      	b.n	59c4 <_printf_float+0x248>
    5bc6:	f04f 0800 	mov.w	r8, #0
    5bca:	f104 0919 	add.w	r9, r4, #25
    5bce:	e7f4      	b.n	5bba <_printf_float+0x43e>

00005bd0 <_printf_common>:
_printf_common():
    5bd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5bd4:	4691      	mov	r9, r2
    5bd6:	461f      	mov	r7, r3
    5bd8:	688a      	ldr	r2, [r1, #8]
    5bda:	690b      	ldr	r3, [r1, #16]
    5bdc:	f8dd 8020 	ldr.w	r8, [sp, #32]
    5be0:	4293      	cmp	r3, r2
    5be2:	bfb8      	it	lt
    5be4:	4613      	movlt	r3, r2
    5be6:	f8c9 3000 	str.w	r3, [r9]
    5bea:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    5bee:	4606      	mov	r6, r0
    5bf0:	460c      	mov	r4, r1
    5bf2:	b112      	cbz	r2, 5bfa <_printf_common+0x2a>
    5bf4:	3301      	adds	r3, #1
    5bf6:	f8c9 3000 	str.w	r3, [r9]
    5bfa:	6823      	ldr	r3, [r4, #0]
    5bfc:	0699      	lsls	r1, r3, #26
    5bfe:	bf42      	ittt	mi
    5c00:	f8d9 3000 	ldrmi.w	r3, [r9]
    5c04:	3302      	addmi	r3, #2
    5c06:	f8c9 3000 	strmi.w	r3, [r9]
    5c0a:	6825      	ldr	r5, [r4, #0]
    5c0c:	f015 0506 	ands.w	r5, r5, #6
    5c10:	d107      	bne.n	5c22 <_printf_common+0x52>
    5c12:	f104 0a19 	add.w	sl, r4, #25
    5c16:	68e3      	ldr	r3, [r4, #12]
    5c18:	f8d9 2000 	ldr.w	r2, [r9]
    5c1c:	1a9b      	subs	r3, r3, r2
    5c1e:	42ab      	cmp	r3, r5
    5c20:	dc28      	bgt.n	5c74 <_printf_common+0xa4>
    5c22:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    5c26:	6822      	ldr	r2, [r4, #0]
    5c28:	3300      	adds	r3, #0
    5c2a:	bf18      	it	ne
    5c2c:	2301      	movne	r3, #1
    5c2e:	0692      	lsls	r2, r2, #26
    5c30:	d42d      	bmi.n	5c8e <_printf_common+0xbe>
    5c32:	f104 0243 	add.w	r2, r4, #67	; 0x43
    5c36:	4639      	mov	r1, r7
    5c38:	4630      	mov	r0, r6
    5c3a:	47c0      	blx	r8
    5c3c:	3001      	adds	r0, #1
    5c3e:	d020      	beq.n	5c82 <_printf_common+0xb2>
    5c40:	6823      	ldr	r3, [r4, #0]
    5c42:	68e5      	ldr	r5, [r4, #12]
    5c44:	f8d9 2000 	ldr.w	r2, [r9]
    5c48:	f003 0306 	and.w	r3, r3, #6
    5c4c:	2b04      	cmp	r3, #4
    5c4e:	bf08      	it	eq
    5c50:	1aad      	subeq	r5, r5, r2
    5c52:	68a3      	ldr	r3, [r4, #8]
    5c54:	6922      	ldr	r2, [r4, #16]
    5c56:	bf0c      	ite	eq
    5c58:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    5c5c:	2500      	movne	r5, #0
    5c5e:	4293      	cmp	r3, r2
    5c60:	bfc4      	itt	gt
    5c62:	1a9b      	subgt	r3, r3, r2
    5c64:	18ed      	addgt	r5, r5, r3
    5c66:	f04f 0900 	mov.w	r9, #0
    5c6a:	341a      	adds	r4, #26
    5c6c:	454d      	cmp	r5, r9
    5c6e:	d11a      	bne.n	5ca6 <_printf_common+0xd6>
    5c70:	2000      	movs	r0, #0
    5c72:	e008      	b.n	5c86 <_printf_common+0xb6>
    5c74:	2301      	movs	r3, #1
    5c76:	4652      	mov	r2, sl
    5c78:	4639      	mov	r1, r7
    5c7a:	4630      	mov	r0, r6
    5c7c:	47c0      	blx	r8
    5c7e:	3001      	adds	r0, #1
    5c80:	d103      	bne.n	5c8a <_printf_common+0xba>
    5c82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5c86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5c8a:	3501      	adds	r5, #1
    5c8c:	e7c3      	b.n	5c16 <_printf_common+0x46>
    5c8e:	18e1      	adds	r1, r4, r3
    5c90:	1c5a      	adds	r2, r3, #1
    5c92:	2030      	movs	r0, #48	; 0x30
    5c94:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    5c98:	4422      	add	r2, r4
    5c9a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    5c9e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    5ca2:	3302      	adds	r3, #2
    5ca4:	e7c5      	b.n	5c32 <_printf_common+0x62>
    5ca6:	2301      	movs	r3, #1
    5ca8:	4622      	mov	r2, r4
    5caa:	4639      	mov	r1, r7
    5cac:	4630      	mov	r0, r6
    5cae:	47c0      	blx	r8
    5cb0:	3001      	adds	r0, #1
    5cb2:	d0e6      	beq.n	5c82 <_printf_common+0xb2>
    5cb4:	f109 0901 	add.w	r9, r9, #1
    5cb8:	e7d8      	b.n	5c6c <_printf_common+0x9c>
    5cba:	Address 0x0000000000005cba is out of bounds.


00005cbc <_printf_i>:
_printf_i():
    5cbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    5cc0:	4606      	mov	r6, r0
    5cc2:	460c      	mov	r4, r1
    5cc4:	f101 0043 	add.w	r0, r1, #67	; 0x43
    5cc8:	7e09      	ldrb	r1, [r1, #24]
    5cca:	b085      	sub	sp, #20
    5ccc:	296e      	cmp	r1, #110	; 0x6e
    5cce:	4698      	mov	r8, r3
    5cd0:	4617      	mov	r7, r2
    5cd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5cd4:	f000 80ba 	beq.w	5e4c <_printf_i+0x190>
    5cd8:	d824      	bhi.n	5d24 <_printf_i+0x68>
    5cda:	2963      	cmp	r1, #99	; 0x63
    5cdc:	d039      	beq.n	5d52 <_printf_i+0x96>
    5cde:	d80a      	bhi.n	5cf6 <_printf_i+0x3a>
    5ce0:	2900      	cmp	r1, #0
    5ce2:	f000 80c3 	beq.w	5e6c <_printf_i+0x1b0>
    5ce6:	2958      	cmp	r1, #88	; 0x58
    5ce8:	f000 8091 	beq.w	5e0e <_printf_i+0x152>
    5cec:	f104 0542 	add.w	r5, r4, #66	; 0x42
    5cf0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    5cf4:	e035      	b.n	5d62 <_printf_i+0xa6>
    5cf6:	2964      	cmp	r1, #100	; 0x64
    5cf8:	d001      	beq.n	5cfe <_printf_i+0x42>
    5cfa:	2969      	cmp	r1, #105	; 0x69
    5cfc:	d1f6      	bne.n	5cec <_printf_i+0x30>
    5cfe:	6825      	ldr	r5, [r4, #0]
    5d00:	681a      	ldr	r2, [r3, #0]
    5d02:	f015 0f80 	tst.w	r5, #128	; 0x80
    5d06:	f102 0104 	add.w	r1, r2, #4
    5d0a:	d02c      	beq.n	5d66 <_printf_i+0xaa>
    5d0c:	6812      	ldr	r2, [r2, #0]
    5d0e:	6019      	str	r1, [r3, #0]
    5d10:	2a00      	cmp	r2, #0
    5d12:	da03      	bge.n	5d1c <_printf_i+0x60>
    5d14:	232d      	movs	r3, #45	; 0x2d
    5d16:	4252      	negs	r2, r2
    5d18:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5d1c:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 5edc <_printf_i+0x220>
    5d20:	230a      	movs	r3, #10
    5d22:	e03f      	b.n	5da4 <_printf_i+0xe8>
    5d24:	2973      	cmp	r1, #115	; 0x73
    5d26:	f000 80a5 	beq.w	5e74 <_printf_i+0x1b8>
    5d2a:	d808      	bhi.n	5d3e <_printf_i+0x82>
    5d2c:	296f      	cmp	r1, #111	; 0x6f
    5d2e:	d021      	beq.n	5d74 <_printf_i+0xb8>
    5d30:	2970      	cmp	r1, #112	; 0x70
    5d32:	d1db      	bne.n	5cec <_printf_i+0x30>
    5d34:	6822      	ldr	r2, [r4, #0]
    5d36:	f042 0220 	orr.w	r2, r2, #32
    5d3a:	6022      	str	r2, [r4, #0]
    5d3c:	e003      	b.n	5d46 <_printf_i+0x8a>
    5d3e:	2975      	cmp	r1, #117	; 0x75
    5d40:	d018      	beq.n	5d74 <_printf_i+0xb8>
    5d42:	2978      	cmp	r1, #120	; 0x78
    5d44:	d1d2      	bne.n	5cec <_printf_i+0x30>
    5d46:	2278      	movs	r2, #120	; 0x78
    5d48:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    5d4c:	f8df c190 	ldr.w	ip, [pc, #400]	; 5ee0 <_printf_i+0x224>
    5d50:	e061      	b.n	5e16 <_printf_i+0x15a>
    5d52:	681a      	ldr	r2, [r3, #0]
    5d54:	1d11      	adds	r1, r2, #4
    5d56:	6019      	str	r1, [r3, #0]
    5d58:	6813      	ldr	r3, [r2, #0]
    5d5a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    5d5e:	f104 0542 	add.w	r5, r4, #66	; 0x42
    5d62:	2301      	movs	r3, #1
    5d64:	e093      	b.n	5e8e <_printf_i+0x1d2>
    5d66:	6812      	ldr	r2, [r2, #0]
    5d68:	6019      	str	r1, [r3, #0]
    5d6a:	f015 0f40 	tst.w	r5, #64	; 0x40
    5d6e:	bf18      	it	ne
    5d70:	b212      	sxthne	r2, r2
    5d72:	e7cd      	b.n	5d10 <_printf_i+0x54>
    5d74:	f8d4 c000 	ldr.w	ip, [r4]
    5d78:	681a      	ldr	r2, [r3, #0]
    5d7a:	f01c 0f80 	tst.w	ip, #128	; 0x80
    5d7e:	f102 0504 	add.w	r5, r2, #4
    5d82:	601d      	str	r5, [r3, #0]
    5d84:	d001      	beq.n	5d8a <_printf_i+0xce>
    5d86:	6812      	ldr	r2, [r2, #0]
    5d88:	e003      	b.n	5d92 <_printf_i+0xd6>
    5d8a:	f01c 0f40 	tst.w	ip, #64	; 0x40
    5d8e:	d0fa      	beq.n	5d86 <_printf_i+0xca>
    5d90:	8812      	ldrh	r2, [r2, #0]
    5d92:	f8df c148 	ldr.w	ip, [pc, #328]	; 5edc <_printf_i+0x220>
    5d96:	296f      	cmp	r1, #111	; 0x6f
    5d98:	bf0c      	ite	eq
    5d9a:	2308      	moveq	r3, #8
    5d9c:	230a      	movne	r3, #10
    5d9e:	2100      	movs	r1, #0
    5da0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    5da4:	6865      	ldr	r5, [r4, #4]
    5da6:	60a5      	str	r5, [r4, #8]
    5da8:	2d00      	cmp	r5, #0
    5daa:	bfa2      	ittt	ge
    5dac:	6821      	ldrge	r1, [r4, #0]
    5dae:	f021 0104 	bicge.w	r1, r1, #4
    5db2:	6021      	strge	r1, [r4, #0]
    5db4:	b90a      	cbnz	r2, 5dba <_printf_i+0xfe>
    5db6:	2d00      	cmp	r5, #0
    5db8:	d046      	beq.n	5e48 <_printf_i+0x18c>
    5dba:	4605      	mov	r5, r0
    5dbc:	fbb2 f1f3 	udiv	r1, r2, r3
    5dc0:	fb03 2e11 	mls	lr, r3, r1, r2
    5dc4:	4293      	cmp	r3, r2
    5dc6:	f81c e00e 	ldrb.w	lr, [ip, lr]
    5dca:	f805 ed01 	strb.w	lr, [r5, #-1]!
    5dce:	d939      	bls.n	5e44 <_printf_i+0x188>
    5dd0:	2b08      	cmp	r3, #8
    5dd2:	d10b      	bne.n	5dec <_printf_i+0x130>
    5dd4:	6823      	ldr	r3, [r4, #0]
    5dd6:	07da      	lsls	r2, r3, #31
    5dd8:	d508      	bpl.n	5dec <_printf_i+0x130>
    5dda:	6923      	ldr	r3, [r4, #16]
    5ddc:	6862      	ldr	r2, [r4, #4]
    5dde:	429a      	cmp	r2, r3
    5de0:	bfde      	ittt	le
    5de2:	2330      	movle	r3, #48	; 0x30
    5de4:	f805 3c01 	strble.w	r3, [r5, #-1]
    5de8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    5dec:	1b40      	subs	r0, r0, r5
    5dee:	6120      	str	r0, [r4, #16]
    5df0:	f8cd 8000 	str.w	r8, [sp]
    5df4:	463b      	mov	r3, r7
    5df6:	aa03      	add	r2, sp, #12
    5df8:	4621      	mov	r1, r4
    5dfa:	4630      	mov	r0, r6
    5dfc:	f7ff fee8 	bl	5bd0 <_printf_common>
    5e00:	3001      	adds	r0, #1
    5e02:	d149      	bne.n	5e98 <_printf_i+0x1dc>
    5e04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5e08:	b005      	add	sp, #20
    5e0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    5e0e:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 5edc <_printf_i+0x220>
    5e12:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    5e16:	681d      	ldr	r5, [r3, #0]
    5e18:	6821      	ldr	r1, [r4, #0]
    5e1a:	f855 2b04 	ldr.w	r2, [r5], #4
    5e1e:	601d      	str	r5, [r3, #0]
    5e20:	060d      	lsls	r5, r1, #24
    5e22:	d50b      	bpl.n	5e3c <_printf_i+0x180>
    5e24:	07cd      	lsls	r5, r1, #31
    5e26:	bf44      	itt	mi
    5e28:	f041 0120 	orrmi.w	r1, r1, #32
    5e2c:	6021      	strmi	r1, [r4, #0]
    5e2e:	b91a      	cbnz	r2, 5e38 <_printf_i+0x17c>
    5e30:	6823      	ldr	r3, [r4, #0]
    5e32:	f023 0320 	bic.w	r3, r3, #32
    5e36:	6023      	str	r3, [r4, #0]
    5e38:	2310      	movs	r3, #16
    5e3a:	e7b0      	b.n	5d9e <_printf_i+0xe2>
    5e3c:	064b      	lsls	r3, r1, #25
    5e3e:	bf48      	it	mi
    5e40:	b292      	uxthmi	r2, r2
    5e42:	e7ef      	b.n	5e24 <_printf_i+0x168>
    5e44:	460a      	mov	r2, r1
    5e46:	e7b9      	b.n	5dbc <_printf_i+0x100>
    5e48:	4605      	mov	r5, r0
    5e4a:	e7c1      	b.n	5dd0 <_printf_i+0x114>
    5e4c:	681a      	ldr	r2, [r3, #0]
    5e4e:	f8d4 c000 	ldr.w	ip, [r4]
    5e52:	6961      	ldr	r1, [r4, #20]
    5e54:	1d15      	adds	r5, r2, #4
    5e56:	601d      	str	r5, [r3, #0]
    5e58:	f01c 0f80 	tst.w	ip, #128	; 0x80
    5e5c:	6813      	ldr	r3, [r2, #0]
    5e5e:	d001      	beq.n	5e64 <_printf_i+0x1a8>
    5e60:	6019      	str	r1, [r3, #0]
    5e62:	e003      	b.n	5e6c <_printf_i+0x1b0>
    5e64:	f01c 0f40 	tst.w	ip, #64	; 0x40
    5e68:	d0fa      	beq.n	5e60 <_printf_i+0x1a4>
    5e6a:	8019      	strh	r1, [r3, #0]
    5e6c:	2300      	movs	r3, #0
    5e6e:	6123      	str	r3, [r4, #16]
    5e70:	4605      	mov	r5, r0
    5e72:	e7bd      	b.n	5df0 <_printf_i+0x134>
    5e74:	681a      	ldr	r2, [r3, #0]
    5e76:	1d11      	adds	r1, r2, #4
    5e78:	6019      	str	r1, [r3, #0]
    5e7a:	6815      	ldr	r5, [r2, #0]
    5e7c:	6862      	ldr	r2, [r4, #4]
    5e7e:	2100      	movs	r1, #0
    5e80:	4628      	mov	r0, r5
    5e82:	f002 ffe5 	bl	8e50 <memchr>
    5e86:	b108      	cbz	r0, 5e8c <_printf_i+0x1d0>
    5e88:	1b40      	subs	r0, r0, r5
    5e8a:	6060      	str	r0, [r4, #4]
    5e8c:	6863      	ldr	r3, [r4, #4]
    5e8e:	6123      	str	r3, [r4, #16]
    5e90:	2300      	movs	r3, #0
    5e92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5e96:	e7ab      	b.n	5df0 <_printf_i+0x134>
    5e98:	6923      	ldr	r3, [r4, #16]
    5e9a:	462a      	mov	r2, r5
    5e9c:	4639      	mov	r1, r7
    5e9e:	4630      	mov	r0, r6
    5ea0:	47c0      	blx	r8
    5ea2:	3001      	adds	r0, #1
    5ea4:	d0ae      	beq.n	5e04 <_printf_i+0x148>
    5ea6:	6823      	ldr	r3, [r4, #0]
    5ea8:	079b      	lsls	r3, r3, #30
    5eaa:	d413      	bmi.n	5ed4 <_printf_i+0x218>
    5eac:	68e0      	ldr	r0, [r4, #12]
    5eae:	9b03      	ldr	r3, [sp, #12]
    5eb0:	4298      	cmp	r0, r3
    5eb2:	bfb8      	it	lt
    5eb4:	4618      	movlt	r0, r3
    5eb6:	e7a7      	b.n	5e08 <_printf_i+0x14c>
    5eb8:	2301      	movs	r3, #1
    5eba:	464a      	mov	r2, r9
    5ebc:	4639      	mov	r1, r7
    5ebe:	4630      	mov	r0, r6
    5ec0:	47c0      	blx	r8
    5ec2:	3001      	adds	r0, #1
    5ec4:	d09e      	beq.n	5e04 <_printf_i+0x148>
    5ec6:	3501      	adds	r5, #1
    5ec8:	68e3      	ldr	r3, [r4, #12]
    5eca:	9a03      	ldr	r2, [sp, #12]
    5ecc:	1a9b      	subs	r3, r3, r2
    5ece:	42ab      	cmp	r3, r5
    5ed0:	dcf2      	bgt.n	5eb8 <_printf_i+0x1fc>
    5ed2:	e7eb      	b.n	5eac <_printf_i+0x1f0>
    5ed4:	2500      	movs	r5, #0
    5ed6:	f104 0919 	add.w	r9, r4, #25
    5eda:	e7f5      	b.n	5ec8 <_printf_i+0x20c>
    5edc:	0000bb2d 	.word	0x0000bb2d
    5ee0:	0000bb3e 	.word	0x0000bb3e

00005ee4 <_scanf_float>:
_scanf_float():
    5ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5ee8:	b087      	sub	sp, #28
    5eea:	4617      	mov	r7, r2
    5eec:	9303      	str	r3, [sp, #12]
    5eee:	688b      	ldr	r3, [r1, #8]
    5ef0:	1e5a      	subs	r2, r3, #1
    5ef2:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    5ef6:	bf83      	ittte	hi
    5ef8:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    5efc:	195b      	addhi	r3, r3, r5
    5efe:	9302      	strhi	r3, [sp, #8]
    5f00:	2300      	movls	r3, #0
    5f02:	bf86      	itte	hi
    5f04:	f240 135d 	movwhi	r3, #349	; 0x15d
    5f08:	608b      	strhi	r3, [r1, #8]
    5f0a:	9302      	strls	r3, [sp, #8]
    5f0c:	680b      	ldr	r3, [r1, #0]
    5f0e:	468b      	mov	fp, r1
    5f10:	2500      	movs	r5, #0
    5f12:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
    5f16:	f84b 3b1c 	str.w	r3, [fp], #28
    5f1a:	e9cd 5504 	strd	r5, r5, [sp, #16]
    5f1e:	4681      	mov	r9, r0
    5f20:	460c      	mov	r4, r1
    5f22:	465e      	mov	r6, fp
    5f24:	46aa      	mov	sl, r5
    5f26:	46a8      	mov	r8, r5
    5f28:	9501      	str	r5, [sp, #4]
    5f2a:	68a2      	ldr	r2, [r4, #8]
    5f2c:	b182      	cbz	r2, 5f50 <_scanf_float+0x6c>
    5f2e:	683b      	ldr	r3, [r7, #0]
    5f30:	781b      	ldrb	r3, [r3, #0]
    5f32:	2b49      	cmp	r3, #73	; 0x49
    5f34:	d075      	beq.n	6022 <_scanf_float+0x13e>
    5f36:	d84f      	bhi.n	5fd8 <_scanf_float+0xf4>
    5f38:	2b39      	cmp	r3, #57	; 0x39
    5f3a:	d841      	bhi.n	5fc0 <_scanf_float+0xdc>
    5f3c:	2b31      	cmp	r3, #49	; 0x31
    5f3e:	f080 8087 	bcs.w	6050 <_scanf_float+0x16c>
    5f42:	2b2d      	cmp	r3, #45	; 0x2d
    5f44:	f000 808f 	beq.w	6066 <_scanf_float+0x182>
    5f48:	d817      	bhi.n	5f7a <_scanf_float+0x96>
    5f4a:	2b2b      	cmp	r3, #43	; 0x2b
    5f4c:	f000 808b 	beq.w	6066 <_scanf_float+0x182>
    5f50:	f1b8 0f00 	cmp.w	r8, #0
    5f54:	d003      	beq.n	5f5e <_scanf_float+0x7a>
    5f56:	6823      	ldr	r3, [r4, #0]
    5f58:	f423 7380 	bic.w	r3, r3, #256	; 0x100
    5f5c:	6023      	str	r3, [r4, #0]
    5f5e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    5f62:	f1ba 0f01 	cmp.w	sl, #1
    5f66:	f200 80dd 	bhi.w	6124 <_scanf_float+0x240>
    5f6a:	455e      	cmp	r6, fp
    5f6c:	f200 80cf 	bhi.w	610e <_scanf_float+0x22a>
    5f70:	2501      	movs	r5, #1
    5f72:	4628      	mov	r0, r5
    5f74:	b007      	add	sp, #28
    5f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5f7a:	2b2e      	cmp	r3, #46	; 0x2e
    5f7c:	f000 8093 	beq.w	60a6 <_scanf_float+0x1c2>
    5f80:	2b30      	cmp	r3, #48	; 0x30
    5f82:	d1e5      	bne.n	5f50 <_scanf_float+0x6c>
    5f84:	6821      	ldr	r1, [r4, #0]
    5f86:	05c8      	lsls	r0, r1, #23
    5f88:	d562      	bpl.n	6050 <_scanf_float+0x16c>
    5f8a:	9b02      	ldr	r3, [sp, #8]
    5f8c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
    5f90:	6021      	str	r1, [r4, #0]
    5f92:	f108 0801 	add.w	r8, r8, #1
    5f96:	b11b      	cbz	r3, 5fa0 <_scanf_float+0xbc>
    5f98:	3b01      	subs	r3, #1
    5f9a:	3201      	adds	r2, #1
    5f9c:	9302      	str	r3, [sp, #8]
    5f9e:	60a2      	str	r2, [r4, #8]
    5fa0:	68a3      	ldr	r3, [r4, #8]
    5fa2:	3b01      	subs	r3, #1
    5fa4:	60a3      	str	r3, [r4, #8]
    5fa6:	6923      	ldr	r3, [r4, #16]
    5fa8:	3301      	adds	r3, #1
    5faa:	6123      	str	r3, [r4, #16]
    5fac:	687b      	ldr	r3, [r7, #4]
    5fae:	3b01      	subs	r3, #1
    5fb0:	2b00      	cmp	r3, #0
    5fb2:	607b      	str	r3, [r7, #4]
    5fb4:	f340 80a2 	ble.w	60fc <_scanf_float+0x218>
    5fb8:	683b      	ldr	r3, [r7, #0]
    5fba:	3301      	adds	r3, #1
    5fbc:	603b      	str	r3, [r7, #0]
    5fbe:	e7b4      	b.n	5f2a <_scanf_float+0x46>
    5fc0:	2b45      	cmp	r3, #69	; 0x45
    5fc2:	d07a      	beq.n	60ba <_scanf_float+0x1d6>
    5fc4:	2b46      	cmp	r3, #70	; 0x46
    5fc6:	d064      	beq.n	6092 <_scanf_float+0x1ae>
    5fc8:	2b41      	cmp	r3, #65	; 0x41
    5fca:	d1c1      	bne.n	5f50 <_scanf_float+0x6c>
    5fcc:	f1ba 0f01 	cmp.w	sl, #1
    5fd0:	d1be      	bne.n	5f50 <_scanf_float+0x6c>
    5fd2:	f04f 0a02 	mov.w	sl, #2
    5fd6:	e043      	b.n	6060 <_scanf_float+0x17c>
    5fd8:	2b65      	cmp	r3, #101	; 0x65
    5fda:	d06e      	beq.n	60ba <_scanf_float+0x1d6>
    5fdc:	d81a      	bhi.n	6014 <_scanf_float+0x130>
    5fde:	2b54      	cmp	r3, #84	; 0x54
    5fe0:	d05c      	beq.n	609c <_scanf_float+0x1b8>
    5fe2:	d813      	bhi.n	600c <_scanf_float+0x128>
    5fe4:	2b4e      	cmp	r3, #78	; 0x4e
    5fe6:	d1b3      	bne.n	5f50 <_scanf_float+0x6c>
    5fe8:	f1ba 0f00 	cmp.w	sl, #0
    5fec:	d142      	bne.n	6074 <_scanf_float+0x190>
    5fee:	f1b8 0f00 	cmp.w	r8, #0
    5ff2:	d142      	bne.n	607a <_scanf_float+0x196>
    5ff4:	6822      	ldr	r2, [r4, #0]
    5ff6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    5ffa:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    5ffe:	d13c      	bne.n	607a <_scanf_float+0x196>
    6000:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    6004:	6022      	str	r2, [r4, #0]
    6006:	f04f 0a01 	mov.w	sl, #1
    600a:	e029      	b.n	6060 <_scanf_float+0x17c>
    600c:	2b59      	cmp	r3, #89	; 0x59
    600e:	d01b      	beq.n	6048 <_scanf_float+0x164>
    6010:	2b61      	cmp	r3, #97	; 0x61
    6012:	e7da      	b.n	5fca <_scanf_float+0xe6>
    6014:	2b6e      	cmp	r3, #110	; 0x6e
    6016:	d0e7      	beq.n	5fe8 <_scanf_float+0x104>
    6018:	d812      	bhi.n	6040 <_scanf_float+0x15c>
    601a:	2b66      	cmp	r3, #102	; 0x66
    601c:	d039      	beq.n	6092 <_scanf_float+0x1ae>
    601e:	2b69      	cmp	r3, #105	; 0x69
    6020:	d196      	bne.n	5f50 <_scanf_float+0x6c>
    6022:	bb95      	cbnz	r5, 608a <_scanf_float+0x1a6>
    6024:	f1b8 0f00 	cmp.w	r8, #0
    6028:	d195      	bne.n	5f56 <_scanf_float+0x72>
    602a:	6822      	ldr	r2, [r4, #0]
    602c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    6030:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    6034:	d193      	bne.n	5f5e <_scanf_float+0x7a>
    6036:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    603a:	6022      	str	r2, [r4, #0]
    603c:	2501      	movs	r5, #1
    603e:	e00f      	b.n	6060 <_scanf_float+0x17c>
    6040:	2b74      	cmp	r3, #116	; 0x74
    6042:	d02b      	beq.n	609c <_scanf_float+0x1b8>
    6044:	2b79      	cmp	r3, #121	; 0x79
    6046:	d183      	bne.n	5f50 <_scanf_float+0x6c>
    6048:	2d07      	cmp	r5, #7
    604a:	d181      	bne.n	5f50 <_scanf_float+0x6c>
    604c:	2508      	movs	r5, #8
    604e:	e007      	b.n	6060 <_scanf_float+0x17c>
    6050:	eb1a 0f05 	cmn.w	sl, r5
    6054:	f47f af7c 	bne.w	5f50 <_scanf_float+0x6c>
    6058:	6822      	ldr	r2, [r4, #0]
    605a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
    605e:	6022      	str	r2, [r4, #0]
    6060:	f806 3b01 	strb.w	r3, [r6], #1
    6064:	e79c      	b.n	5fa0 <_scanf_float+0xbc>
    6066:	6822      	ldr	r2, [r4, #0]
    6068:	0610      	lsls	r0, r2, #24
    606a:	f57f af71 	bpl.w	5f50 <_scanf_float+0x6c>
    606e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    6072:	e7f4      	b.n	605e <_scanf_float+0x17a>
    6074:	f1ba 0f02 	cmp.w	sl, #2
    6078:	d03d      	beq.n	60f6 <_scanf_float+0x212>
    607a:	2d01      	cmp	r5, #1
    607c:	d002      	beq.n	6084 <_scanf_float+0x1a0>
    607e:	2d04      	cmp	r5, #4
    6080:	f47f af66 	bne.w	5f50 <_scanf_float+0x6c>
    6084:	3501      	adds	r5, #1
    6086:	b2ed      	uxtb	r5, r5
    6088:	e7ea      	b.n	6060 <_scanf_float+0x17c>
    608a:	2d03      	cmp	r5, #3
    608c:	d0fa      	beq.n	6084 <_scanf_float+0x1a0>
    608e:	2d05      	cmp	r5, #5
    6090:	e7f6      	b.n	6080 <_scanf_float+0x19c>
    6092:	2d02      	cmp	r5, #2
    6094:	f47f af5c 	bne.w	5f50 <_scanf_float+0x6c>
    6098:	2503      	movs	r5, #3
    609a:	e7e1      	b.n	6060 <_scanf_float+0x17c>
    609c:	2d06      	cmp	r5, #6
    609e:	f47f af57 	bne.w	5f50 <_scanf_float+0x6c>
    60a2:	2507      	movs	r5, #7
    60a4:	e7dc      	b.n	6060 <_scanf_float+0x17c>
    60a6:	6822      	ldr	r2, [r4, #0]
    60a8:	0591      	lsls	r1, r2, #22
    60aa:	f57f af51 	bpl.w	5f50 <_scanf_float+0x6c>
    60ae:	f422 7220 	bic.w	r2, r2, #640	; 0x280
    60b2:	6022      	str	r2, [r4, #0]
    60b4:	f8cd 8004 	str.w	r8, [sp, #4]
    60b8:	e7d2      	b.n	6060 <_scanf_float+0x17c>
    60ba:	6822      	ldr	r2, [r4, #0]
    60bc:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
    60c0:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    60c4:	d006      	beq.n	60d4 <_scanf_float+0x1f0>
    60c6:	0550      	lsls	r0, r2, #21
    60c8:	f57f af42 	bpl.w	5f50 <_scanf_float+0x6c>
    60cc:	f1b8 0f00 	cmp.w	r8, #0
    60d0:	f43f af45 	beq.w	5f5e <_scanf_float+0x7a>
    60d4:	0591      	lsls	r1, r2, #22
    60d6:	bf58      	it	pl
    60d8:	9901      	ldrpl	r1, [sp, #4]
    60da:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    60de:	bf58      	it	pl
    60e0:	eba8 0101 	subpl.w	r1, r8, r1
    60e4:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
    60e8:	bf58      	it	pl
    60ea:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
    60ee:	6022      	str	r2, [r4, #0]
    60f0:	f04f 0800 	mov.w	r8, #0
    60f4:	e7b4      	b.n	6060 <_scanf_float+0x17c>
    60f6:	f04f 0a03 	mov.w	sl, #3
    60fa:	e7b1      	b.n	6060 <_scanf_float+0x17c>
    60fc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    6100:	4639      	mov	r1, r7
    6102:	4648      	mov	r0, r9
    6104:	4798      	blx	r3
    6106:	2800      	cmp	r0, #0
    6108:	f43f af0f 	beq.w	5f2a <_scanf_float+0x46>
    610c:	e720      	b.n	5f50 <_scanf_float+0x6c>
    610e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6112:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    6116:	463a      	mov	r2, r7
    6118:	4648      	mov	r0, r9
    611a:	4798      	blx	r3
    611c:	6923      	ldr	r3, [r4, #16]
    611e:	3b01      	subs	r3, #1
    6120:	6123      	str	r3, [r4, #16]
    6122:	e722      	b.n	5f6a <_scanf_float+0x86>
    6124:	1e6b      	subs	r3, r5, #1
    6126:	2b06      	cmp	r3, #6
    6128:	d825      	bhi.n	6176 <_scanf_float+0x292>
    612a:	2d02      	cmp	r5, #2
    612c:	d836      	bhi.n	619c <_scanf_float+0x2b8>
    612e:	455e      	cmp	r6, fp
    6130:	f67f af1e 	bls.w	5f70 <_scanf_float+0x8c>
    6134:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6138:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    613c:	463a      	mov	r2, r7
    613e:	4648      	mov	r0, r9
    6140:	4798      	blx	r3
    6142:	6923      	ldr	r3, [r4, #16]
    6144:	3b01      	subs	r3, #1
    6146:	6123      	str	r3, [r4, #16]
    6148:	e7f1      	b.n	612e <_scanf_float+0x24a>
    614a:	9802      	ldr	r0, [sp, #8]
    614c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6150:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    6154:	9002      	str	r0, [sp, #8]
    6156:	463a      	mov	r2, r7
    6158:	4648      	mov	r0, r9
    615a:	4798      	blx	r3
    615c:	6923      	ldr	r3, [r4, #16]
    615e:	3b01      	subs	r3, #1
    6160:	6123      	str	r3, [r4, #16]
    6162:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    6166:	fa5f fa8a 	uxtb.w	sl, sl
    616a:	f1ba 0f02 	cmp.w	sl, #2
    616e:	d1ec      	bne.n	614a <_scanf_float+0x266>
    6170:	3d03      	subs	r5, #3
    6172:	b2ed      	uxtb	r5, r5
    6174:	1b76      	subs	r6, r6, r5
    6176:	6823      	ldr	r3, [r4, #0]
    6178:	05da      	lsls	r2, r3, #23
    617a:	d52f      	bpl.n	61dc <_scanf_float+0x2f8>
    617c:	055b      	lsls	r3, r3, #21
    617e:	d510      	bpl.n	61a2 <_scanf_float+0x2be>
    6180:	455e      	cmp	r6, fp
    6182:	f67f aef5 	bls.w	5f70 <_scanf_float+0x8c>
    6186:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    618a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    618e:	463a      	mov	r2, r7
    6190:	4648      	mov	r0, r9
    6192:	4798      	blx	r3
    6194:	6923      	ldr	r3, [r4, #16]
    6196:	3b01      	subs	r3, #1
    6198:	6123      	str	r3, [r4, #16]
    619a:	e7f1      	b.n	6180 <_scanf_float+0x29c>
    619c:	46aa      	mov	sl, r5
    619e:	9602      	str	r6, [sp, #8]
    61a0:	e7df      	b.n	6162 <_scanf_float+0x27e>
    61a2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
    61a6:	6923      	ldr	r3, [r4, #16]
    61a8:	2965      	cmp	r1, #101	; 0x65
    61aa:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    61ae:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
    61b2:	6123      	str	r3, [r4, #16]
    61b4:	d00c      	beq.n	61d0 <_scanf_float+0x2ec>
    61b6:	2945      	cmp	r1, #69	; 0x45
    61b8:	d00a      	beq.n	61d0 <_scanf_float+0x2ec>
    61ba:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    61be:	463a      	mov	r2, r7
    61c0:	4648      	mov	r0, r9
    61c2:	4798      	blx	r3
    61c4:	6923      	ldr	r3, [r4, #16]
    61c6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
    61ca:	3b01      	subs	r3, #1
    61cc:	1eb5      	subs	r5, r6, #2
    61ce:	6123      	str	r3, [r4, #16]
    61d0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    61d4:	463a      	mov	r2, r7
    61d6:	4648      	mov	r0, r9
    61d8:	4798      	blx	r3
    61da:	462e      	mov	r6, r5
    61dc:	6825      	ldr	r5, [r4, #0]
    61de:	f015 0510 	ands.w	r5, r5, #16
    61e2:	d158      	bne.n	6296 <_scanf_float+0x3b2>
    61e4:	7035      	strb	r5, [r6, #0]
    61e6:	6823      	ldr	r3, [r4, #0]
    61e8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
    61ec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    61f0:	d11c      	bne.n	622c <_scanf_float+0x348>
    61f2:	9b01      	ldr	r3, [sp, #4]
    61f4:	4543      	cmp	r3, r8
    61f6:	eba3 0208 	sub.w	r2, r3, r8
    61fa:	d124      	bne.n	6246 <_scanf_float+0x362>
    61fc:	2200      	movs	r2, #0
    61fe:	4659      	mov	r1, fp
    6200:	4648      	mov	r0, r9
    6202:	f001 f861 	bl	72c8 <_strtod_r>
    6206:	9b03      	ldr	r3, [sp, #12]
    6208:	6821      	ldr	r1, [r4, #0]
    620a:	681b      	ldr	r3, [r3, #0]
    620c:	f011 0f02 	tst.w	r1, #2
    6210:	ec57 6b10 	vmov	r6, r7, d0
    6214:	f103 0204 	add.w	r2, r3, #4
    6218:	d020      	beq.n	625c <_scanf_float+0x378>
    621a:	9903      	ldr	r1, [sp, #12]
    621c:	600a      	str	r2, [r1, #0]
    621e:	681b      	ldr	r3, [r3, #0]
    6220:	e9c3 6700 	strd	r6, r7, [r3]
    6224:	68e3      	ldr	r3, [r4, #12]
    6226:	3301      	adds	r3, #1
    6228:	60e3      	str	r3, [r4, #12]
    622a:	e6a2      	b.n	5f72 <_scanf_float+0x8e>
    622c:	9b04      	ldr	r3, [sp, #16]
    622e:	2b00      	cmp	r3, #0
    6230:	d0e4      	beq.n	61fc <_scanf_float+0x318>
    6232:	9905      	ldr	r1, [sp, #20]
    6234:	230a      	movs	r3, #10
    6236:	462a      	mov	r2, r5
    6238:	3101      	adds	r1, #1
    623a:	4648      	mov	r0, r9
    623c:	f001 f8c2 	bl	73c4 <_strtol_r>
    6240:	9b04      	ldr	r3, [sp, #16]
    6242:	9e05      	ldr	r6, [sp, #20]
    6244:	1ac2      	subs	r2, r0, r3
    6246:	f204 136f 	addw	r3, r4, #367	; 0x16f
    624a:	429e      	cmp	r6, r3
    624c:	bf28      	it	cs
    624e:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
    6252:	4912      	ldr	r1, [pc, #72]	; (629c <_scanf_float+0x3b8>)
    6254:	4630      	mov	r0, r6
    6256:	f000 f99f 	bl	6598 <siprintf>
    625a:	e7cf      	b.n	61fc <_scanf_float+0x318>
    625c:	f011 0f04 	tst.w	r1, #4
    6260:	9903      	ldr	r1, [sp, #12]
    6262:	600a      	str	r2, [r1, #0]
    6264:	d1db      	bne.n	621e <_scanf_float+0x33a>
    6266:	f8d3 8000 	ldr.w	r8, [r3]
    626a:	ee10 2a10 	vmov	r2, s0
    626e:	463b      	mov	r3, r7
    6270:	ee10 0a10 	vmov	r0, s0
    6274:	4639      	mov	r1, r7
    6276:	f004 f9f9 	bl	a66c <__aeabi_dcmpun>
    627a:	b128      	cbz	r0, 6288 <_scanf_float+0x3a4>
    627c:	4808      	ldr	r0, [pc, #32]	; (62a0 <_scanf_float+0x3bc>)
    627e:	f000 f985 	bl	658c <nanf>
    6282:	ed88 0a00 	vstr	s0, [r8]
    6286:	e7cd      	b.n	6224 <_scanf_float+0x340>
    6288:	4630      	mov	r0, r6
    628a:	4639      	mov	r1, r7
    628c:	f004 fa2c 	bl	a6e8 <__aeabi_d2f>
    6290:	f8c8 0000 	str.w	r0, [r8]
    6294:	e7c6      	b.n	6224 <_scanf_float+0x340>
    6296:	2500      	movs	r5, #0
    6298:	e66b      	b.n	5f72 <_scanf_float+0x8e>
    629a:	bf00      	nop
    629c:	0000bb4f 	.word	0x0000bb4f
    62a0:	0000ac43 	.word	0x0000ac43

000062a4 <iprintf>:
iprintf():
    62a4:	b40f      	push	{r0, r1, r2, r3}
    62a6:	4b0a      	ldr	r3, [pc, #40]	; (62d0 <iprintf+0x2c>)
    62a8:	b513      	push	{r0, r1, r4, lr}
    62aa:	681c      	ldr	r4, [r3, #0]
    62ac:	b124      	cbz	r4, 62b8 <iprintf+0x14>
    62ae:	69a3      	ldr	r3, [r4, #24]
    62b0:	b913      	cbnz	r3, 62b8 <iprintf+0x14>
    62b2:	4620      	mov	r0, r4
    62b4:	f002 f92a 	bl	850c <__sinit>
    62b8:	ab05      	add	r3, sp, #20
    62ba:	9a04      	ldr	r2, [sp, #16]
    62bc:	68a1      	ldr	r1, [r4, #8]
    62be:	9301      	str	r3, [sp, #4]
    62c0:	4620      	mov	r0, r4
    62c2:	f7ff f8a3 	bl	540c <_vfiprintf_r>
    62c6:	b002      	add	sp, #8
    62c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    62cc:	b004      	add	sp, #16
    62ce:	4770      	bx	lr
    62d0:	10000174 	.word	0x10000174

000062d4 <putchar>:
putchar():
    62d4:	b538      	push	{r3, r4, r5, lr}
    62d6:	4b08      	ldr	r3, [pc, #32]	; (62f8 <putchar+0x24>)
    62d8:	681c      	ldr	r4, [r3, #0]
    62da:	4605      	mov	r5, r0
    62dc:	b124      	cbz	r4, 62e8 <putchar+0x14>
    62de:	69a3      	ldr	r3, [r4, #24]
    62e0:	b913      	cbnz	r3, 62e8 <putchar+0x14>
    62e2:	4620      	mov	r0, r4
    62e4:	f002 f912 	bl	850c <__sinit>
    62e8:	68a2      	ldr	r2, [r4, #8]
    62ea:	4629      	mov	r1, r5
    62ec:	4620      	mov	r0, r4
    62ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    62f2:	f003 be77 	b.w	9fe4 <_putc_r>
    62f6:	bf00      	nop
    62f8:	10000174 	.word	0x10000174

000062fc <_puts_r>:
_puts_r():
    62fc:	b570      	push	{r4, r5, r6, lr}
    62fe:	460e      	mov	r6, r1
    6300:	4605      	mov	r5, r0
    6302:	b118      	cbz	r0, 630c <_puts_r+0x10>
    6304:	6983      	ldr	r3, [r0, #24]
    6306:	b90b      	cbnz	r3, 630c <_puts_r+0x10>
    6308:	f002 f900 	bl	850c <__sinit>
    630c:	69ab      	ldr	r3, [r5, #24]
    630e:	68ac      	ldr	r4, [r5, #8]
    6310:	b913      	cbnz	r3, 6318 <_puts_r+0x1c>
    6312:	4628      	mov	r0, r5
    6314:	f002 f8fa 	bl	850c <__sinit>
    6318:	4b2c      	ldr	r3, [pc, #176]	; (63cc <_puts_r+0xd0>)
    631a:	429c      	cmp	r4, r3
    631c:	d120      	bne.n	6360 <_puts_r+0x64>
    631e:	686c      	ldr	r4, [r5, #4]
    6320:	6e63      	ldr	r3, [r4, #100]	; 0x64
    6322:	07db      	lsls	r3, r3, #31
    6324:	d405      	bmi.n	6332 <_puts_r+0x36>
    6326:	89a3      	ldrh	r3, [r4, #12]
    6328:	0598      	lsls	r0, r3, #22
    632a:	d402      	bmi.n	6332 <_puts_r+0x36>
    632c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    632e:	f7fe ff58 	bl	51e2 <__retarget_lock_acquire_recursive>
    6332:	89a3      	ldrh	r3, [r4, #12]
    6334:	0719      	lsls	r1, r3, #28
    6336:	d51d      	bpl.n	6374 <_puts_r+0x78>
    6338:	6923      	ldr	r3, [r4, #16]
    633a:	b1db      	cbz	r3, 6374 <_puts_r+0x78>
    633c:	3e01      	subs	r6, #1
    633e:	68a3      	ldr	r3, [r4, #8]
    6340:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    6344:	3b01      	subs	r3, #1
    6346:	60a3      	str	r3, [r4, #8]
    6348:	bb39      	cbnz	r1, 639a <_puts_r+0x9e>
    634a:	2b00      	cmp	r3, #0
    634c:	da38      	bge.n	63c0 <_puts_r+0xc4>
    634e:	4622      	mov	r2, r4
    6350:	210a      	movs	r1, #10
    6352:	4628      	mov	r0, r5
    6354:	f001 f8aa 	bl	74ac <__swbuf_r>
    6358:	3001      	adds	r0, #1
    635a:	d011      	beq.n	6380 <_puts_r+0x84>
    635c:	250a      	movs	r5, #10
    635e:	e011      	b.n	6384 <_puts_r+0x88>
    6360:	4b1b      	ldr	r3, [pc, #108]	; (63d0 <_puts_r+0xd4>)
    6362:	429c      	cmp	r4, r3
    6364:	d101      	bne.n	636a <_puts_r+0x6e>
    6366:	68ac      	ldr	r4, [r5, #8]
    6368:	e7da      	b.n	6320 <_puts_r+0x24>
    636a:	4b1a      	ldr	r3, [pc, #104]	; (63d4 <_puts_r+0xd8>)
    636c:	429c      	cmp	r4, r3
    636e:	bf08      	it	eq
    6370:	68ec      	ldreq	r4, [r5, #12]
    6372:	e7d5      	b.n	6320 <_puts_r+0x24>
    6374:	4621      	mov	r1, r4
    6376:	4628      	mov	r0, r5
    6378:	f001 f8ea 	bl	7550 <__swsetup_r>
    637c:	2800      	cmp	r0, #0
    637e:	d0dd      	beq.n	633c <_puts_r+0x40>
    6380:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6384:	6e63      	ldr	r3, [r4, #100]	; 0x64
    6386:	07da      	lsls	r2, r3, #31
    6388:	d405      	bmi.n	6396 <_puts_r+0x9a>
    638a:	89a3      	ldrh	r3, [r4, #12]
    638c:	059b      	lsls	r3, r3, #22
    638e:	d402      	bmi.n	6396 <_puts_r+0x9a>
    6390:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6392:	f7fe ff27 	bl	51e4 <__retarget_lock_release_recursive>
    6396:	4628      	mov	r0, r5
    6398:	bd70      	pop	{r4, r5, r6, pc}
    639a:	2b00      	cmp	r3, #0
    639c:	da04      	bge.n	63a8 <_puts_r+0xac>
    639e:	69a2      	ldr	r2, [r4, #24]
    63a0:	429a      	cmp	r2, r3
    63a2:	dc06      	bgt.n	63b2 <_puts_r+0xb6>
    63a4:	290a      	cmp	r1, #10
    63a6:	d004      	beq.n	63b2 <_puts_r+0xb6>
    63a8:	6823      	ldr	r3, [r4, #0]
    63aa:	1c5a      	adds	r2, r3, #1
    63ac:	6022      	str	r2, [r4, #0]
    63ae:	7019      	strb	r1, [r3, #0]
    63b0:	e7c5      	b.n	633e <_puts_r+0x42>
    63b2:	4622      	mov	r2, r4
    63b4:	4628      	mov	r0, r5
    63b6:	f001 f879 	bl	74ac <__swbuf_r>
    63ba:	3001      	adds	r0, #1
    63bc:	d1bf      	bne.n	633e <_puts_r+0x42>
    63be:	e7df      	b.n	6380 <_puts_r+0x84>
    63c0:	6823      	ldr	r3, [r4, #0]
    63c2:	250a      	movs	r5, #10
    63c4:	1c5a      	adds	r2, r3, #1
    63c6:	6022      	str	r2, [r4, #0]
    63c8:	701d      	strb	r5, [r3, #0]
    63ca:	e7db      	b.n	6384 <_puts_r+0x88>
    63cc:	0000bbd8 	.word	0x0000bbd8
    63d0:	0000bbf8 	.word	0x0000bbf8
    63d4:	0000bbb8 	.word	0x0000bbb8

000063d8 <puts>:
puts():
    63d8:	4b02      	ldr	r3, [pc, #8]	; (63e4 <puts+0xc>)
    63da:	4601      	mov	r1, r0
    63dc:	6818      	ldr	r0, [r3, #0]
    63de:	f7ff bf8d 	b.w	62fc <_puts_r>
    63e2:	bf00      	nop
    63e4:	10000174 	.word	0x10000174

000063e8 <_sbrk_r>:
_sbrk_r():
    63e8:	b538      	push	{r3, r4, r5, lr}
    63ea:	4c06      	ldr	r4, [pc, #24]	; (6404 <_sbrk_r+0x1c>)
    63ec:	2300      	movs	r3, #0
    63ee:	4605      	mov	r5, r0
    63f0:	4608      	mov	r0, r1
    63f2:	6023      	str	r3, [r4, #0]
    63f4:	f7f9 ffa6 	bl	344 <_sbrk>
    63f8:	1c43      	adds	r3, r0, #1
    63fa:	d102      	bne.n	6402 <_sbrk_r+0x1a>
    63fc:	6823      	ldr	r3, [r4, #0]
    63fe:	b103      	cbz	r3, 6402 <_sbrk_r+0x1a>
    6400:	602b      	str	r3, [r5, #0]
    6402:	bd38      	pop	{r3, r4, r5, pc}
    6404:	10001404 	.word	0x10001404

00006408 <setvbuf>:
setvbuf():
    6408:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    640c:	461e      	mov	r6, r3
    640e:	4b5b      	ldr	r3, [pc, #364]	; (657c <setvbuf+0x174>)
    6410:	681d      	ldr	r5, [r3, #0]
    6412:	4604      	mov	r4, r0
    6414:	460f      	mov	r7, r1
    6416:	4690      	mov	r8, r2
    6418:	b125      	cbz	r5, 6424 <setvbuf+0x1c>
    641a:	69ab      	ldr	r3, [r5, #24]
    641c:	b913      	cbnz	r3, 6424 <setvbuf+0x1c>
    641e:	4628      	mov	r0, r5
    6420:	f002 f874 	bl	850c <__sinit>
    6424:	4b56      	ldr	r3, [pc, #344]	; (6580 <setvbuf+0x178>)
    6426:	429c      	cmp	r4, r3
    6428:	d166      	bne.n	64f8 <setvbuf+0xf0>
    642a:	686c      	ldr	r4, [r5, #4]
    642c:	f1b8 0f02 	cmp.w	r8, #2
    6430:	d006      	beq.n	6440 <setvbuf+0x38>
    6432:	f1b8 0f01 	cmp.w	r8, #1
    6436:	f200 809d 	bhi.w	6574 <setvbuf+0x16c>
    643a:	2e00      	cmp	r6, #0
    643c:	f2c0 809a 	blt.w	6574 <setvbuf+0x16c>
    6440:	6e63      	ldr	r3, [r4, #100]	; 0x64
    6442:	07da      	lsls	r2, r3, #31
    6444:	d405      	bmi.n	6452 <setvbuf+0x4a>
    6446:	89a3      	ldrh	r3, [r4, #12]
    6448:	059b      	lsls	r3, r3, #22
    644a:	d402      	bmi.n	6452 <setvbuf+0x4a>
    644c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    644e:	f7fe fec8 	bl	51e2 <__retarget_lock_acquire_recursive>
    6452:	4621      	mov	r1, r4
    6454:	4628      	mov	r0, r5
    6456:	f001 ffb3 	bl	83c0 <_fflush_r>
    645a:	6b61      	ldr	r1, [r4, #52]	; 0x34
    645c:	b141      	cbz	r1, 6470 <setvbuf+0x68>
    645e:	f104 0344 	add.w	r3, r4, #68	; 0x44
    6462:	4299      	cmp	r1, r3
    6464:	d002      	beq.n	646c <setvbuf+0x64>
    6466:	4628      	mov	r0, r5
    6468:	f7fe fefe 	bl	5268 <_free_r>
    646c:	2300      	movs	r3, #0
    646e:	6363      	str	r3, [r4, #52]	; 0x34
    6470:	2300      	movs	r3, #0
    6472:	61a3      	str	r3, [r4, #24]
    6474:	6063      	str	r3, [r4, #4]
    6476:	89a3      	ldrh	r3, [r4, #12]
    6478:	0618      	lsls	r0, r3, #24
    647a:	d503      	bpl.n	6484 <setvbuf+0x7c>
    647c:	6921      	ldr	r1, [r4, #16]
    647e:	4628      	mov	r0, r5
    6480:	f7fe fef2 	bl	5268 <_free_r>
    6484:	89a3      	ldrh	r3, [r4, #12]
    6486:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    648a:	f023 0303 	bic.w	r3, r3, #3
    648e:	f1b8 0f02 	cmp.w	r8, #2
    6492:	81a3      	strh	r3, [r4, #12]
    6494:	d06a      	beq.n	656c <setvbuf+0x164>
    6496:	ab01      	add	r3, sp, #4
    6498:	466a      	mov	r2, sp
    649a:	4621      	mov	r1, r4
    649c:	4628      	mov	r0, r5
    649e:	f002 fc5b 	bl	8d58 <__swhatbuf_r>
    64a2:	89a3      	ldrh	r3, [r4, #12]
    64a4:	4318      	orrs	r0, r3
    64a6:	81a0      	strh	r0, [r4, #12]
    64a8:	2e00      	cmp	r6, #0
    64aa:	d12f      	bne.n	650c <setvbuf+0x104>
    64ac:	9e00      	ldr	r6, [sp, #0]
    64ae:	4630      	mov	r0, r6
    64b0:	f7fe fe9a 	bl	51e8 <malloc>
    64b4:	4607      	mov	r7, r0
    64b6:	2800      	cmp	r0, #0
    64b8:	d153      	bne.n	6562 <setvbuf+0x15a>
    64ba:	f8dd 9000 	ldr.w	r9, [sp]
    64be:	45b1      	cmp	r9, r6
    64c0:	d148      	bne.n	6554 <setvbuf+0x14c>
    64c2:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    64c6:	2200      	movs	r2, #0
    64c8:	60a2      	str	r2, [r4, #8]
    64ca:	f104 0247 	add.w	r2, r4, #71	; 0x47
    64ce:	6022      	str	r2, [r4, #0]
    64d0:	6122      	str	r2, [r4, #16]
    64d2:	2201      	movs	r2, #1
    64d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    64d8:	6162      	str	r2, [r4, #20]
    64da:	6e62      	ldr	r2, [r4, #100]	; 0x64
    64dc:	f043 0302 	orr.w	r3, r3, #2
    64e0:	07d1      	lsls	r1, r2, #31
    64e2:	81a3      	strh	r3, [r4, #12]
    64e4:	d404      	bmi.n	64f0 <setvbuf+0xe8>
    64e6:	059b      	lsls	r3, r3, #22
    64e8:	d402      	bmi.n	64f0 <setvbuf+0xe8>
    64ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
    64ec:	f7fe fe7a 	bl	51e4 <__retarget_lock_release_recursive>
    64f0:	4628      	mov	r0, r5
    64f2:	b003      	add	sp, #12
    64f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    64f8:	4b22      	ldr	r3, [pc, #136]	; (6584 <setvbuf+0x17c>)
    64fa:	429c      	cmp	r4, r3
    64fc:	d101      	bne.n	6502 <setvbuf+0xfa>
    64fe:	68ac      	ldr	r4, [r5, #8]
    6500:	e794      	b.n	642c <setvbuf+0x24>
    6502:	4b21      	ldr	r3, [pc, #132]	; (6588 <setvbuf+0x180>)
    6504:	429c      	cmp	r4, r3
    6506:	bf08      	it	eq
    6508:	68ec      	ldreq	r4, [r5, #12]
    650a:	e78f      	b.n	642c <setvbuf+0x24>
    650c:	2f00      	cmp	r7, #0
    650e:	d0ce      	beq.n	64ae <setvbuf+0xa6>
    6510:	69ab      	ldr	r3, [r5, #24]
    6512:	b913      	cbnz	r3, 651a <setvbuf+0x112>
    6514:	4628      	mov	r0, r5
    6516:	f001 fff9 	bl	850c <__sinit>
    651a:	f1b8 0f01 	cmp.w	r8, #1
    651e:	bf08      	it	eq
    6520:	89a3      	ldrheq	r3, [r4, #12]
    6522:	6027      	str	r7, [r4, #0]
    6524:	bf04      	itt	eq
    6526:	f043 0301 	orreq.w	r3, r3, #1
    652a:	81a3      	strheq	r3, [r4, #12]
    652c:	89a3      	ldrh	r3, [r4, #12]
    652e:	f013 0208 	ands.w	r2, r3, #8
    6532:	e9c4 7604 	strd	r7, r6, [r4, #16]
    6536:	d01b      	beq.n	6570 <setvbuf+0x168>
    6538:	07da      	lsls	r2, r3, #31
    653a:	bf41      	itttt	mi
    653c:	2200      	movmi	r2, #0
    653e:	4276      	negmi	r6, r6
    6540:	60a2      	strmi	r2, [r4, #8]
    6542:	61a6      	strmi	r6, [r4, #24]
    6544:	bf58      	it	pl
    6546:	60a6      	strpl	r6, [r4, #8]
    6548:	6e65      	ldr	r5, [r4, #100]	; 0x64
    654a:	f015 0501 	ands.w	r5, r5, #1
    654e:	d0ca      	beq.n	64e6 <setvbuf+0xde>
    6550:	2500      	movs	r5, #0
    6552:	e7cd      	b.n	64f0 <setvbuf+0xe8>
    6554:	4648      	mov	r0, r9
    6556:	f7fe fe47 	bl	51e8 <malloc>
    655a:	4607      	mov	r7, r0
    655c:	2800      	cmp	r0, #0
    655e:	d0b0      	beq.n	64c2 <setvbuf+0xba>
    6560:	464e      	mov	r6, r9
    6562:	89a3      	ldrh	r3, [r4, #12]
    6564:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    6568:	81a3      	strh	r3, [r4, #12]
    656a:	e7d1      	b.n	6510 <setvbuf+0x108>
    656c:	2500      	movs	r5, #0
    656e:	e7aa      	b.n	64c6 <setvbuf+0xbe>
    6570:	60a2      	str	r2, [r4, #8]
    6572:	e7e9      	b.n	6548 <setvbuf+0x140>
    6574:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6578:	e7ba      	b.n	64f0 <setvbuf+0xe8>
    657a:	bf00      	nop
    657c:	10000174 	.word	0x10000174
    6580:	0000bbd8 	.word	0x0000bbd8
    6584:	0000bbf8 	.word	0x0000bbf8
    6588:	0000bbb8 	.word	0x0000bbb8

0000658c <nanf>:
nanf():
    658c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 6594 <nanf+0x8>
    6590:	4770      	bx	lr
    6592:	bf00      	nop
    6594:	7fc00000 	.word	0x7fc00000

00006598 <siprintf>:
siprintf():
    6598:	b40e      	push	{r1, r2, r3}
    659a:	b500      	push	{lr}
    659c:	b09c      	sub	sp, #112	; 0x70
    659e:	ab1d      	add	r3, sp, #116	; 0x74
    65a0:	9002      	str	r0, [sp, #8]
    65a2:	9006      	str	r0, [sp, #24]
    65a4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    65a8:	4809      	ldr	r0, [pc, #36]	; (65d0 <siprintf+0x38>)
    65aa:	9107      	str	r1, [sp, #28]
    65ac:	9104      	str	r1, [sp, #16]
    65ae:	4909      	ldr	r1, [pc, #36]	; (65d4 <siprintf+0x3c>)
    65b0:	f853 2b04 	ldr.w	r2, [r3], #4
    65b4:	9105      	str	r1, [sp, #20]
    65b6:	6800      	ldr	r0, [r0, #0]
    65b8:	9301      	str	r3, [sp, #4]
    65ba:	a902      	add	r1, sp, #8
    65bc:	f003 f92c 	bl	9818 <_svfiprintf_r>
    65c0:	9b02      	ldr	r3, [sp, #8]
    65c2:	2200      	movs	r2, #0
    65c4:	701a      	strb	r2, [r3, #0]
    65c6:	b01c      	add	sp, #112	; 0x70
    65c8:	f85d eb04 	ldr.w	lr, [sp], #4
    65cc:	b003      	add	sp, #12
    65ce:	4770      	bx	lr
    65d0:	10000174 	.word	0x10000174
    65d4:	ffff0208 	.word	0xffff0208

000065d8 <strcasecmp>:
strcasecmp():
    65d8:	b570      	push	{r4, r5, r6, lr}
    65da:	4d0c      	ldr	r5, [pc, #48]	; (660c <strcasecmp+0x34>)
    65dc:	462e      	mov	r6, r5
    65de:	f810 3b01 	ldrb.w	r3, [r0], #1
    65e2:	5d5a      	ldrb	r2, [r3, r5]
    65e4:	f002 0203 	and.w	r2, r2, #3
    65e8:	2a01      	cmp	r2, #1
    65ea:	f811 2b01 	ldrb.w	r2, [r1], #1
    65ee:	5cb4      	ldrb	r4, [r6, r2]
    65f0:	f004 0403 	and.w	r4, r4, #3
    65f4:	bf08      	it	eq
    65f6:	3320      	addeq	r3, #32
    65f8:	2c01      	cmp	r4, #1
    65fa:	bf08      	it	eq
    65fc:	3220      	addeq	r2, #32
    65fe:	1a9b      	subs	r3, r3, r2
    6600:	d101      	bne.n	6606 <strcasecmp+0x2e>
    6602:	2a00      	cmp	r2, #0
    6604:	d1eb      	bne.n	65de <strcasecmp+0x6>
    6606:	4618      	mov	r0, r3
    6608:	bd70      	pop	{r4, r5, r6, pc}
    660a:	bf00      	nop
    660c:	0000ba05 	.word	0x0000ba05

00006610 <strchr>:
strchr():
    6610:	b2c9      	uxtb	r1, r1
    6612:	4603      	mov	r3, r0
    6614:	f810 2b01 	ldrb.w	r2, [r0], #1
    6618:	b11a      	cbz	r2, 6622 <strchr+0x12>
    661a:	428a      	cmp	r2, r1
    661c:	d1f9      	bne.n	6612 <strchr+0x2>
    661e:	4618      	mov	r0, r3
    6620:	4770      	bx	lr
    6622:	2900      	cmp	r1, #0
    6624:	bf18      	it	ne
    6626:	2300      	movne	r3, #0
    6628:	e7f9      	b.n	661e <strchr+0xe>

0000662a <strlen>:
strlen():
    662a:	4603      	mov	r3, r0
    662c:	f813 2b01 	ldrb.w	r2, [r3], #1
    6630:	2a00      	cmp	r2, #0
    6632:	d1fb      	bne.n	662c <strlen+0x2>
    6634:	1a18      	subs	r0, r3, r0
    6636:	3801      	subs	r0, #1
    6638:	4770      	bx	lr
    663a:	Address 0x000000000000663a is out of bounds.


0000663c <strncasecmp>:
strncasecmp():
    663c:	b570      	push	{r4, r5, r6, lr}
    663e:	4e0f      	ldr	r6, [pc, #60]	; (667c <strncasecmp+0x40>)
    6640:	440a      	add	r2, r1
    6642:	428a      	cmp	r2, r1
    6644:	d101      	bne.n	664a <strncasecmp+0xe>
    6646:	2300      	movs	r3, #0
    6648:	e013      	b.n	6672 <strncasecmp+0x36>
    664a:	f810 4b01 	ldrb.w	r4, [r0], #1
    664e:	5da3      	ldrb	r3, [r4, r6]
    6650:	f003 0303 	and.w	r3, r3, #3
    6654:	2b01      	cmp	r3, #1
    6656:	f811 3b01 	ldrb.w	r3, [r1], #1
    665a:	5cf5      	ldrb	r5, [r6, r3]
    665c:	f005 0503 	and.w	r5, r5, #3
    6660:	bf08      	it	eq
    6662:	3420      	addeq	r4, #32
    6664:	2d01      	cmp	r5, #1
    6666:	bf08      	it	eq
    6668:	3320      	addeq	r3, #32
    666a:	1ae4      	subs	r4, r4, r3
    666c:	d103      	bne.n	6676 <strncasecmp+0x3a>
    666e:	2b00      	cmp	r3, #0
    6670:	d1e7      	bne.n	6642 <strncasecmp+0x6>
    6672:	4618      	mov	r0, r3
    6674:	bd70      	pop	{r4, r5, r6, pc}
    6676:	4623      	mov	r3, r4
    6678:	e7fb      	b.n	6672 <strncasecmp+0x36>
    667a:	bf00      	nop
    667c:	0000ba05 	.word	0x0000ba05

00006680 <strncmp>:
strncmp():
    6680:	b510      	push	{r4, lr}
    6682:	b16a      	cbz	r2, 66a0 <strncmp+0x20>
    6684:	3901      	subs	r1, #1
    6686:	1884      	adds	r4, r0, r2
    6688:	f810 3b01 	ldrb.w	r3, [r0], #1
    668c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    6690:	4293      	cmp	r3, r2
    6692:	d103      	bne.n	669c <strncmp+0x1c>
    6694:	42a0      	cmp	r0, r4
    6696:	d001      	beq.n	669c <strncmp+0x1c>
    6698:	2b00      	cmp	r3, #0
    669a:	d1f5      	bne.n	6688 <strncmp+0x8>
    669c:	1a98      	subs	r0, r3, r2
    669e:	bd10      	pop	{r4, pc}
    66a0:	4610      	mov	r0, r2
    66a2:	e7fc      	b.n	669e <strncmp+0x1e>

000066a4 <strncpy>:
strncpy():
    66a4:	b510      	push	{r4, lr}
    66a6:	3901      	subs	r1, #1
    66a8:	4603      	mov	r3, r0
    66aa:	b132      	cbz	r2, 66ba <strncpy+0x16>
    66ac:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    66b0:	f803 4b01 	strb.w	r4, [r3], #1
    66b4:	3a01      	subs	r2, #1
    66b6:	2c00      	cmp	r4, #0
    66b8:	d1f7      	bne.n	66aa <strncpy+0x6>
    66ba:	441a      	add	r2, r3
    66bc:	2100      	movs	r1, #0
    66be:	4293      	cmp	r3, r2
    66c0:	d100      	bne.n	66c4 <strncpy+0x20>
    66c2:	bd10      	pop	{r4, pc}
    66c4:	f803 1b01 	strb.w	r1, [r3], #1
    66c8:	e7f9      	b.n	66be <strncpy+0x1a>

000066ca <strstr>:
strstr():
    66ca:	b5f0      	push	{r4, r5, r6, r7, lr}
    66cc:	780c      	ldrb	r4, [r1, #0]
    66ce:	b164      	cbz	r4, 66ea <strstr+0x20>
    66d0:	4603      	mov	r3, r0
    66d2:	781a      	ldrb	r2, [r3, #0]
    66d4:	4618      	mov	r0, r3
    66d6:	1c5e      	adds	r6, r3, #1
    66d8:	b90a      	cbnz	r2, 66de <strstr+0x14>
    66da:	4610      	mov	r0, r2
    66dc:	e005      	b.n	66ea <strstr+0x20>
    66de:	4294      	cmp	r4, r2
    66e0:	d108      	bne.n	66f4 <strstr+0x2a>
    66e2:	460d      	mov	r5, r1
    66e4:	f815 2f01 	ldrb.w	r2, [r5, #1]!
    66e8:	b902      	cbnz	r2, 66ec <strstr+0x22>
    66ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    66ec:	f813 7f01 	ldrb.w	r7, [r3, #1]!
    66f0:	4297      	cmp	r7, r2
    66f2:	d0f7      	beq.n	66e4 <strstr+0x1a>
    66f4:	4633      	mov	r3, r6
    66f6:	e7ec      	b.n	66d2 <strstr+0x8>

000066f8 <sulp>:
sulp():
    66f8:	b570      	push	{r4, r5, r6, lr}
    66fa:	4604      	mov	r4, r0
    66fc:	460d      	mov	r5, r1
    66fe:	ec45 4b10 	vmov	d0, r4, r5
    6702:	4616      	mov	r6, r2
    6704:	f002 fec6 	bl	9494 <__ulp>
    6708:	ec51 0b10 	vmov	r0, r1, d0
    670c:	b17e      	cbz	r6, 672e <sulp+0x36>
    670e:	f3c5 530a 	ubfx	r3, r5, #20, #11
    6712:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    6716:	2b00      	cmp	r3, #0
    6718:	dd09      	ble.n	672e <sulp+0x36>
    671a:	051b      	lsls	r3, r3, #20
    671c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
    6720:	2400      	movs	r4, #0
    6722:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
    6726:	4622      	mov	r2, r4
    6728:	462b      	mov	r3, r5
    672a:	f7fe f90f 	bl	494c <__aeabi_dmul>
    672e:	bd70      	pop	{r4, r5, r6, pc}

00006730 <_strtod_l>:
_strtod_l():
    6730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6734:	b0a1      	sub	sp, #132	; 0x84
    6736:	461f      	mov	r7, r3
    6738:	2300      	movs	r3, #0
    673a:	931c      	str	r3, [sp, #112]	; 0x70
    673c:	4b9b      	ldr	r3, [pc, #620]	; (69ac <_strtod_l+0x27c>)
    673e:	9004      	str	r0, [sp, #16]
    6740:	681b      	ldr	r3, [r3, #0]
    6742:	9217      	str	r2, [sp, #92]	; 0x5c
    6744:	4618      	mov	r0, r3
    6746:	460e      	mov	r6, r1
    6748:	9305      	str	r3, [sp, #20]
    674a:	f7ff ff6e 	bl	662a <strlen>
    674e:	f04f 0a00 	mov.w	sl, #0
    6752:	4604      	mov	r4, r0
    6754:	f04f 0b00 	mov.w	fp, #0
    6758:	961b      	str	r6, [sp, #108]	; 0x6c
    675a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    675c:	7813      	ldrb	r3, [r2, #0]
    675e:	2b0d      	cmp	r3, #13
    6760:	d832      	bhi.n	67c8 <_strtod_l+0x98>
    6762:	2b09      	cmp	r3, #9
    6764:	d236      	bcs.n	67d4 <_strtod_l+0xa4>
    6766:	2b00      	cmp	r3, #0
    6768:	d03e      	beq.n	67e8 <_strtod_l+0xb8>
    676a:	2300      	movs	r3, #0
    676c:	930c      	str	r3, [sp, #48]	; 0x30
    676e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    6770:	782b      	ldrb	r3, [r5, #0]
    6772:	2b30      	cmp	r3, #48	; 0x30
    6774:	f040 80a9 	bne.w	68ca <_strtod_l+0x19a>
    6778:	786b      	ldrb	r3, [r5, #1]
    677a:	2b58      	cmp	r3, #88	; 0x58
    677c:	d001      	beq.n	6782 <_strtod_l+0x52>
    677e:	2b78      	cmp	r3, #120	; 0x78
    6780:	d167      	bne.n	6852 <_strtod_l+0x122>
    6782:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6784:	9301      	str	r3, [sp, #4]
    6786:	ab1c      	add	r3, sp, #112	; 0x70
    6788:	9300      	str	r3, [sp, #0]
    678a:	9702      	str	r7, [sp, #8]
    678c:	ab1d      	add	r3, sp, #116	; 0x74
    678e:	4a88      	ldr	r2, [pc, #544]	; (69b0 <_strtod_l+0x280>)
    6790:	9804      	ldr	r0, [sp, #16]
    6792:	a91b      	add	r1, sp, #108	; 0x6c
    6794:	f001 ffc2 	bl	871c <__gethex>
    6798:	f010 0407 	ands.w	r4, r0, #7
    679c:	4606      	mov	r6, r0
    679e:	d005      	beq.n	67ac <_strtod_l+0x7c>
    67a0:	2c06      	cmp	r4, #6
    67a2:	d12b      	bne.n	67fc <_strtod_l+0xcc>
    67a4:	3501      	adds	r5, #1
    67a6:	2300      	movs	r3, #0
    67a8:	951b      	str	r5, [sp, #108]	; 0x6c
    67aa:	930c      	str	r3, [sp, #48]	; 0x30
    67ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    67ae:	2b00      	cmp	r3, #0
    67b0:	f040 8576 	bne.w	72a0 <_strtod_l+0xb70>
    67b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    67b6:	b1e3      	cbz	r3, 67f2 <_strtod_l+0xc2>
    67b8:	4652      	mov	r2, sl
    67ba:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    67be:	ec43 2b10 	vmov	d0, r2, r3
    67c2:	b021      	add	sp, #132	; 0x84
    67c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    67c8:	2b2b      	cmp	r3, #43	; 0x2b
    67ca:	d006      	beq.n	67da <_strtod_l+0xaa>
    67cc:	2b2d      	cmp	r3, #45	; 0x2d
    67ce:	d013      	beq.n	67f8 <_strtod_l+0xc8>
    67d0:	2b20      	cmp	r3, #32
    67d2:	d1ca      	bne.n	676a <_strtod_l+0x3a>
    67d4:	3201      	adds	r2, #1
    67d6:	921b      	str	r2, [sp, #108]	; 0x6c
    67d8:	e7bf      	b.n	675a <_strtod_l+0x2a>
    67da:	2300      	movs	r3, #0
    67dc:	930c      	str	r3, [sp, #48]	; 0x30
    67de:	1c53      	adds	r3, r2, #1
    67e0:	931b      	str	r3, [sp, #108]	; 0x6c
    67e2:	7853      	ldrb	r3, [r2, #1]
    67e4:	2b00      	cmp	r3, #0
    67e6:	d1c2      	bne.n	676e <_strtod_l+0x3e>
    67e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    67ea:	961b      	str	r6, [sp, #108]	; 0x6c
    67ec:	2b00      	cmp	r3, #0
    67ee:	f040 8555 	bne.w	729c <_strtod_l+0xb6c>
    67f2:	4652      	mov	r2, sl
    67f4:	465b      	mov	r3, fp
    67f6:	e7e2      	b.n	67be <_strtod_l+0x8e>
    67f8:	2301      	movs	r3, #1
    67fa:	e7ef      	b.n	67dc <_strtod_l+0xac>
    67fc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    67fe:	b13a      	cbz	r2, 6810 <_strtod_l+0xe0>
    6800:	2135      	movs	r1, #53	; 0x35
    6802:	a81e      	add	r0, sp, #120	; 0x78
    6804:	f002 ff3d 	bl	9682 <__copybits>
    6808:	991c      	ldr	r1, [sp, #112]	; 0x70
    680a:	9804      	ldr	r0, [sp, #16]
    680c:	f002 fbb0 	bl	8f70 <_Bfree>
    6810:	3c01      	subs	r4, #1
    6812:	2c04      	cmp	r4, #4
    6814:	d806      	bhi.n	6824 <_strtod_l+0xf4>
    6816:	e8df f004 	tbb	[pc, r4]
    681a:	030a      	.short	0x030a
    681c:	1714      	.short	0x1714
    681e:	0a          	.byte	0x0a
    681f:	00          	.byte	0x00
    6820:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
    6824:	0731      	lsls	r1, r6, #28
    6826:	d5c1      	bpl.n	67ac <_strtod_l+0x7c>
    6828:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    682c:	e7be      	b.n	67ac <_strtod_l+0x7c>
    682e:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
    6832:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    6834:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
    6838:	f202 4233 	addw	r2, r2, #1075	; 0x433
    683c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
    6840:	e7f0      	b.n	6824 <_strtod_l+0xf4>
    6842:	f8df b170 	ldr.w	fp, [pc, #368]	; 69b4 <_strtod_l+0x284>
    6846:	e7ed      	b.n	6824 <_strtod_l+0xf4>
    6848:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
    684c:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    6850:	e7e8      	b.n	6824 <_strtod_l+0xf4>
    6852:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6854:	1c5a      	adds	r2, r3, #1
    6856:	921b      	str	r2, [sp, #108]	; 0x6c
    6858:	785b      	ldrb	r3, [r3, #1]
    685a:	2b30      	cmp	r3, #48	; 0x30
    685c:	d0f9      	beq.n	6852 <_strtod_l+0x122>
    685e:	2b00      	cmp	r3, #0
    6860:	d0a4      	beq.n	67ac <_strtod_l+0x7c>
    6862:	2301      	movs	r3, #1
    6864:	f04f 0900 	mov.w	r9, #0
    6868:	9306      	str	r3, [sp, #24]
    686a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    686c:	9309      	str	r3, [sp, #36]	; 0x24
    686e:	f8cd 901c 	str.w	r9, [sp, #28]
    6872:	46c8      	mov	r8, r9
    6874:	220a      	movs	r2, #10
    6876:	981b      	ldr	r0, [sp, #108]	; 0x6c
    6878:	7805      	ldrb	r5, [r0, #0]
    687a:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    687e:	b2d9      	uxtb	r1, r3
    6880:	2909      	cmp	r1, #9
    6882:	d924      	bls.n	68ce <_strtod_l+0x19e>
    6884:	4622      	mov	r2, r4
    6886:	9905      	ldr	r1, [sp, #20]
    6888:	f7ff fefa 	bl	6680 <strncmp>
    688c:	b378      	cbz	r0, 68ee <_strtod_l+0x1be>
    688e:	2000      	movs	r0, #0
    6890:	462b      	mov	r3, r5
    6892:	4644      	mov	r4, r8
    6894:	9005      	str	r0, [sp, #20]
    6896:	4602      	mov	r2, r0
    6898:	2b65      	cmp	r3, #101	; 0x65
    689a:	d001      	beq.n	68a0 <_strtod_l+0x170>
    689c:	2b45      	cmp	r3, #69	; 0x45
    689e:	d112      	bne.n	68c6 <_strtod_l+0x196>
    68a0:	b91c      	cbnz	r4, 68aa <_strtod_l+0x17a>
    68a2:	9b06      	ldr	r3, [sp, #24]
    68a4:	4303      	orrs	r3, r0
    68a6:	d09f      	beq.n	67e8 <_strtod_l+0xb8>
    68a8:	2400      	movs	r4, #0
    68aa:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
    68ac:	1c73      	adds	r3, r6, #1
    68ae:	931b      	str	r3, [sp, #108]	; 0x6c
    68b0:	7873      	ldrb	r3, [r6, #1]
    68b2:	2b2b      	cmp	r3, #43	; 0x2b
    68b4:	d072      	beq.n	699c <_strtod_l+0x26c>
    68b6:	2b2d      	cmp	r3, #45	; 0x2d
    68b8:	d075      	beq.n	69a6 <_strtod_l+0x276>
    68ba:	2700      	movs	r7, #0
    68bc:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    68c0:	2909      	cmp	r1, #9
    68c2:	d97d      	bls.n	69c0 <_strtod_l+0x290>
    68c4:	961b      	str	r6, [sp, #108]	; 0x6c
    68c6:	2500      	movs	r5, #0
    68c8:	e09a      	b.n	6a00 <_strtod_l+0x2d0>
    68ca:	2300      	movs	r3, #0
    68cc:	e7ca      	b.n	6864 <_strtod_l+0x134>
    68ce:	f1b8 0f08 	cmp.w	r8, #8
    68d2:	bfd8      	it	le
    68d4:	9907      	ldrle	r1, [sp, #28]
    68d6:	f100 0001 	add.w	r0, r0, #1
    68da:	bfda      	itte	le
    68dc:	fb02 3301 	mlale	r3, r2, r1, r3
    68e0:	9307      	strle	r3, [sp, #28]
    68e2:	fb02 3909 	mlagt	r9, r2, r9, r3
    68e6:	f108 0801 	add.w	r8, r8, #1
    68ea:	901b      	str	r0, [sp, #108]	; 0x6c
    68ec:	e7c3      	b.n	6876 <_strtod_l+0x146>
    68ee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    68f0:	191a      	adds	r2, r3, r4
    68f2:	921b      	str	r2, [sp, #108]	; 0x6c
    68f4:	5d1b      	ldrb	r3, [r3, r4]
    68f6:	f1b8 0f00 	cmp.w	r8, #0
    68fa:	d036      	beq.n	696a <_strtod_l+0x23a>
    68fc:	9005      	str	r0, [sp, #20]
    68fe:	4644      	mov	r4, r8
    6900:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    6904:	2a09      	cmp	r2, #9
    6906:	d912      	bls.n	692e <_strtod_l+0x1fe>
    6908:	2201      	movs	r2, #1
    690a:	e7c5      	b.n	6898 <_strtod_l+0x168>
    690c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    690e:	1c5a      	adds	r2, r3, #1
    6910:	921b      	str	r2, [sp, #108]	; 0x6c
    6912:	785b      	ldrb	r3, [r3, #1]
    6914:	3001      	adds	r0, #1
    6916:	2b30      	cmp	r3, #48	; 0x30
    6918:	d0f8      	beq.n	690c <_strtod_l+0x1dc>
    691a:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
    691e:	2a08      	cmp	r2, #8
    6920:	f200 84c3 	bhi.w	72aa <_strtod_l+0xb7a>
    6924:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    6926:	9005      	str	r0, [sp, #20]
    6928:	2000      	movs	r0, #0
    692a:	9209      	str	r2, [sp, #36]	; 0x24
    692c:	4604      	mov	r4, r0
    692e:	3b30      	subs	r3, #48	; 0x30
    6930:	f100 0201 	add.w	r2, r0, #1
    6934:	d013      	beq.n	695e <_strtod_l+0x22e>
    6936:	9905      	ldr	r1, [sp, #20]
    6938:	4411      	add	r1, r2
    693a:	9105      	str	r1, [sp, #20]
    693c:	4622      	mov	r2, r4
    693e:	1905      	adds	r5, r0, r4
    6940:	210a      	movs	r1, #10
    6942:	42aa      	cmp	r2, r5
    6944:	d113      	bne.n	696e <_strtod_l+0x23e>
    6946:	1822      	adds	r2, r4, r0
    6948:	2a08      	cmp	r2, #8
    694a:	f104 0401 	add.w	r4, r4, #1
    694e:	4404      	add	r4, r0
    6950:	dc1a      	bgt.n	6988 <_strtod_l+0x258>
    6952:	9907      	ldr	r1, [sp, #28]
    6954:	220a      	movs	r2, #10
    6956:	fb02 3301 	mla	r3, r2, r1, r3
    695a:	9307      	str	r3, [sp, #28]
    695c:	2200      	movs	r2, #0
    695e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6960:	1c59      	adds	r1, r3, #1
    6962:	911b      	str	r1, [sp, #108]	; 0x6c
    6964:	785b      	ldrb	r3, [r3, #1]
    6966:	4610      	mov	r0, r2
    6968:	e7ca      	b.n	6900 <_strtod_l+0x1d0>
    696a:	4640      	mov	r0, r8
    696c:	e7d3      	b.n	6916 <_strtod_l+0x1e6>
    696e:	2a08      	cmp	r2, #8
    6970:	dc04      	bgt.n	697c <_strtod_l+0x24c>
    6972:	9f07      	ldr	r7, [sp, #28]
    6974:	434f      	muls	r7, r1
    6976:	9707      	str	r7, [sp, #28]
    6978:	3201      	adds	r2, #1
    697a:	e7e2      	b.n	6942 <_strtod_l+0x212>
    697c:	1c57      	adds	r7, r2, #1
    697e:	2f10      	cmp	r7, #16
    6980:	bfd8      	it	le
    6982:	fb01 f909 	mulle.w	r9, r1, r9
    6986:	e7f7      	b.n	6978 <_strtod_l+0x248>
    6988:	2c10      	cmp	r4, #16
    698a:	bfdc      	itt	le
    698c:	220a      	movle	r2, #10
    698e:	fb02 3909 	mlale	r9, r2, r9, r3
    6992:	e7e3      	b.n	695c <_strtod_l+0x22c>
    6994:	2300      	movs	r3, #0
    6996:	9305      	str	r3, [sp, #20]
    6998:	2201      	movs	r2, #1
    699a:	e782      	b.n	68a2 <_strtod_l+0x172>
    699c:	2700      	movs	r7, #0
    699e:	1cb3      	adds	r3, r6, #2
    69a0:	931b      	str	r3, [sp, #108]	; 0x6c
    69a2:	78b3      	ldrb	r3, [r6, #2]
    69a4:	e78a      	b.n	68bc <_strtod_l+0x18c>
    69a6:	2701      	movs	r7, #1
    69a8:	e7f9      	b.n	699e <_strtod_l+0x26e>
    69aa:	bf00      	nop
    69ac:	0000bc18 	.word	0x0000bc18
    69b0:	0000bb54 	.word	0x0000bb54
    69b4:	7ff00000 	.word	0x7ff00000
    69b8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    69ba:	1c59      	adds	r1, r3, #1
    69bc:	911b      	str	r1, [sp, #108]	; 0x6c
    69be:	785b      	ldrb	r3, [r3, #1]
    69c0:	2b30      	cmp	r3, #48	; 0x30
    69c2:	d0f9      	beq.n	69b8 <_strtod_l+0x288>
    69c4:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
    69c8:	2908      	cmp	r1, #8
    69ca:	f63f af7c 	bhi.w	68c6 <_strtod_l+0x196>
    69ce:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
    69d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    69d4:	9308      	str	r3, [sp, #32]
    69d6:	f04f 0e0a 	mov.w	lr, #10
    69da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    69dc:	1c59      	adds	r1, r3, #1
    69de:	911b      	str	r1, [sp, #108]	; 0x6c
    69e0:	785b      	ldrb	r3, [r3, #1]
    69e2:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
    69e6:	2d09      	cmp	r5, #9
    69e8:	d92e      	bls.n	6a48 <_strtod_l+0x318>
    69ea:	9d08      	ldr	r5, [sp, #32]
    69ec:	1b49      	subs	r1, r1, r5
    69ee:	2908      	cmp	r1, #8
    69f0:	f644 651f 	movw	r5, #19999	; 0x4e1f
    69f4:	dc02      	bgt.n	69fc <_strtod_l+0x2cc>
    69f6:	4565      	cmp	r5, ip
    69f8:	bfa8      	it	ge
    69fa:	4665      	movge	r5, ip
    69fc:	b107      	cbz	r7, 6a00 <_strtod_l+0x2d0>
    69fe:	426d      	negs	r5, r5
    6a00:	2c00      	cmp	r4, #0
    6a02:	d14b      	bne.n	6a9c <_strtod_l+0x36c>
    6a04:	9906      	ldr	r1, [sp, #24]
    6a06:	4301      	orrs	r1, r0
    6a08:	f47f aed0 	bne.w	67ac <_strtod_l+0x7c>
    6a0c:	2a00      	cmp	r2, #0
    6a0e:	f47f aeeb 	bne.w	67e8 <_strtod_l+0xb8>
    6a12:	2b4e      	cmp	r3, #78	; 0x4e
    6a14:	d022      	beq.n	6a5c <_strtod_l+0x32c>
    6a16:	dc1c      	bgt.n	6a52 <_strtod_l+0x322>
    6a18:	2b49      	cmp	r3, #73	; 0x49
    6a1a:	f47f aee5 	bne.w	67e8 <_strtod_l+0xb8>
    6a1e:	499a      	ldr	r1, [pc, #616]	; (6c88 <_strtod_l+0x558>)
    6a20:	a81b      	add	r0, sp, #108	; 0x6c
    6a22:	f002 f8b1 	bl	8b88 <__match>
    6a26:	2800      	cmp	r0, #0
    6a28:	f43f aede 	beq.w	67e8 <_strtod_l+0xb8>
    6a2c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6a2e:	4997      	ldr	r1, [pc, #604]	; (6c8c <_strtod_l+0x55c>)
    6a30:	3b01      	subs	r3, #1
    6a32:	a81b      	add	r0, sp, #108	; 0x6c
    6a34:	931b      	str	r3, [sp, #108]	; 0x6c
    6a36:	f002 f8a7 	bl	8b88 <__match>
    6a3a:	b910      	cbnz	r0, 6a42 <_strtod_l+0x312>
    6a3c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6a3e:	3301      	adds	r3, #1
    6a40:	931b      	str	r3, [sp, #108]	; 0x6c
    6a42:	f8df b260 	ldr.w	fp, [pc, #608]	; 6ca4 <_strtod_l+0x574>
    6a46:	e6b1      	b.n	67ac <_strtod_l+0x7c>
    6a48:	fb0e 3c0c 	mla	ip, lr, ip, r3
    6a4c:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    6a50:	e7c3      	b.n	69da <_strtod_l+0x2aa>
    6a52:	2b69      	cmp	r3, #105	; 0x69
    6a54:	d0e3      	beq.n	6a1e <_strtod_l+0x2ee>
    6a56:	2b6e      	cmp	r3, #110	; 0x6e
    6a58:	f47f aec6 	bne.w	67e8 <_strtod_l+0xb8>
    6a5c:	498c      	ldr	r1, [pc, #560]	; (6c90 <_strtod_l+0x560>)
    6a5e:	a81b      	add	r0, sp, #108	; 0x6c
    6a60:	f002 f892 	bl	8b88 <__match>
    6a64:	2800      	cmp	r0, #0
    6a66:	f43f aebf 	beq.w	67e8 <_strtod_l+0xb8>
    6a6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6a6c:	781b      	ldrb	r3, [r3, #0]
    6a6e:	2b28      	cmp	r3, #40	; 0x28
    6a70:	d10e      	bne.n	6a90 <_strtod_l+0x360>
    6a72:	aa1e      	add	r2, sp, #120	; 0x78
    6a74:	4987      	ldr	r1, [pc, #540]	; (6c94 <_strtod_l+0x564>)
    6a76:	a81b      	add	r0, sp, #108	; 0x6c
    6a78:	f002 f89a 	bl	8bb0 <__hexnan>
    6a7c:	2805      	cmp	r0, #5
    6a7e:	d107      	bne.n	6a90 <_strtod_l+0x360>
    6a80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6a82:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
    6a86:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
    6a8a:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
    6a8e:	e68d      	b.n	67ac <_strtod_l+0x7c>
    6a90:	4881      	ldr	r0, [pc, #516]	; (6c98 <_strtod_l+0x568>)
    6a92:	f003 fb1d 	bl	a0d0 <nan>
    6a96:	ec5b ab10 	vmov	sl, fp, d0
    6a9a:	e687      	b.n	67ac <_strtod_l+0x7c>
    6a9c:	9b05      	ldr	r3, [sp, #20]
    6a9e:	9807      	ldr	r0, [sp, #28]
    6aa0:	1aeb      	subs	r3, r5, r3
    6aa2:	f1b8 0f00 	cmp.w	r8, #0
    6aa6:	bf08      	it	eq
    6aa8:	46a0      	moveq	r8, r4
    6aaa:	2c10      	cmp	r4, #16
    6aac:	9308      	str	r3, [sp, #32]
    6aae:	4626      	mov	r6, r4
    6ab0:	bfa8      	it	ge
    6ab2:	2610      	movge	r6, #16
    6ab4:	f7fd fed0 	bl	4858 <__aeabi_ui2d>
    6ab8:	2c09      	cmp	r4, #9
    6aba:	4682      	mov	sl, r0
    6abc:	468b      	mov	fp, r1
    6abe:	dd13      	ble.n	6ae8 <_strtod_l+0x3b8>
    6ac0:	4b76      	ldr	r3, [pc, #472]	; (6c9c <_strtod_l+0x56c>)
    6ac2:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
    6ac6:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    6aca:	f7fd ff3f 	bl	494c <__aeabi_dmul>
    6ace:	4682      	mov	sl, r0
    6ad0:	4648      	mov	r0, r9
    6ad2:	468b      	mov	fp, r1
    6ad4:	f7fd fec0 	bl	4858 <__aeabi_ui2d>
    6ad8:	4602      	mov	r2, r0
    6ada:	460b      	mov	r3, r1
    6adc:	4650      	mov	r0, sl
    6ade:	4659      	mov	r1, fp
    6ae0:	f7fd fd7e 	bl	45e0 <__adddf3>
    6ae4:	4682      	mov	sl, r0
    6ae6:	468b      	mov	fp, r1
    6ae8:	2c0f      	cmp	r4, #15
    6aea:	dc38      	bgt.n	6b5e <_strtod_l+0x42e>
    6aec:	9b08      	ldr	r3, [sp, #32]
    6aee:	2b00      	cmp	r3, #0
    6af0:	f43f ae5c 	beq.w	67ac <_strtod_l+0x7c>
    6af4:	dd24      	ble.n	6b40 <_strtod_l+0x410>
    6af6:	2b16      	cmp	r3, #22
    6af8:	dc0b      	bgt.n	6b12 <_strtod_l+0x3e2>
    6afa:	4c68      	ldr	r4, [pc, #416]	; (6c9c <_strtod_l+0x56c>)
    6afc:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    6b00:	e9d4 0100 	ldrd	r0, r1, [r4]
    6b04:	4652      	mov	r2, sl
    6b06:	465b      	mov	r3, fp
    6b08:	f7fd ff20 	bl	494c <__aeabi_dmul>
    6b0c:	4682      	mov	sl, r0
    6b0e:	468b      	mov	fp, r1
    6b10:	e64c      	b.n	67ac <_strtod_l+0x7c>
    6b12:	9a08      	ldr	r2, [sp, #32]
    6b14:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
    6b18:	4293      	cmp	r3, r2
    6b1a:	db20      	blt.n	6b5e <_strtod_l+0x42e>
    6b1c:	4d5f      	ldr	r5, [pc, #380]	; (6c9c <_strtod_l+0x56c>)
    6b1e:	f1c4 040f 	rsb	r4, r4, #15
    6b22:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
    6b26:	4652      	mov	r2, sl
    6b28:	465b      	mov	r3, fp
    6b2a:	e9d1 0100 	ldrd	r0, r1, [r1]
    6b2e:	f7fd ff0d 	bl	494c <__aeabi_dmul>
    6b32:	9b08      	ldr	r3, [sp, #32]
    6b34:	1b1c      	subs	r4, r3, r4
    6b36:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
    6b3a:	e9d5 2300 	ldrd	r2, r3, [r5]
    6b3e:	e7e3      	b.n	6b08 <_strtod_l+0x3d8>
    6b40:	9b08      	ldr	r3, [sp, #32]
    6b42:	3316      	adds	r3, #22
    6b44:	db0b      	blt.n	6b5e <_strtod_l+0x42e>
    6b46:	9b05      	ldr	r3, [sp, #20]
    6b48:	4a54      	ldr	r2, [pc, #336]	; (6c9c <_strtod_l+0x56c>)
    6b4a:	1b5d      	subs	r5, r3, r5
    6b4c:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
    6b50:	e9d5 2300 	ldrd	r2, r3, [r5]
    6b54:	4650      	mov	r0, sl
    6b56:	4659      	mov	r1, fp
    6b58:	f7fe f822 	bl	4ba0 <__aeabi_ddiv>
    6b5c:	e7d6      	b.n	6b0c <_strtod_l+0x3dc>
    6b5e:	9b08      	ldr	r3, [sp, #32]
    6b60:	1ba6      	subs	r6, r4, r6
    6b62:	441e      	add	r6, r3
    6b64:	2e00      	cmp	r6, #0
    6b66:	dd6e      	ble.n	6c46 <_strtod_l+0x516>
    6b68:	f016 030f 	ands.w	r3, r6, #15
    6b6c:	d00a      	beq.n	6b84 <_strtod_l+0x454>
    6b6e:	494b      	ldr	r1, [pc, #300]	; (6c9c <_strtod_l+0x56c>)
    6b70:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
    6b74:	4652      	mov	r2, sl
    6b76:	465b      	mov	r3, fp
    6b78:	e9d1 0100 	ldrd	r0, r1, [r1]
    6b7c:	f7fd fee6 	bl	494c <__aeabi_dmul>
    6b80:	4682      	mov	sl, r0
    6b82:	468b      	mov	fp, r1
    6b84:	f036 060f 	bics.w	r6, r6, #15
    6b88:	d04e      	beq.n	6c28 <_strtod_l+0x4f8>
    6b8a:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
    6b8e:	dd23      	ble.n	6bd8 <_strtod_l+0x4a8>
    6b90:	2400      	movs	r4, #0
    6b92:	9405      	str	r4, [sp, #20]
    6b94:	9409      	str	r4, [sp, #36]	; 0x24
    6b96:	9407      	str	r4, [sp, #28]
    6b98:	9a04      	ldr	r2, [sp, #16]
    6b9a:	f8df b108 	ldr.w	fp, [pc, #264]	; 6ca4 <_strtod_l+0x574>
    6b9e:	2322      	movs	r3, #34	; 0x22
    6ba0:	6013      	str	r3, [r2, #0]
    6ba2:	f04f 0a00 	mov.w	sl, #0
    6ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6ba8:	2b00      	cmp	r3, #0
    6baa:	f43f adff 	beq.w	67ac <_strtod_l+0x7c>
    6bae:	991c      	ldr	r1, [sp, #112]	; 0x70
    6bb0:	9804      	ldr	r0, [sp, #16]
    6bb2:	f002 f9dd 	bl	8f70 <_Bfree>
    6bb6:	9907      	ldr	r1, [sp, #28]
    6bb8:	9804      	ldr	r0, [sp, #16]
    6bba:	f002 f9d9 	bl	8f70 <_Bfree>
    6bbe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6bc2:	f002 f9d5 	bl	8f70 <_Bfree>
    6bc6:	9909      	ldr	r1, [sp, #36]	; 0x24
    6bc8:	9804      	ldr	r0, [sp, #16]
    6bca:	f002 f9d1 	bl	8f70 <_Bfree>
    6bce:	4621      	mov	r1, r4
    6bd0:	9804      	ldr	r0, [sp, #16]
    6bd2:	f002 f9cd 	bl	8f70 <_Bfree>
    6bd6:	e5e9      	b.n	67ac <_strtod_l+0x7c>
    6bd8:	2300      	movs	r3, #0
    6bda:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 6ca0 <_strtod_l+0x570>
    6bde:	1136      	asrs	r6, r6, #4
    6be0:	4650      	mov	r0, sl
    6be2:	4659      	mov	r1, fp
    6be4:	461f      	mov	r7, r3
    6be6:	2e01      	cmp	r6, #1
    6be8:	dc21      	bgt.n	6c2e <_strtod_l+0x4fe>
    6bea:	b10b      	cbz	r3, 6bf0 <_strtod_l+0x4c0>
    6bec:	4682      	mov	sl, r0
    6bee:	468b      	mov	fp, r1
    6bf0:	4b2b      	ldr	r3, [pc, #172]	; (6ca0 <_strtod_l+0x570>)
    6bf2:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
    6bf6:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
    6bfa:	4652      	mov	r2, sl
    6bfc:	465b      	mov	r3, fp
    6bfe:	e9d7 0100 	ldrd	r0, r1, [r7]
    6c02:	f7fd fea3 	bl	494c <__aeabi_dmul>
    6c06:	4b27      	ldr	r3, [pc, #156]	; (6ca4 <_strtod_l+0x574>)
    6c08:	460a      	mov	r2, r1
    6c0a:	400b      	ands	r3, r1
    6c0c:	4926      	ldr	r1, [pc, #152]	; (6ca8 <_strtod_l+0x578>)
    6c0e:	428b      	cmp	r3, r1
    6c10:	4682      	mov	sl, r0
    6c12:	d8bd      	bhi.n	6b90 <_strtod_l+0x460>
    6c14:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
    6c18:	428b      	cmp	r3, r1
    6c1a:	bf86      	itte	hi
    6c1c:	f8df b08c 	ldrhi.w	fp, [pc, #140]	; 6cac <_strtod_l+0x57c>
    6c20:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
    6c24:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
    6c28:	2300      	movs	r3, #0
    6c2a:	9306      	str	r3, [sp, #24]
    6c2c:	e079      	b.n	6d22 <_strtod_l+0x5f2>
    6c2e:	07f2      	lsls	r2, r6, #31
    6c30:	d506      	bpl.n	6c40 <_strtod_l+0x510>
    6c32:	eb09 03c7 	add.w	r3, r9, r7, lsl #3
    6c36:	e9d3 2300 	ldrd	r2, r3, [r3]
    6c3a:	f7fd fe87 	bl	494c <__aeabi_dmul>
    6c3e:	2301      	movs	r3, #1
    6c40:	3701      	adds	r7, #1
    6c42:	1076      	asrs	r6, r6, #1
    6c44:	e7cf      	b.n	6be6 <_strtod_l+0x4b6>
    6c46:	d0ef      	beq.n	6c28 <_strtod_l+0x4f8>
    6c48:	4276      	negs	r6, r6
    6c4a:	f016 020f 	ands.w	r2, r6, #15
    6c4e:	d00a      	beq.n	6c66 <_strtod_l+0x536>
    6c50:	4b12      	ldr	r3, [pc, #72]	; (6c9c <_strtod_l+0x56c>)
    6c52:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    6c56:	4650      	mov	r0, sl
    6c58:	4659      	mov	r1, fp
    6c5a:	e9d3 2300 	ldrd	r2, r3, [r3]
    6c5e:	f7fd ff9f 	bl	4ba0 <__aeabi_ddiv>
    6c62:	4682      	mov	sl, r0
    6c64:	468b      	mov	fp, r1
    6c66:	1136      	asrs	r6, r6, #4
    6c68:	d0de      	beq.n	6c28 <_strtod_l+0x4f8>
    6c6a:	2e1f      	cmp	r6, #31
    6c6c:	dd20      	ble.n	6cb0 <_strtod_l+0x580>
    6c6e:	2400      	movs	r4, #0
    6c70:	9405      	str	r4, [sp, #20]
    6c72:	9409      	str	r4, [sp, #36]	; 0x24
    6c74:	9407      	str	r4, [sp, #28]
    6c76:	9a04      	ldr	r2, [sp, #16]
    6c78:	2322      	movs	r3, #34	; 0x22
    6c7a:	f04f 0a00 	mov.w	sl, #0
    6c7e:	f04f 0b00 	mov.w	fp, #0
    6c82:	6013      	str	r3, [r2, #0]
    6c84:	e78f      	b.n	6ba6 <_strtod_l+0x476>
    6c86:	bf00      	nop
    6c88:	0000bb22 	.word	0x0000bb22
    6c8c:	0000bbab 	.word	0x0000bbab
    6c90:	0000bb2a 	.word	0x0000bb2a
    6c94:	0000bb68 	.word	0x0000bb68
    6c98:	0000ac43 	.word	0x0000ac43
    6c9c:	0000bc58 	.word	0x0000bc58
    6ca0:	0000bc30 	.word	0x0000bc30
    6ca4:	7ff00000 	.word	0x7ff00000
    6ca8:	7ca00000 	.word	0x7ca00000
    6cac:	7fefffff 	.word	0x7fefffff
    6cb0:	f016 0310 	ands.w	r3, r6, #16
    6cb4:	bf18      	it	ne
    6cb6:	236a      	movne	r3, #106	; 0x6a
    6cb8:	4fae      	ldr	r7, [pc, #696]	; (6f74 <_strtod_l+0x844>)
    6cba:	9306      	str	r3, [sp, #24]
    6cbc:	4650      	mov	r0, sl
    6cbe:	4659      	mov	r1, fp
    6cc0:	2300      	movs	r3, #0
    6cc2:	07f2      	lsls	r2, r6, #31
    6cc4:	d504      	bpl.n	6cd0 <_strtod_l+0x5a0>
    6cc6:	e9d7 2300 	ldrd	r2, r3, [r7]
    6cca:	f7fd fe3f 	bl	494c <__aeabi_dmul>
    6cce:	2301      	movs	r3, #1
    6cd0:	1076      	asrs	r6, r6, #1
    6cd2:	f107 0708 	add.w	r7, r7, #8
    6cd6:	d1f4      	bne.n	6cc2 <_strtod_l+0x592>
    6cd8:	b10b      	cbz	r3, 6cde <_strtod_l+0x5ae>
    6cda:	4682      	mov	sl, r0
    6cdc:	468b      	mov	fp, r1
    6cde:	9b06      	ldr	r3, [sp, #24]
    6ce0:	b1bb      	cbz	r3, 6d12 <_strtod_l+0x5e2>
    6ce2:	f3cb 530a 	ubfx	r3, fp, #20, #11
    6ce6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    6cea:	2b00      	cmp	r3, #0
    6cec:	4659      	mov	r1, fp
    6cee:	dd10      	ble.n	6d12 <_strtod_l+0x5e2>
    6cf0:	2b1f      	cmp	r3, #31
    6cf2:	f340 8129 	ble.w	6f48 <_strtod_l+0x818>
    6cf6:	2b34      	cmp	r3, #52	; 0x34
    6cf8:	bfde      	ittt	le
    6cfa:	3b20      	suble	r3, #32
    6cfc:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
    6d00:	fa02 f303 	lslle.w	r3, r2, r3
    6d04:	f04f 0a00 	mov.w	sl, #0
    6d08:	bfcc      	ite	gt
    6d0a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
    6d0e:	ea03 0b01 	andle.w	fp, r3, r1
    6d12:	2200      	movs	r2, #0
    6d14:	2300      	movs	r3, #0
    6d16:	4650      	mov	r0, sl
    6d18:	4659      	mov	r1, fp
    6d1a:	f003 fc75 	bl	a608 <__aeabi_dcmpeq>
    6d1e:	2800      	cmp	r0, #0
    6d20:	d1a5      	bne.n	6c6e <_strtod_l+0x53e>
    6d22:	9b07      	ldr	r3, [sp, #28]
    6d24:	9300      	str	r3, [sp, #0]
    6d26:	4642      	mov	r2, r8
    6d28:	4623      	mov	r3, r4
    6d2a:	9909      	ldr	r1, [sp, #36]	; 0x24
    6d2c:	9804      	ldr	r0, [sp, #16]
    6d2e:	f002 f971 	bl	9014 <__s2b>
    6d32:	9009      	str	r0, [sp, #36]	; 0x24
    6d34:	2800      	cmp	r0, #0
    6d36:	f43f af2b 	beq.w	6b90 <_strtod_l+0x460>
    6d3a:	9b05      	ldr	r3, [sp, #20]
    6d3c:	1b5d      	subs	r5, r3, r5
    6d3e:	9b08      	ldr	r3, [sp, #32]
    6d40:	2b00      	cmp	r3, #0
    6d42:	bfb4      	ite	lt
    6d44:	462b      	movlt	r3, r5
    6d46:	2300      	movge	r3, #0
    6d48:	930e      	str	r3, [sp, #56]	; 0x38
    6d4a:	9b08      	ldr	r3, [sp, #32]
    6d4c:	2400      	movs	r4, #0
    6d4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    6d52:	9316      	str	r3, [sp, #88]	; 0x58
    6d54:	9405      	str	r4, [sp, #20]
    6d56:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6d58:	9804      	ldr	r0, [sp, #16]
    6d5a:	6859      	ldr	r1, [r3, #4]
    6d5c:	f002 f8d4 	bl	8f08 <_Balloc>
    6d60:	9007      	str	r0, [sp, #28]
    6d62:	2800      	cmp	r0, #0
    6d64:	f43f af18 	beq.w	6b98 <_strtod_l+0x468>
    6d68:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6d6a:	691a      	ldr	r2, [r3, #16]
    6d6c:	3202      	adds	r2, #2
    6d6e:	f103 010c 	add.w	r1, r3, #12
    6d72:	0092      	lsls	r2, r2, #2
    6d74:	300c      	adds	r0, #12
    6d76:	f7fe fa47 	bl	5208 <memcpy>
    6d7a:	aa1e      	add	r2, sp, #120	; 0x78
    6d7c:	a91d      	add	r1, sp, #116	; 0x74
    6d7e:	ec4b ab10 	vmov	d0, sl, fp
    6d82:	9804      	ldr	r0, [sp, #16]
    6d84:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
    6d88:	f002 fbfa 	bl	9580 <__d2b>
    6d8c:	901c      	str	r0, [sp, #112]	; 0x70
    6d8e:	2800      	cmp	r0, #0
    6d90:	f43f af02 	beq.w	6b98 <_strtod_l+0x468>
    6d94:	2101      	movs	r1, #1
    6d96:	9804      	ldr	r0, [sp, #16]
    6d98:	f002 f9ca 	bl	9130 <__i2b>
    6d9c:	9005      	str	r0, [sp, #20]
    6d9e:	4603      	mov	r3, r0
    6da0:	2800      	cmp	r0, #0
    6da2:	f43f aef9 	beq.w	6b98 <_strtod_l+0x468>
    6da6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    6da8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    6daa:	2e00      	cmp	r6, #0
    6dac:	bfab      	itete	ge
    6dae:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
    6db0:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
    6db2:	9d16      	ldrge	r5, [sp, #88]	; 0x58
    6db4:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
    6db6:	bfac      	ite	ge
    6db8:	18f7      	addge	r7, r6, r3
    6dba:	1b9d      	sublt	r5, r3, r6
    6dbc:	9b06      	ldr	r3, [sp, #24]
    6dbe:	1af6      	subs	r6, r6, r3
    6dc0:	4416      	add	r6, r2
    6dc2:	4b6d      	ldr	r3, [pc, #436]	; (6f78 <_strtod_l+0x848>)
    6dc4:	3e01      	subs	r6, #1
    6dc6:	429e      	cmp	r6, r3
    6dc8:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    6dcc:	f280 80c3 	bge.w	6f56 <_strtod_l+0x826>
    6dd0:	1b9b      	subs	r3, r3, r6
    6dd2:	2b1f      	cmp	r3, #31
    6dd4:	bfc2      	ittt	gt
    6dd6:	f1c6 467f 	rsbgt	r6, r6, #4278190080	; 0xff000000
    6dda:	f506 067f 	addgt.w	r6, r6, #16711680	; 0xff0000
    6dde:	f506 467b 	addgt.w	r6, r6, #64256	; 0xfb00
    6de2:	f04f 0801 	mov.w	r8, #1
    6de6:	bfc8      	it	gt
    6de8:	36e2      	addgt	r6, #226	; 0xe2
    6dea:	eba2 0203 	sub.w	r2, r2, r3
    6dee:	bfda      	itte	le
    6df0:	fa08 f803 	lslle.w	r8, r8, r3
    6df4:	2600      	movle	r6, #0
    6df6:	fa08 f606 	lslgt.w	r6, r8, r6
    6dfa:	eb07 0902 	add.w	r9, r7, r2
    6dfe:	9b06      	ldr	r3, [sp, #24]
    6e00:	454f      	cmp	r7, r9
    6e02:	4415      	add	r5, r2
    6e04:	441d      	add	r5, r3
    6e06:	463b      	mov	r3, r7
    6e08:	bfa8      	it	ge
    6e0a:	464b      	movge	r3, r9
    6e0c:	42ab      	cmp	r3, r5
    6e0e:	bfa8      	it	ge
    6e10:	462b      	movge	r3, r5
    6e12:	2b00      	cmp	r3, #0
    6e14:	bfc2      	ittt	gt
    6e16:	eba9 0903 	subgt.w	r9, r9, r3
    6e1a:	1aed      	subgt	r5, r5, r3
    6e1c:	1aff      	subgt	r7, r7, r3
    6e1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6e20:	2b00      	cmp	r3, #0
    6e22:	dd17      	ble.n	6e54 <_strtod_l+0x724>
    6e24:	461a      	mov	r2, r3
    6e26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6e2a:	f002 fa1b 	bl	9264 <__pow5mult>
    6e2e:	9005      	str	r0, [sp, #20]
    6e30:	2800      	cmp	r0, #0
    6e32:	f43f aeb1 	beq.w	6b98 <_strtod_l+0x468>
    6e36:	4601      	mov	r1, r0
    6e38:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6e3a:	9804      	ldr	r0, [sp, #16]
    6e3c:	f002 f981 	bl	9142 <__multiply>
    6e40:	900d      	str	r0, [sp, #52]	; 0x34
    6e42:	2800      	cmp	r0, #0
    6e44:	f43f aea8 	beq.w	6b98 <_strtod_l+0x468>
    6e48:	991c      	ldr	r1, [sp, #112]	; 0x70
    6e4a:	9804      	ldr	r0, [sp, #16]
    6e4c:	f002 f890 	bl	8f70 <_Bfree>
    6e50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6e52:	931c      	str	r3, [sp, #112]	; 0x70
    6e54:	f1b9 0f00 	cmp.w	r9, #0
    6e58:	f300 8081 	bgt.w	6f5e <_strtod_l+0x82e>
    6e5c:	9b08      	ldr	r3, [sp, #32]
    6e5e:	2b00      	cmp	r3, #0
    6e60:	dd08      	ble.n	6e74 <_strtod_l+0x744>
    6e62:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6e64:	9907      	ldr	r1, [sp, #28]
    6e66:	9804      	ldr	r0, [sp, #16]
    6e68:	f002 f9fc 	bl	9264 <__pow5mult>
    6e6c:	9007      	str	r0, [sp, #28]
    6e6e:	2800      	cmp	r0, #0
    6e70:	f43f ae92 	beq.w	6b98 <_strtod_l+0x468>
    6e74:	2d00      	cmp	r5, #0
    6e76:	dd08      	ble.n	6e8a <_strtod_l+0x75a>
    6e78:	462a      	mov	r2, r5
    6e7a:	9907      	ldr	r1, [sp, #28]
    6e7c:	9804      	ldr	r0, [sp, #16]
    6e7e:	f002 fa3f 	bl	9300 <__lshift>
    6e82:	9007      	str	r0, [sp, #28]
    6e84:	2800      	cmp	r0, #0
    6e86:	f43f ae87 	beq.w	6b98 <_strtod_l+0x468>
    6e8a:	2f00      	cmp	r7, #0
    6e8c:	dd08      	ble.n	6ea0 <_strtod_l+0x770>
    6e8e:	463a      	mov	r2, r7
    6e90:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6e94:	f002 fa34 	bl	9300 <__lshift>
    6e98:	9005      	str	r0, [sp, #20]
    6e9a:	2800      	cmp	r0, #0
    6e9c:	f43f ae7c 	beq.w	6b98 <_strtod_l+0x468>
    6ea0:	9a07      	ldr	r2, [sp, #28]
    6ea2:	991c      	ldr	r1, [sp, #112]	; 0x70
    6ea4:	9804      	ldr	r0, [sp, #16]
    6ea6:	f002 fa98 	bl	93da <__mdiff>
    6eaa:	4604      	mov	r4, r0
    6eac:	2800      	cmp	r0, #0
    6eae:	f43f ae73 	beq.w	6b98 <_strtod_l+0x468>
    6eb2:	68c3      	ldr	r3, [r0, #12]
    6eb4:	930d      	str	r3, [sp, #52]	; 0x34
    6eb6:	2300      	movs	r3, #0
    6eb8:	60c3      	str	r3, [r0, #12]
    6eba:	9905      	ldr	r1, [sp, #20]
    6ebc:	f002 fa73 	bl	93a6 <__mcmp>
    6ec0:	2800      	cmp	r0, #0
    6ec2:	da5f      	bge.n	6f84 <_strtod_l+0x854>
    6ec4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6ec6:	ea53 030a 	orrs.w	r3, r3, sl
    6eca:	f040 8081 	bne.w	6fd0 <_strtod_l+0x8a0>
    6ece:	f3cb 0313 	ubfx	r3, fp, #0, #20
    6ed2:	2b00      	cmp	r3, #0
    6ed4:	d17c      	bne.n	6fd0 <_strtod_l+0x8a0>
    6ed6:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    6eda:	0d1b      	lsrs	r3, r3, #20
    6edc:	051b      	lsls	r3, r3, #20
    6ede:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    6ee2:	d975      	bls.n	6fd0 <_strtod_l+0x8a0>
    6ee4:	6963      	ldr	r3, [r4, #20]
    6ee6:	b913      	cbnz	r3, 6eee <_strtod_l+0x7be>
    6ee8:	6923      	ldr	r3, [r4, #16]
    6eea:	2b01      	cmp	r3, #1
    6eec:	dd70      	ble.n	6fd0 <_strtod_l+0x8a0>
    6eee:	4621      	mov	r1, r4
    6ef0:	2201      	movs	r2, #1
    6ef2:	9804      	ldr	r0, [sp, #16]
    6ef4:	f002 fa04 	bl	9300 <__lshift>
    6ef8:	9905      	ldr	r1, [sp, #20]
    6efa:	4604      	mov	r4, r0
    6efc:	f002 fa53 	bl	93a6 <__mcmp>
    6f00:	2800      	cmp	r0, #0
    6f02:	dd65      	ble.n	6fd0 <_strtod_l+0x8a0>
    6f04:	9906      	ldr	r1, [sp, #24]
    6f06:	4a1d      	ldr	r2, [pc, #116]	; (6f7c <_strtod_l+0x84c>)
    6f08:	465b      	mov	r3, fp
    6f0a:	2900      	cmp	r1, #0
    6f0c:	d07f      	beq.n	700e <_strtod_l+0x8de>
    6f0e:	ea02 010b 	and.w	r1, r2, fp
    6f12:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
    6f16:	dc7a      	bgt.n	700e <_strtod_l+0x8de>
    6f18:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
    6f1c:	f77f aeab 	ble.w	6c76 <_strtod_l+0x546>
    6f20:	4a17      	ldr	r2, [pc, #92]	; (6f80 <_strtod_l+0x850>)
    6f22:	2300      	movs	r3, #0
    6f24:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
    6f28:	4650      	mov	r0, sl
    6f2a:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    6f2e:	4659      	mov	r1, fp
    6f30:	f7fd fd0c 	bl	494c <__aeabi_dmul>
    6f34:	460b      	mov	r3, r1
    6f36:	4303      	orrs	r3, r0
    6f38:	bf04      	itt	eq
    6f3a:	9a04      	ldreq	r2, [sp, #16]
    6f3c:	2322      	moveq	r3, #34	; 0x22
    6f3e:	4682      	mov	sl, r0
    6f40:	468b      	mov	fp, r1
    6f42:	bf08      	it	eq
    6f44:	6013      	streq	r3, [r2, #0]
    6f46:	e632      	b.n	6bae <_strtod_l+0x47e>
    6f48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    6f4c:	fa02 f303 	lsl.w	r3, r2, r3
    6f50:	ea03 0a0a 	and.w	sl, r3, sl
    6f54:	e6dd      	b.n	6d12 <_strtod_l+0x5e2>
    6f56:	2600      	movs	r6, #0
    6f58:	f04f 0801 	mov.w	r8, #1
    6f5c:	e74d      	b.n	6dfa <_strtod_l+0x6ca>
    6f5e:	464a      	mov	r2, r9
    6f60:	991c      	ldr	r1, [sp, #112]	; 0x70
    6f62:	9804      	ldr	r0, [sp, #16]
    6f64:	f002 f9cc 	bl	9300 <__lshift>
    6f68:	901c      	str	r0, [sp, #112]	; 0x70
    6f6a:	2800      	cmp	r0, #0
    6f6c:	f47f af76 	bne.w	6e5c <_strtod_l+0x72c>
    6f70:	e612      	b.n	6b98 <_strtod_l+0x468>
    6f72:	bf00      	nop
    6f74:	0000bb80 	.word	0x0000bb80
    6f78:	fffffc02 	.word	0xfffffc02
    6f7c:	7ff00000 	.word	0x7ff00000
    6f80:	39500000 	.word	0x39500000
    6f84:	465d      	mov	r5, fp
    6f86:	d160      	bne.n	704a <_strtod_l+0x91a>
    6f88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6f8a:	f3cb 0313 	ubfx	r3, fp, #0, #20
    6f8e:	b342      	cbz	r2, 6fe2 <_strtod_l+0x8b2>
    6f90:	4ab7      	ldr	r2, [pc, #732]	; (7270 <_strtod_l+0xb40>)
    6f92:	4293      	cmp	r3, r2
    6f94:	d128      	bne.n	6fe8 <_strtod_l+0x8b8>
    6f96:	9b06      	ldr	r3, [sp, #24]
    6f98:	4650      	mov	r0, sl
    6f9a:	b1eb      	cbz	r3, 6fd8 <_strtod_l+0x8a8>
    6f9c:	4ab5      	ldr	r2, [pc, #724]	; (7274 <_strtod_l+0xb44>)
    6f9e:	402a      	ands	r2, r5
    6fa0:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    6fa4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    6fa8:	d819      	bhi.n	6fde <_strtod_l+0x8ae>
    6faa:	0d12      	lsrs	r2, r2, #20
    6fac:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
    6fb0:	fa01 f303 	lsl.w	r3, r1, r3
    6fb4:	4298      	cmp	r0, r3
    6fb6:	d117      	bne.n	6fe8 <_strtod_l+0x8b8>
    6fb8:	4baf      	ldr	r3, [pc, #700]	; (7278 <_strtod_l+0xb48>)
    6fba:	429d      	cmp	r5, r3
    6fbc:	d102      	bne.n	6fc4 <_strtod_l+0x894>
    6fbe:	3001      	adds	r0, #1
    6fc0:	f43f adea 	beq.w	6b98 <_strtod_l+0x468>
    6fc4:	4bab      	ldr	r3, [pc, #684]	; (7274 <_strtod_l+0xb44>)
    6fc6:	402b      	ands	r3, r5
    6fc8:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
    6fcc:	f04f 0a00 	mov.w	sl, #0
    6fd0:	9b06      	ldr	r3, [sp, #24]
    6fd2:	2b00      	cmp	r3, #0
    6fd4:	d1a4      	bne.n	6f20 <_strtod_l+0x7f0>
    6fd6:	e5ea      	b.n	6bae <_strtod_l+0x47e>
    6fd8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    6fdc:	e7ea      	b.n	6fb4 <_strtod_l+0x884>
    6fde:	460b      	mov	r3, r1
    6fe0:	e7e8      	b.n	6fb4 <_strtod_l+0x884>
    6fe2:	ea53 030a 	orrs.w	r3, r3, sl
    6fe6:	d08d      	beq.n	6f04 <_strtod_l+0x7d4>
    6fe8:	b1de      	cbz	r6, 7022 <_strtod_l+0x8f2>
    6fea:	422e      	tst	r6, r5
    6fec:	d0f0      	beq.n	6fd0 <_strtod_l+0x8a0>
    6fee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6ff0:	9a06      	ldr	r2, [sp, #24]
    6ff2:	4650      	mov	r0, sl
    6ff4:	4659      	mov	r1, fp
    6ff6:	b1bb      	cbz	r3, 7028 <_strtod_l+0x8f8>
    6ff8:	f7ff fb7e 	bl	66f8 <sulp>
    6ffc:	4602      	mov	r2, r0
    6ffe:	460b      	mov	r3, r1
    7000:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    7004:	f7fd faec 	bl	45e0 <__adddf3>
    7008:	4682      	mov	sl, r0
    700a:	468b      	mov	fp, r1
    700c:	e7e0      	b.n	6fd0 <_strtod_l+0x8a0>
    700e:	4013      	ands	r3, r2
    7010:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    7014:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
    7018:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
    701c:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    7020:	e7d6      	b.n	6fd0 <_strtod_l+0x8a0>
    7022:	ea18 0f0a 	tst.w	r8, sl
    7026:	e7e1      	b.n	6fec <_strtod_l+0x8bc>
    7028:	f7ff fb66 	bl	66f8 <sulp>
    702c:	4602      	mov	r2, r0
    702e:	460b      	mov	r3, r1
    7030:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    7034:	f7fd fad2 	bl	45dc <__aeabi_dsub>
    7038:	2200      	movs	r2, #0
    703a:	2300      	movs	r3, #0
    703c:	4682      	mov	sl, r0
    703e:	468b      	mov	fp, r1
    7040:	f003 fae2 	bl	a608 <__aeabi_dcmpeq>
    7044:	2800      	cmp	r0, #0
    7046:	d0c3      	beq.n	6fd0 <_strtod_l+0x8a0>
    7048:	e615      	b.n	6c76 <_strtod_l+0x546>
    704a:	9905      	ldr	r1, [sp, #20]
    704c:	4620      	mov	r0, r4
    704e:	f002 fae5 	bl	961c <__ratio>
    7052:	ec57 6b10 	vmov	r6, r7, d0
    7056:	2200      	movs	r2, #0
    7058:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    705c:	ee10 0a10 	vmov	r0, s0
    7060:	4639      	mov	r1, r7
    7062:	f003 fae5 	bl	a630 <__aeabi_dcmple>
    7066:	2800      	cmp	r0, #0
    7068:	d073      	beq.n	7152 <_strtod_l+0xa22>
    706a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    706c:	2b00      	cmp	r3, #0
    706e:	d046      	beq.n	70fe <_strtod_l+0x9ce>
    7070:	f8df 9208 	ldr.w	r9, [pc, #520]	; 727c <_strtod_l+0xb4c>
    7074:	f04f 0800 	mov.w	r8, #0
    7078:	4f80      	ldr	r7, [pc, #512]	; (727c <_strtod_l+0xb4c>)
    707a:	2600      	movs	r6, #0
    707c:	4b7d      	ldr	r3, [pc, #500]	; (7274 <_strtod_l+0xb44>)
    707e:	402b      	ands	r3, r5
    7080:	930f      	str	r3, [sp, #60]	; 0x3c
    7082:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7084:	4b7e      	ldr	r3, [pc, #504]	; (7280 <_strtod_l+0xb50>)
    7086:	429a      	cmp	r2, r3
    7088:	f040 80ab 	bne.w	71e2 <_strtod_l+0xab2>
    708c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7090:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
    7094:	ec4b ab10 	vmov	d0, sl, fp
    7098:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    709c:	f002 f9fa 	bl	9494 <__ulp>
    70a0:	4640      	mov	r0, r8
    70a2:	ec53 2b10 	vmov	r2, r3, d0
    70a6:	4649      	mov	r1, r9
    70a8:	f7fd fc50 	bl	494c <__aeabi_dmul>
    70ac:	4652      	mov	r2, sl
    70ae:	465b      	mov	r3, fp
    70b0:	f7fd fa96 	bl	45e0 <__adddf3>
    70b4:	460b      	mov	r3, r1
    70b6:	496f      	ldr	r1, [pc, #444]	; (7274 <_strtod_l+0xb44>)
    70b8:	4a72      	ldr	r2, [pc, #456]	; (7284 <_strtod_l+0xb54>)
    70ba:	4019      	ands	r1, r3
    70bc:	4291      	cmp	r1, r2
    70be:	4682      	mov	sl, r0
    70c0:	d95b      	bls.n	717a <_strtod_l+0xa4a>
    70c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    70c4:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
    70c8:	4293      	cmp	r3, r2
    70ca:	d103      	bne.n	70d4 <_strtod_l+0x9a4>
    70cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    70ce:	3301      	adds	r3, #1
    70d0:	f43f ad62 	beq.w	6b98 <_strtod_l+0x468>
    70d4:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 7278 <_strtod_l+0xb48>
    70d8:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    70dc:	991c      	ldr	r1, [sp, #112]	; 0x70
    70de:	9804      	ldr	r0, [sp, #16]
    70e0:	f001 ff46 	bl	8f70 <_Bfree>
    70e4:	9907      	ldr	r1, [sp, #28]
    70e6:	9804      	ldr	r0, [sp, #16]
    70e8:	f001 ff42 	bl	8f70 <_Bfree>
    70ec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    70f0:	f001 ff3e 	bl	8f70 <_Bfree>
    70f4:	4621      	mov	r1, r4
    70f6:	9804      	ldr	r0, [sp, #16]
    70f8:	f001 ff3a 	bl	8f70 <_Bfree>
    70fc:	e62b      	b.n	6d56 <_strtod_l+0x626>
    70fe:	f1ba 0f00 	cmp.w	sl, #0
    7102:	d118      	bne.n	7136 <_strtod_l+0xa06>
    7104:	f3cb 0313 	ubfx	r3, fp, #0, #20
    7108:	b9db      	cbnz	r3, 7142 <_strtod_l+0xa12>
    710a:	2200      	movs	r2, #0
    710c:	4b5b      	ldr	r3, [pc, #364]	; (727c <_strtod_l+0xb4c>)
    710e:	4630      	mov	r0, r6
    7110:	4639      	mov	r1, r7
    7112:	f003 fa83 	bl	a61c <__aeabi_dcmplt>
    7116:	b9c8      	cbnz	r0, 714c <_strtod_l+0xa1c>
    7118:	4630      	mov	r0, r6
    711a:	4639      	mov	r1, r7
    711c:	2200      	movs	r2, #0
    711e:	4b5a      	ldr	r3, [pc, #360]	; (7288 <_strtod_l+0xb58>)
    7120:	f7fd fc14 	bl	494c <__aeabi_dmul>
    7124:	4606      	mov	r6, r0
    7126:	460f      	mov	r7, r1
    7128:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    712c:	9618      	str	r6, [sp, #96]	; 0x60
    712e:	9319      	str	r3, [sp, #100]	; 0x64
    7130:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
    7134:	e7a2      	b.n	707c <_strtod_l+0x94c>
    7136:	f1ba 0f01 	cmp.w	sl, #1
    713a:	d102      	bne.n	7142 <_strtod_l+0xa12>
    713c:	2d00      	cmp	r5, #0
    713e:	f43f ad9a 	beq.w	6c76 <_strtod_l+0x546>
    7142:	f04f 0800 	mov.w	r8, #0
    7146:	f8df 9144 	ldr.w	r9, [pc, #324]	; 728c <_strtod_l+0xb5c>
    714a:	e795      	b.n	7078 <_strtod_l+0x948>
    714c:	2600      	movs	r6, #0
    714e:	4f4e      	ldr	r7, [pc, #312]	; (7288 <_strtod_l+0xb58>)
    7150:	e7ea      	b.n	7128 <_strtod_l+0x9f8>
    7152:	4b4d      	ldr	r3, [pc, #308]	; (7288 <_strtod_l+0xb58>)
    7154:	4630      	mov	r0, r6
    7156:	4639      	mov	r1, r7
    7158:	2200      	movs	r2, #0
    715a:	f7fd fbf7 	bl	494c <__aeabi_dmul>
    715e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7160:	4606      	mov	r6, r0
    7162:	460f      	mov	r7, r1
    7164:	b933      	cbnz	r3, 7174 <_strtod_l+0xa44>
    7166:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    716a:	9010      	str	r0, [sp, #64]	; 0x40
    716c:	9311      	str	r3, [sp, #68]	; 0x44
    716e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    7172:	e783      	b.n	707c <_strtod_l+0x94c>
    7174:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    7178:	e7f9      	b.n	716e <_strtod_l+0xa3e>
    717a:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
    717e:	9b06      	ldr	r3, [sp, #24]
    7180:	2b00      	cmp	r3, #0
    7182:	d1ab      	bne.n	70dc <_strtod_l+0x9ac>
    7184:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    7188:	0d1b      	lsrs	r3, r3, #20
    718a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    718c:	051b      	lsls	r3, r3, #20
    718e:	429a      	cmp	r2, r3
    7190:	d1a4      	bne.n	70dc <_strtod_l+0x9ac>
    7192:	4630      	mov	r0, r6
    7194:	4639      	mov	r1, r7
    7196:	f003 faf7 	bl	a788 <__aeabi_d2lz>
    719a:	f7fd fba9 	bl	48f0 <__aeabi_l2d>
    719e:	4602      	mov	r2, r0
    71a0:	460b      	mov	r3, r1
    71a2:	4630      	mov	r0, r6
    71a4:	4639      	mov	r1, r7
    71a6:	f7fd fa19 	bl	45dc <__aeabi_dsub>
    71aa:	f3cb 0313 	ubfx	r3, fp, #0, #20
    71ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    71b0:	ea43 030a 	orr.w	r3, r3, sl
    71b4:	4313      	orrs	r3, r2
    71b6:	4606      	mov	r6, r0
    71b8:	460f      	mov	r7, r1
    71ba:	d069      	beq.n	7290 <_strtod_l+0xb60>
    71bc:	a326      	add	r3, pc, #152	; (adr r3, 7258 <_strtod_l+0xb28>)
    71be:	e9d3 2300 	ldrd	r2, r3, [r3]
    71c2:	f003 fa2b 	bl	a61c <__aeabi_dcmplt>
    71c6:	2800      	cmp	r0, #0
    71c8:	f47f acf1 	bne.w	6bae <_strtod_l+0x47e>
    71cc:	a324      	add	r3, pc, #144	; (adr r3, 7260 <_strtod_l+0xb30>)
    71ce:	e9d3 2300 	ldrd	r2, r3, [r3]
    71d2:	4630      	mov	r0, r6
    71d4:	4639      	mov	r1, r7
    71d6:	f003 fa3f 	bl	a658 <__aeabi_dcmpgt>
    71da:	2800      	cmp	r0, #0
    71dc:	f43f af7e 	beq.w	70dc <_strtod_l+0x9ac>
    71e0:	e4e5      	b.n	6bae <_strtod_l+0x47e>
    71e2:	9b06      	ldr	r3, [sp, #24]
    71e4:	b31b      	cbz	r3, 722e <_strtod_l+0xafe>
    71e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    71e8:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
    71ec:	d81f      	bhi.n	722e <_strtod_l+0xafe>
    71ee:	a31e      	add	r3, pc, #120	; (adr r3, 7268 <_strtod_l+0xb38>)
    71f0:	e9d3 2300 	ldrd	r2, r3, [r3]
    71f4:	4630      	mov	r0, r6
    71f6:	4639      	mov	r1, r7
    71f8:	f003 fa1a 	bl	a630 <__aeabi_dcmple>
    71fc:	b190      	cbz	r0, 7224 <_strtod_l+0xaf4>
    71fe:	4639      	mov	r1, r7
    7200:	4630      	mov	r0, r6
    7202:	f7fd fdb5 	bl	4d70 <__aeabi_d2uiz>
    7206:	2800      	cmp	r0, #0
    7208:	bf08      	it	eq
    720a:	2001      	moveq	r0, #1
    720c:	f7fd fb24 	bl	4858 <__aeabi_ui2d>
    7210:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7212:	4606      	mov	r6, r0
    7214:	460f      	mov	r7, r1
    7216:	b9db      	cbnz	r3, 7250 <_strtod_l+0xb20>
    7218:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    721c:	9012      	str	r0, [sp, #72]	; 0x48
    721e:	9313      	str	r3, [sp, #76]	; 0x4c
    7220:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    7224:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7226:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
    722a:	eba3 0902 	sub.w	r9, r3, r2
    722e:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
    7232:	f002 f92f 	bl	9494 <__ulp>
    7236:	4640      	mov	r0, r8
    7238:	ec53 2b10 	vmov	r2, r3, d0
    723c:	4649      	mov	r1, r9
    723e:	f7fd fb85 	bl	494c <__aeabi_dmul>
    7242:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7246:	f7fd f9cb 	bl	45e0 <__adddf3>
    724a:	4682      	mov	sl, r0
    724c:	468b      	mov	fp, r1
    724e:	e796      	b.n	717e <_strtod_l+0xa4e>
    7250:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    7254:	e7e4      	b.n	7220 <_strtod_l+0xaf0>
    7256:	bf00      	nop
    7258:	94a03595 	.word	0x94a03595
    725c:	3fdfffff 	.word	0x3fdfffff
    7260:	35afe535 	.word	0x35afe535
    7264:	3fe00000 	.word	0x3fe00000
    7268:	ffc00000 	.word	0xffc00000
    726c:	41dfffff 	.word	0x41dfffff
    7270:	000fffff 	.word	0x000fffff
    7274:	7ff00000 	.word	0x7ff00000
    7278:	7fefffff 	.word	0x7fefffff
    727c:	3ff00000 	.word	0x3ff00000
    7280:	7fe00000 	.word	0x7fe00000
    7284:	7c9fffff 	.word	0x7c9fffff
    7288:	3fe00000 	.word	0x3fe00000
    728c:	bff00000 	.word	0xbff00000
    7290:	a30b      	add	r3, pc, #44	; (adr r3, 72c0 <_strtod_l+0xb90>)
    7292:	e9d3 2300 	ldrd	r2, r3, [r3]
    7296:	f003 f9c1 	bl	a61c <__aeabi_dcmplt>
    729a:	e79e      	b.n	71da <_strtod_l+0xaaa>
    729c:	2300      	movs	r3, #0
    729e:	930c      	str	r3, [sp, #48]	; 0x30
    72a0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    72a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    72a4:	6013      	str	r3, [r2, #0]
    72a6:	f7ff ba85 	b.w	67b4 <_strtod_l+0x84>
    72aa:	2b65      	cmp	r3, #101	; 0x65
    72ac:	f43f ab72 	beq.w	6994 <_strtod_l+0x264>
    72b0:	2b45      	cmp	r3, #69	; 0x45
    72b2:	f43f ab6f 	beq.w	6994 <_strtod_l+0x264>
    72b6:	2201      	movs	r2, #1
    72b8:	f7ff bba4 	b.w	6a04 <_strtod_l+0x2d4>
    72bc:	f3af 8000 	nop.w
    72c0:	94a03595 	.word	0x94a03595
    72c4:	3fcfffff 	.word	0x3fcfffff

000072c8 <_strtod_r>:
_strtod_r():
    72c8:	4b01      	ldr	r3, [pc, #4]	; (72d0 <_strtod_r+0x8>)
    72ca:	f7ff ba31 	b.w	6730 <_strtod_l>
    72ce:	bf00      	nop
    72d0:	100001dc 	.word	0x100001dc

000072d4 <_strtol_l.isra.0>:
_strtol_l.isra.0():
    72d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    72d8:	4f39      	ldr	r7, [pc, #228]	; (73c0 <_strtol_l.isra.0+0xec>)
    72da:	4686      	mov	lr, r0
    72dc:	4608      	mov	r0, r1
    72de:	4605      	mov	r5, r0
    72e0:	f815 4b01 	ldrb.w	r4, [r5], #1
    72e4:	5de6      	ldrb	r6, [r4, r7]
    72e6:	f016 0608 	ands.w	r6, r6, #8
    72ea:	d134      	bne.n	7356 <_strtol_l.isra.0+0x82>
    72ec:	2c2d      	cmp	r4, #45	; 0x2d
    72ee:	d134      	bne.n	735a <_strtol_l.isra.0+0x86>
    72f0:	782c      	ldrb	r4, [r5, #0]
    72f2:	f04f 0801 	mov.w	r8, #1
    72f6:	1c85      	adds	r5, r0, #2
    72f8:	2b00      	cmp	r3, #0
    72fa:	d05c      	beq.n	73b6 <_strtol_l.isra.0+0xe2>
    72fc:	2b10      	cmp	r3, #16
    72fe:	d109      	bne.n	7314 <_strtol_l.isra.0+0x40>
    7300:	2c30      	cmp	r4, #48	; 0x30
    7302:	d107      	bne.n	7314 <_strtol_l.isra.0+0x40>
    7304:	7828      	ldrb	r0, [r5, #0]
    7306:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    730a:	2858      	cmp	r0, #88	; 0x58
    730c:	d14e      	bne.n	73ac <_strtol_l.isra.0+0xd8>
    730e:	786c      	ldrb	r4, [r5, #1]
    7310:	2310      	movs	r3, #16
    7312:	3502      	adds	r5, #2
    7314:	f1b8 0f00 	cmp.w	r8, #0
    7318:	bf14      	ite	ne
    731a:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
    731e:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
    7322:	2700      	movs	r7, #0
    7324:	fbbc f9f3 	udiv	r9, ip, r3
    7328:	4638      	mov	r0, r7
    732a:	fb03 ca19 	mls	sl, r3, r9, ip
    732e:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
    7332:	2e09      	cmp	r6, #9
    7334:	d818      	bhi.n	7368 <_strtol_l.isra.0+0x94>
    7336:	4634      	mov	r4, r6
    7338:	42a3      	cmp	r3, r4
    733a:	dd24      	ble.n	7386 <_strtol_l.isra.0+0xb2>
    733c:	1c7e      	adds	r6, r7, #1
    733e:	d007      	beq.n	7350 <_strtol_l.isra.0+0x7c>
    7340:	4581      	cmp	r9, r0
    7342:	d31d      	bcc.n	7380 <_strtol_l.isra.0+0xac>
    7344:	d101      	bne.n	734a <_strtol_l.isra.0+0x76>
    7346:	45a2      	cmp	sl, r4
    7348:	db1a      	blt.n	7380 <_strtol_l.isra.0+0xac>
    734a:	fb00 4003 	mla	r0, r0, r3, r4
    734e:	2701      	movs	r7, #1
    7350:	f815 4b01 	ldrb.w	r4, [r5], #1
    7354:	e7eb      	b.n	732e <_strtol_l.isra.0+0x5a>
    7356:	4628      	mov	r0, r5
    7358:	e7c1      	b.n	72de <_strtol_l.isra.0+0xa>
    735a:	2c2b      	cmp	r4, #43	; 0x2b
    735c:	bf08      	it	eq
    735e:	782c      	ldrbeq	r4, [r5, #0]
    7360:	46b0      	mov	r8, r6
    7362:	bf08      	it	eq
    7364:	1c85      	addeq	r5, r0, #2
    7366:	e7c7      	b.n	72f8 <_strtol_l.isra.0+0x24>
    7368:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
    736c:	2e19      	cmp	r6, #25
    736e:	d801      	bhi.n	7374 <_strtol_l.isra.0+0xa0>
    7370:	3c37      	subs	r4, #55	; 0x37
    7372:	e7e1      	b.n	7338 <_strtol_l.isra.0+0x64>
    7374:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
    7378:	2e19      	cmp	r6, #25
    737a:	d804      	bhi.n	7386 <_strtol_l.isra.0+0xb2>
    737c:	3c57      	subs	r4, #87	; 0x57
    737e:	e7db      	b.n	7338 <_strtol_l.isra.0+0x64>
    7380:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    7384:	e7e4      	b.n	7350 <_strtol_l.isra.0+0x7c>
    7386:	1c7b      	adds	r3, r7, #1
    7388:	d106      	bne.n	7398 <_strtol_l.isra.0+0xc4>
    738a:	2322      	movs	r3, #34	; 0x22
    738c:	f8ce 3000 	str.w	r3, [lr]
    7390:	4660      	mov	r0, ip
    7392:	b942      	cbnz	r2, 73a6 <_strtol_l.isra.0+0xd2>
    7394:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    7398:	f1b8 0f00 	cmp.w	r8, #0
    739c:	d000      	beq.n	73a0 <_strtol_l.isra.0+0xcc>
    739e:	4240      	negs	r0, r0
    73a0:	2a00      	cmp	r2, #0
    73a2:	d0f7      	beq.n	7394 <_strtol_l.isra.0+0xc0>
    73a4:	b107      	cbz	r7, 73a8 <_strtol_l.isra.0+0xd4>
    73a6:	1e69      	subs	r1, r5, #1
    73a8:	6011      	str	r1, [r2, #0]
    73aa:	e7f3      	b.n	7394 <_strtol_l.isra.0+0xc0>
    73ac:	2430      	movs	r4, #48	; 0x30
    73ae:	2b00      	cmp	r3, #0
    73b0:	d1b0      	bne.n	7314 <_strtol_l.isra.0+0x40>
    73b2:	2308      	movs	r3, #8
    73b4:	e7ae      	b.n	7314 <_strtol_l.isra.0+0x40>
    73b6:	2c30      	cmp	r4, #48	; 0x30
    73b8:	d0a4      	beq.n	7304 <_strtol_l.isra.0+0x30>
    73ba:	230a      	movs	r3, #10
    73bc:	e7aa      	b.n	7314 <_strtol_l.isra.0+0x40>
    73be:	bf00      	nop
    73c0:	0000ba05 	.word	0x0000ba05

000073c4 <_strtol_r>:
_strtol_r():
    73c4:	f7ff bf86 	b.w	72d4 <_strtol_l.isra.0>

000073c8 <strtol>:
strtol():
    73c8:	4613      	mov	r3, r2
    73ca:	460a      	mov	r2, r1
    73cc:	4601      	mov	r1, r0
    73ce:	4802      	ldr	r0, [pc, #8]	; (73d8 <strtol+0x10>)
    73d0:	6800      	ldr	r0, [r0, #0]
    73d2:	f7ff bf7f 	b.w	72d4 <_strtol_l.isra.0>
    73d6:	bf00      	nop
    73d8:	10000174 	.word	0x10000174

000073dc <_vsniprintf_r>:
_vsniprintf_r():
    73dc:	b530      	push	{r4, r5, lr}
    73de:	1e14      	subs	r4, r2, #0
    73e0:	4605      	mov	r5, r0
    73e2:	b09b      	sub	sp, #108	; 0x6c
    73e4:	4618      	mov	r0, r3
    73e6:	da05      	bge.n	73f4 <_vsniprintf_r+0x18>
    73e8:	238b      	movs	r3, #139	; 0x8b
    73ea:	602b      	str	r3, [r5, #0]
    73ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    73f0:	b01b      	add	sp, #108	; 0x6c
    73f2:	bd30      	pop	{r4, r5, pc}
    73f4:	f44f 7302 	mov.w	r3, #520	; 0x208
    73f8:	f8ad 300c 	strh.w	r3, [sp, #12]
    73fc:	bf14      	ite	ne
    73fe:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
    7402:	4623      	moveq	r3, r4
    7404:	9302      	str	r3, [sp, #8]
    7406:	9305      	str	r3, [sp, #20]
    7408:	f64f 73ff 	movw	r3, #65535	; 0xffff
    740c:	9100      	str	r1, [sp, #0]
    740e:	9104      	str	r1, [sp, #16]
    7410:	f8ad 300e 	strh.w	r3, [sp, #14]
    7414:	4602      	mov	r2, r0
    7416:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    7418:	4669      	mov	r1, sp
    741a:	4628      	mov	r0, r5
    741c:	f002 f9fc 	bl	9818 <_svfiprintf_r>
    7420:	1c43      	adds	r3, r0, #1
    7422:	bfbc      	itt	lt
    7424:	238b      	movlt	r3, #139	; 0x8b
    7426:	602b      	strlt	r3, [r5, #0]
    7428:	2c00      	cmp	r4, #0
    742a:	d0e1      	beq.n	73f0 <_vsniprintf_r+0x14>
    742c:	9b00      	ldr	r3, [sp, #0]
    742e:	2200      	movs	r2, #0
    7430:	701a      	strb	r2, [r3, #0]
    7432:	e7dd      	b.n	73f0 <_vsniprintf_r+0x14>

00007434 <vsniprintf>:
vsniprintf():
    7434:	b507      	push	{r0, r1, r2, lr}
    7436:	9300      	str	r3, [sp, #0]
    7438:	4613      	mov	r3, r2
    743a:	460a      	mov	r2, r1
    743c:	4601      	mov	r1, r0
    743e:	4803      	ldr	r0, [pc, #12]	; (744c <vsniprintf+0x18>)
    7440:	6800      	ldr	r0, [r0, #0]
    7442:	f7ff ffcb 	bl	73dc <_vsniprintf_r>
    7446:	b003      	add	sp, #12
    7448:	f85d fb04 	ldr.w	pc, [sp], #4
    744c:	10000174 	.word	0x10000174

00007450 <_vsiscanf_r>:
_vsscanf_r():
    7450:	b570      	push	{r4, r5, r6, lr}
    7452:	b09a      	sub	sp, #104	; 0x68
    7454:	4604      	mov	r4, r0
    7456:	461e      	mov	r6, r3
    7458:	4608      	mov	r0, r1
    745a:	f44f 7301 	mov.w	r3, #516	; 0x204
    745e:	4615      	mov	r5, r2
    7460:	f8ad 300c 	strh.w	r3, [sp, #12]
    7464:	9100      	str	r1, [sp, #0]
    7466:	9104      	str	r1, [sp, #16]
    7468:	f7ff f8df 	bl	662a <strlen>
    746c:	4b09      	ldr	r3, [pc, #36]	; (7494 <_vsiscanf_r+0x44>)
    746e:	9309      	str	r3, [sp, #36]	; 0x24
    7470:	2100      	movs	r1, #0
    7472:	f64f 73ff 	movw	r3, #65535	; 0xffff
    7476:	9001      	str	r0, [sp, #4]
    7478:	9005      	str	r0, [sp, #20]
    747a:	910d      	str	r1, [sp, #52]	; 0x34
    747c:	9112      	str	r1, [sp, #72]	; 0x48
    747e:	f8ad 300e 	strh.w	r3, [sp, #14]
    7482:	462a      	mov	r2, r5
    7484:	4633      	mov	r3, r6
    7486:	4669      	mov	r1, sp
    7488:	4620      	mov	r0, r4
    748a:	f002 fb17 	bl	9abc <__ssvfiscanf_r>
    748e:	b01a      	add	sp, #104	; 0x68
    7490:	bd70      	pop	{r4, r5, r6, pc}
    7492:	bf00      	nop
    7494:	0000a167 	.word	0x0000a167

00007498 <vsiscanf>:
vsiscanf():
    7498:	4613      	mov	r3, r2
    749a:	460a      	mov	r2, r1
    749c:	4601      	mov	r1, r0
    749e:	4802      	ldr	r0, [pc, #8]	; (74a8 <vsiscanf+0x10>)
    74a0:	6800      	ldr	r0, [r0, #0]
    74a2:	f7ff bfd5 	b.w	7450 <_vsiscanf_r>
    74a6:	bf00      	nop
    74a8:	10000174 	.word	0x10000174

000074ac <__swbuf_r>:
__swbuf_r():
    74ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    74ae:	460e      	mov	r6, r1
    74b0:	4614      	mov	r4, r2
    74b2:	4605      	mov	r5, r0
    74b4:	b118      	cbz	r0, 74be <__swbuf_r+0x12>
    74b6:	6983      	ldr	r3, [r0, #24]
    74b8:	b90b      	cbnz	r3, 74be <__swbuf_r+0x12>
    74ba:	f001 f827 	bl	850c <__sinit>
    74be:	4b21      	ldr	r3, [pc, #132]	; (7544 <__swbuf_r+0x98>)
    74c0:	429c      	cmp	r4, r3
    74c2:	d12b      	bne.n	751c <__swbuf_r+0x70>
    74c4:	686c      	ldr	r4, [r5, #4]
    74c6:	69a3      	ldr	r3, [r4, #24]
    74c8:	60a3      	str	r3, [r4, #8]
    74ca:	89a3      	ldrh	r3, [r4, #12]
    74cc:	071a      	lsls	r2, r3, #28
    74ce:	d52f      	bpl.n	7530 <__swbuf_r+0x84>
    74d0:	6923      	ldr	r3, [r4, #16]
    74d2:	b36b      	cbz	r3, 7530 <__swbuf_r+0x84>
    74d4:	6923      	ldr	r3, [r4, #16]
    74d6:	6820      	ldr	r0, [r4, #0]
    74d8:	1ac0      	subs	r0, r0, r3
    74da:	6963      	ldr	r3, [r4, #20]
    74dc:	b2f6      	uxtb	r6, r6
    74de:	4283      	cmp	r3, r0
    74e0:	4637      	mov	r7, r6
    74e2:	dc04      	bgt.n	74ee <__swbuf_r+0x42>
    74e4:	4621      	mov	r1, r4
    74e6:	4628      	mov	r0, r5
    74e8:	f000 ff6a 	bl	83c0 <_fflush_r>
    74ec:	bb30      	cbnz	r0, 753c <__swbuf_r+0x90>
    74ee:	68a3      	ldr	r3, [r4, #8]
    74f0:	3b01      	subs	r3, #1
    74f2:	60a3      	str	r3, [r4, #8]
    74f4:	6823      	ldr	r3, [r4, #0]
    74f6:	1c5a      	adds	r2, r3, #1
    74f8:	6022      	str	r2, [r4, #0]
    74fa:	701e      	strb	r6, [r3, #0]
    74fc:	6963      	ldr	r3, [r4, #20]
    74fe:	3001      	adds	r0, #1
    7500:	4283      	cmp	r3, r0
    7502:	d004      	beq.n	750e <__swbuf_r+0x62>
    7504:	89a3      	ldrh	r3, [r4, #12]
    7506:	07db      	lsls	r3, r3, #31
    7508:	d506      	bpl.n	7518 <__swbuf_r+0x6c>
    750a:	2e0a      	cmp	r6, #10
    750c:	d104      	bne.n	7518 <__swbuf_r+0x6c>
    750e:	4621      	mov	r1, r4
    7510:	4628      	mov	r0, r5
    7512:	f000 ff55 	bl	83c0 <_fflush_r>
    7516:	b988      	cbnz	r0, 753c <__swbuf_r+0x90>
    7518:	4638      	mov	r0, r7
    751a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    751c:	4b0a      	ldr	r3, [pc, #40]	; (7548 <__swbuf_r+0x9c>)
    751e:	429c      	cmp	r4, r3
    7520:	d101      	bne.n	7526 <__swbuf_r+0x7a>
    7522:	68ac      	ldr	r4, [r5, #8]
    7524:	e7cf      	b.n	74c6 <__swbuf_r+0x1a>
    7526:	4b09      	ldr	r3, [pc, #36]	; (754c <__swbuf_r+0xa0>)
    7528:	429c      	cmp	r4, r3
    752a:	bf08      	it	eq
    752c:	68ec      	ldreq	r4, [r5, #12]
    752e:	e7ca      	b.n	74c6 <__swbuf_r+0x1a>
    7530:	4621      	mov	r1, r4
    7532:	4628      	mov	r0, r5
    7534:	f000 f80c 	bl	7550 <__swsetup_r>
    7538:	2800      	cmp	r0, #0
    753a:	d0cb      	beq.n	74d4 <__swbuf_r+0x28>
    753c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    7540:	e7ea      	b.n	7518 <__swbuf_r+0x6c>
    7542:	bf00      	nop
    7544:	0000bbd8 	.word	0x0000bbd8
    7548:	0000bbf8 	.word	0x0000bbf8
    754c:	0000bbb8 	.word	0x0000bbb8

00007550 <__swsetup_r>:
__swsetup_r():
    7550:	4b32      	ldr	r3, [pc, #200]	; (761c <__swsetup_r+0xcc>)
    7552:	b570      	push	{r4, r5, r6, lr}
    7554:	681d      	ldr	r5, [r3, #0]
    7556:	4606      	mov	r6, r0
    7558:	460c      	mov	r4, r1
    755a:	b125      	cbz	r5, 7566 <__swsetup_r+0x16>
    755c:	69ab      	ldr	r3, [r5, #24]
    755e:	b913      	cbnz	r3, 7566 <__swsetup_r+0x16>
    7560:	4628      	mov	r0, r5
    7562:	f000 ffd3 	bl	850c <__sinit>
    7566:	4b2e      	ldr	r3, [pc, #184]	; (7620 <__swsetup_r+0xd0>)
    7568:	429c      	cmp	r4, r3
    756a:	d10f      	bne.n	758c <__swsetup_r+0x3c>
    756c:	686c      	ldr	r4, [r5, #4]
    756e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7572:	b29a      	uxth	r2, r3
    7574:	0715      	lsls	r5, r2, #28
    7576:	d42c      	bmi.n	75d2 <__swsetup_r+0x82>
    7578:	06d0      	lsls	r0, r2, #27
    757a:	d411      	bmi.n	75a0 <__swsetup_r+0x50>
    757c:	2209      	movs	r2, #9
    757e:	6032      	str	r2, [r6, #0]
    7580:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    7584:	81a3      	strh	r3, [r4, #12]
    7586:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    758a:	e03e      	b.n	760a <__swsetup_r+0xba>
    758c:	4b25      	ldr	r3, [pc, #148]	; (7624 <__swsetup_r+0xd4>)
    758e:	429c      	cmp	r4, r3
    7590:	d101      	bne.n	7596 <__swsetup_r+0x46>
    7592:	68ac      	ldr	r4, [r5, #8]
    7594:	e7eb      	b.n	756e <__swsetup_r+0x1e>
    7596:	4b24      	ldr	r3, [pc, #144]	; (7628 <__swsetup_r+0xd8>)
    7598:	429c      	cmp	r4, r3
    759a:	bf08      	it	eq
    759c:	68ec      	ldreq	r4, [r5, #12]
    759e:	e7e6      	b.n	756e <__swsetup_r+0x1e>
    75a0:	0751      	lsls	r1, r2, #29
    75a2:	d512      	bpl.n	75ca <__swsetup_r+0x7a>
    75a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
    75a6:	b141      	cbz	r1, 75ba <__swsetup_r+0x6a>
    75a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
    75ac:	4299      	cmp	r1, r3
    75ae:	d002      	beq.n	75b6 <__swsetup_r+0x66>
    75b0:	4630      	mov	r0, r6
    75b2:	f7fd fe59 	bl	5268 <_free_r>
    75b6:	2300      	movs	r3, #0
    75b8:	6363      	str	r3, [r4, #52]	; 0x34
    75ba:	89a3      	ldrh	r3, [r4, #12]
    75bc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    75c0:	81a3      	strh	r3, [r4, #12]
    75c2:	2300      	movs	r3, #0
    75c4:	6063      	str	r3, [r4, #4]
    75c6:	6923      	ldr	r3, [r4, #16]
    75c8:	6023      	str	r3, [r4, #0]
    75ca:	89a3      	ldrh	r3, [r4, #12]
    75cc:	f043 0308 	orr.w	r3, r3, #8
    75d0:	81a3      	strh	r3, [r4, #12]
    75d2:	6923      	ldr	r3, [r4, #16]
    75d4:	b94b      	cbnz	r3, 75ea <__swsetup_r+0x9a>
    75d6:	89a3      	ldrh	r3, [r4, #12]
    75d8:	f403 7320 	and.w	r3, r3, #640	; 0x280
    75dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    75e0:	d003      	beq.n	75ea <__swsetup_r+0x9a>
    75e2:	4621      	mov	r1, r4
    75e4:	4630      	mov	r0, r6
    75e6:	f001 fbdb 	bl	8da0 <__smakebuf_r>
    75ea:	89a2      	ldrh	r2, [r4, #12]
    75ec:	f012 0301 	ands.w	r3, r2, #1
    75f0:	d00c      	beq.n	760c <__swsetup_r+0xbc>
    75f2:	2300      	movs	r3, #0
    75f4:	60a3      	str	r3, [r4, #8]
    75f6:	6963      	ldr	r3, [r4, #20]
    75f8:	425b      	negs	r3, r3
    75fa:	61a3      	str	r3, [r4, #24]
    75fc:	6923      	ldr	r3, [r4, #16]
    75fe:	b953      	cbnz	r3, 7616 <__swsetup_r+0xc6>
    7600:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7604:	f013 0080 	ands.w	r0, r3, #128	; 0x80
    7608:	d1ba      	bne.n	7580 <__swsetup_r+0x30>
    760a:	bd70      	pop	{r4, r5, r6, pc}
    760c:	0792      	lsls	r2, r2, #30
    760e:	bf58      	it	pl
    7610:	6963      	ldrpl	r3, [r4, #20]
    7612:	60a3      	str	r3, [r4, #8]
    7614:	e7f2      	b.n	75fc <__swsetup_r+0xac>
    7616:	2000      	movs	r0, #0
    7618:	e7f7      	b.n	760a <__swsetup_r+0xba>
    761a:	bf00      	nop
    761c:	10000174 	.word	0x10000174
    7620:	0000bbd8 	.word	0x0000bbd8
    7624:	0000bbf8 	.word	0x0000bbf8
    7628:	0000bbb8 	.word	0x0000bbb8

0000762c <quorem>:
quorem():
    762c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7630:	6903      	ldr	r3, [r0, #16]
    7632:	690c      	ldr	r4, [r1, #16]
    7634:	42a3      	cmp	r3, r4
    7636:	4680      	mov	r8, r0
    7638:	db7f      	blt.n	773a <quorem+0x10e>
    763a:	3c01      	subs	r4, #1
    763c:	f101 0714 	add.w	r7, r1, #20
    7640:	00a0      	lsls	r0, r4, #2
    7642:	f108 0514 	add.w	r5, r8, #20
    7646:	182b      	adds	r3, r5, r0
    7648:	9301      	str	r3, [sp, #4]
    764a:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
    764e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    7652:	3301      	adds	r3, #1
    7654:	429a      	cmp	r2, r3
    7656:	eb07 0900 	add.w	r9, r7, r0
    765a:	fbb2 f6f3 	udiv	r6, r2, r3
    765e:	d331      	bcc.n	76c4 <quorem+0x98>
    7660:	f04f 0a00 	mov.w	sl, #0
    7664:	46bc      	mov	ip, r7
    7666:	46ae      	mov	lr, r5
    7668:	46d3      	mov	fp, sl
    766a:	f85c 2b04 	ldr.w	r2, [ip], #4
    766e:	b293      	uxth	r3, r2
    7670:	fb06 a303 	mla	r3, r6, r3, sl
    7674:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    7678:	b29b      	uxth	r3, r3
    767a:	ebab 0303 	sub.w	r3, fp, r3
    767e:	0c12      	lsrs	r2, r2, #16
    7680:	f8de b000 	ldr.w	fp, [lr]
    7684:	fb06 a202 	mla	r2, r6, r2, sl
    7688:	fa13 f38b 	uxtah	r3, r3, fp
    768c:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    7690:	fa1f fb82 	uxth.w	fp, r2
    7694:	f8de 2000 	ldr.w	r2, [lr]
    7698:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    769c:	eb02 4223 	add.w	r2, r2, r3, asr #16
    76a0:	b29b      	uxth	r3, r3
    76a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    76a6:	45e1      	cmp	r9, ip
    76a8:	ea4f 4b22 	mov.w	fp, r2, asr #16
    76ac:	f84e 3b04 	str.w	r3, [lr], #4
    76b0:	d2db      	bcs.n	766a <quorem+0x3e>
    76b2:	582b      	ldr	r3, [r5, r0]
    76b4:	b933      	cbnz	r3, 76c4 <quorem+0x98>
    76b6:	9b01      	ldr	r3, [sp, #4]
    76b8:	3b04      	subs	r3, #4
    76ba:	429d      	cmp	r5, r3
    76bc:	461a      	mov	r2, r3
    76be:	d330      	bcc.n	7722 <quorem+0xf6>
    76c0:	f8c8 4010 	str.w	r4, [r8, #16]
    76c4:	4640      	mov	r0, r8
    76c6:	f001 fe6e 	bl	93a6 <__mcmp>
    76ca:	2800      	cmp	r0, #0
    76cc:	db25      	blt.n	771a <quorem+0xee>
    76ce:	3601      	adds	r6, #1
    76d0:	4628      	mov	r0, r5
    76d2:	f04f 0c00 	mov.w	ip, #0
    76d6:	f857 2b04 	ldr.w	r2, [r7], #4
    76da:	f8d0 e000 	ldr.w	lr, [r0]
    76de:	b293      	uxth	r3, r2
    76e0:	ebac 0303 	sub.w	r3, ip, r3
    76e4:	0c12      	lsrs	r2, r2, #16
    76e6:	fa13 f38e 	uxtah	r3, r3, lr
    76ea:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    76ee:	eb02 4223 	add.w	r2, r2, r3, asr #16
    76f2:	b29b      	uxth	r3, r3
    76f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    76f8:	45b9      	cmp	r9, r7
    76fa:	ea4f 4c22 	mov.w	ip, r2, asr #16
    76fe:	f840 3b04 	str.w	r3, [r0], #4
    7702:	d2e8      	bcs.n	76d6 <quorem+0xaa>
    7704:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    7708:	eb05 0384 	add.w	r3, r5, r4, lsl #2
    770c:	b92a      	cbnz	r2, 771a <quorem+0xee>
    770e:	3b04      	subs	r3, #4
    7710:	429d      	cmp	r5, r3
    7712:	461a      	mov	r2, r3
    7714:	d30b      	bcc.n	772e <quorem+0x102>
    7716:	f8c8 4010 	str.w	r4, [r8, #16]
    771a:	4630      	mov	r0, r6
    771c:	b003      	add	sp, #12
    771e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7722:	6812      	ldr	r2, [r2, #0]
    7724:	3b04      	subs	r3, #4
    7726:	2a00      	cmp	r2, #0
    7728:	d1ca      	bne.n	76c0 <quorem+0x94>
    772a:	3c01      	subs	r4, #1
    772c:	e7c5      	b.n	76ba <quorem+0x8e>
    772e:	6812      	ldr	r2, [r2, #0]
    7730:	3b04      	subs	r3, #4
    7732:	2a00      	cmp	r2, #0
    7734:	d1ef      	bne.n	7716 <quorem+0xea>
    7736:	3c01      	subs	r4, #1
    7738:	e7ea      	b.n	7710 <quorem+0xe4>
    773a:	2000      	movs	r0, #0
    773c:	e7ee      	b.n	771c <quorem+0xf0>
    773e:	Address 0x000000000000773e is out of bounds.


00007740 <_dtoa_r>:
_dtoa_r():
    7740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7744:	ec55 4b10 	vmov	r4, r5, d0
    7748:	b099      	sub	sp, #100	; 0x64
    774a:	6a47      	ldr	r7, [r0, #36]	; 0x24
    774c:	9108      	str	r1, [sp, #32]
    774e:	4683      	mov	fp, r0
    7750:	920d      	str	r2, [sp, #52]	; 0x34
    7752:	9314      	str	r3, [sp, #80]	; 0x50
    7754:	9e22      	ldr	r6, [sp, #136]	; 0x88
    7756:	e9cd 4500 	strd	r4, r5, [sp]
    775a:	b947      	cbnz	r7, 776e <_dtoa_r+0x2e>
    775c:	2010      	movs	r0, #16
    775e:	f7fd fd43 	bl	51e8 <malloc>
    7762:	e9c0 7701 	strd	r7, r7, [r0, #4]
    7766:	f8cb 0024 	str.w	r0, [fp, #36]	; 0x24
    776a:	6007      	str	r7, [r0, #0]
    776c:	60c7      	str	r7, [r0, #12]
    776e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7772:	6819      	ldr	r1, [r3, #0]
    7774:	b159      	cbz	r1, 778e <_dtoa_r+0x4e>
    7776:	685a      	ldr	r2, [r3, #4]
    7778:	604a      	str	r2, [r1, #4]
    777a:	2301      	movs	r3, #1
    777c:	4093      	lsls	r3, r2
    777e:	608b      	str	r3, [r1, #8]
    7780:	4658      	mov	r0, fp
    7782:	f001 fbf5 	bl	8f70 <_Bfree>
    7786:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    778a:	2200      	movs	r2, #0
    778c:	601a      	str	r2, [r3, #0]
    778e:	1e2b      	subs	r3, r5, #0
    7790:	bfb9      	ittee	lt
    7792:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    7796:	9301      	strlt	r3, [sp, #4]
    7798:	2300      	movge	r3, #0
    779a:	6033      	strge	r3, [r6, #0]
    779c:	9c01      	ldr	r4, [sp, #4]
    779e:	4bb2      	ldr	r3, [pc, #712]	; (7a68 <_dtoa_r+0x328>)
    77a0:	bfbc      	itt	lt
    77a2:	2201      	movlt	r2, #1
    77a4:	6032      	strlt	r2, [r6, #0]
    77a6:	43a3      	bics	r3, r4
    77a8:	d11a      	bne.n	77e0 <_dtoa_r+0xa0>
    77aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
    77ac:	f242 730f 	movw	r3, #9999	; 0x270f
    77b0:	6013      	str	r3, [r2, #0]
    77b2:	9a00      	ldr	r2, [sp, #0]
    77b4:	f3c4 0313 	ubfx	r3, r4, #0, #20
    77b8:	4313      	orrs	r3, r2
    77ba:	f000 8552 	beq.w	8262 <_dtoa_r+0xb22>
    77be:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    77c0:	b953      	cbnz	r3, 77d8 <_dtoa_r+0x98>
    77c2:	4baa      	ldr	r3, [pc, #680]	; (7a6c <_dtoa_r+0x32c>)
    77c4:	e023      	b.n	780e <_dtoa_r+0xce>
    77c6:	4baa      	ldr	r3, [pc, #680]	; (7a70 <_dtoa_r+0x330>)
    77c8:	9303      	str	r3, [sp, #12]
    77ca:	3308      	adds	r3, #8
    77cc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    77ce:	6013      	str	r3, [r2, #0]
    77d0:	9803      	ldr	r0, [sp, #12]
    77d2:	b019      	add	sp, #100	; 0x64
    77d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    77d8:	4ba4      	ldr	r3, [pc, #656]	; (7a6c <_dtoa_r+0x32c>)
    77da:	9303      	str	r3, [sp, #12]
    77dc:	3303      	adds	r3, #3
    77de:	e7f5      	b.n	77cc <_dtoa_r+0x8c>
    77e0:	ed9d 7b00 	vldr	d7, [sp]
    77e4:	2200      	movs	r2, #0
    77e6:	2300      	movs	r3, #0
    77e8:	ec51 0b17 	vmov	r0, r1, d7
    77ec:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
    77f0:	f002 ff0a 	bl	a608 <__aeabi_dcmpeq>
    77f4:	4607      	mov	r7, r0
    77f6:	b160      	cbz	r0, 7812 <_dtoa_r+0xd2>
    77f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
    77fa:	2301      	movs	r3, #1
    77fc:	6013      	str	r3, [r2, #0]
    77fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7800:	2b00      	cmp	r3, #0
    7802:	f000 852b 	beq.w	825c <_dtoa_r+0xb1c>
    7806:	4b9b      	ldr	r3, [pc, #620]	; (7a74 <_dtoa_r+0x334>)
    7808:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    780a:	6013      	str	r3, [r2, #0]
    780c:	3b01      	subs	r3, #1
    780e:	9303      	str	r3, [sp, #12]
    7810:	e7de      	b.n	77d0 <_dtoa_r+0x90>
    7812:	aa16      	add	r2, sp, #88	; 0x58
    7814:	a917      	add	r1, sp, #92	; 0x5c
    7816:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
    781a:	4658      	mov	r0, fp
    781c:	f001 feb0 	bl	9580 <__d2b>
    7820:	f3c4 560a 	ubfx	r6, r4, #20, #11
    7824:	4680      	mov	r8, r0
    7826:	2e00      	cmp	r6, #0
    7828:	d07f      	beq.n	792a <_dtoa_r+0x1ea>
    782a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    782c:	9715      	str	r7, [sp, #84]	; 0x54
    782e:	f3c3 0313 	ubfx	r3, r3, #0, #20
    7832:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
    7836:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
    783a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    783e:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
    7842:	2200      	movs	r2, #0
    7844:	4b8c      	ldr	r3, [pc, #560]	; (7a78 <_dtoa_r+0x338>)
    7846:	4620      	mov	r0, r4
    7848:	4629      	mov	r1, r5
    784a:	f7fc fec7 	bl	45dc <__aeabi_dsub>
    784e:	a380      	add	r3, pc, #512	; (adr r3, 7a50 <_dtoa_r+0x310>)
    7850:	e9d3 2300 	ldrd	r2, r3, [r3]
    7854:	f7fd f87a 	bl	494c <__aeabi_dmul>
    7858:	a37f      	add	r3, pc, #508	; (adr r3, 7a58 <_dtoa_r+0x318>)
    785a:	e9d3 2300 	ldrd	r2, r3, [r3]
    785e:	f7fc febf 	bl	45e0 <__adddf3>
    7862:	4604      	mov	r4, r0
    7864:	4630      	mov	r0, r6
    7866:	460d      	mov	r5, r1
    7868:	f7fd f806 	bl	4878 <__aeabi_i2d>
    786c:	a37c      	add	r3, pc, #496	; (adr r3, 7a60 <_dtoa_r+0x320>)
    786e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7872:	f7fd f86b 	bl	494c <__aeabi_dmul>
    7876:	4602      	mov	r2, r0
    7878:	460b      	mov	r3, r1
    787a:	4620      	mov	r0, r4
    787c:	4629      	mov	r1, r5
    787e:	f7fc feaf 	bl	45e0 <__adddf3>
    7882:	4604      	mov	r4, r0
    7884:	460d      	mov	r5, r1
    7886:	f002 ff07 	bl	a698 <__aeabi_d2iz>
    788a:	2200      	movs	r2, #0
    788c:	4682      	mov	sl, r0
    788e:	2300      	movs	r3, #0
    7890:	4620      	mov	r0, r4
    7892:	4629      	mov	r1, r5
    7894:	f002 fec2 	bl	a61c <__aeabi_dcmplt>
    7898:	b148      	cbz	r0, 78ae <_dtoa_r+0x16e>
    789a:	4650      	mov	r0, sl
    789c:	f7fc ffec 	bl	4878 <__aeabi_i2d>
    78a0:	4622      	mov	r2, r4
    78a2:	462b      	mov	r3, r5
    78a4:	f002 feb0 	bl	a608 <__aeabi_dcmpeq>
    78a8:	b908      	cbnz	r0, 78ae <_dtoa_r+0x16e>
    78aa:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    78ae:	f1ba 0f16 	cmp.w	sl, #22
    78b2:	d859      	bhi.n	7968 <_dtoa_r+0x228>
    78b4:	4b71      	ldr	r3, [pc, #452]	; (7a7c <_dtoa_r+0x33c>)
    78b6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    78ba:	e9d3 2300 	ldrd	r2, r3, [r3]
    78be:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    78c2:	f002 feab 	bl	a61c <__aeabi_dcmplt>
    78c6:	2800      	cmp	r0, #0
    78c8:	d050      	beq.n	796c <_dtoa_r+0x22c>
    78ca:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    78ce:	2300      	movs	r3, #0
    78d0:	9311      	str	r3, [sp, #68]	; 0x44
    78d2:	9b16      	ldr	r3, [sp, #88]	; 0x58
    78d4:	1b9e      	subs	r6, r3, r6
    78d6:	1e73      	subs	r3, r6, #1
    78d8:	9307      	str	r3, [sp, #28]
    78da:	bf45      	ittet	mi
    78dc:	f1c6 0301 	rsbmi	r3, r6, #1
    78e0:	9306      	strmi	r3, [sp, #24]
    78e2:	2300      	movpl	r3, #0
    78e4:	2300      	movmi	r3, #0
    78e6:	bf4c      	ite	mi
    78e8:	9307      	strmi	r3, [sp, #28]
    78ea:	9306      	strpl	r3, [sp, #24]
    78ec:	f1ba 0f00 	cmp.w	sl, #0
    78f0:	db3e      	blt.n	7970 <_dtoa_r+0x230>
    78f2:	9b07      	ldr	r3, [sp, #28]
    78f4:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    78f8:	4453      	add	r3, sl
    78fa:	9307      	str	r3, [sp, #28]
    78fc:	2300      	movs	r3, #0
    78fe:	9309      	str	r3, [sp, #36]	; 0x24
    7900:	9b08      	ldr	r3, [sp, #32]
    7902:	2b09      	cmp	r3, #9
    7904:	f200 808f 	bhi.w	7a26 <_dtoa_r+0x2e6>
    7908:	2b05      	cmp	r3, #5
    790a:	bfc4      	itt	gt
    790c:	3b04      	subgt	r3, #4
    790e:	9308      	strgt	r3, [sp, #32]
    7910:	9b08      	ldr	r3, [sp, #32]
    7912:	f1a3 0302 	sub.w	r3, r3, #2
    7916:	bfcc      	ite	gt
    7918:	2400      	movgt	r4, #0
    791a:	2401      	movle	r4, #1
    791c:	2b03      	cmp	r3, #3
    791e:	f200 808d 	bhi.w	7a3c <_dtoa_r+0x2fc>
    7922:	e8df f003 	tbb	[pc, r3]
    7926:	3c2f      	.short	0x3c2f
    7928:	7e3a      	.short	0x7e3a
    792a:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	; 0x58
    792e:	441e      	add	r6, r3
    7930:	f206 4032 	addw	r0, r6, #1074	; 0x432
    7934:	2820      	cmp	r0, #32
    7936:	dd11      	ble.n	795c <_dtoa_r+0x21c>
    7938:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    793c:	9b00      	ldr	r3, [sp, #0]
    793e:	4084      	lsls	r4, r0
    7940:	f206 4012 	addw	r0, r6, #1042	; 0x412
    7944:	fa23 f000 	lsr.w	r0, r3, r0
    7948:	4320      	orrs	r0, r4
    794a:	f7fc ff85 	bl	4858 <__aeabi_ui2d>
    794e:	2301      	movs	r3, #1
    7950:	4604      	mov	r4, r0
    7952:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
    7956:	3e01      	subs	r6, #1
    7958:	9315      	str	r3, [sp, #84]	; 0x54
    795a:	e772      	b.n	7842 <_dtoa_r+0x102>
    795c:	9b00      	ldr	r3, [sp, #0]
    795e:	f1c0 0020 	rsb	r0, r0, #32
    7962:	fa03 f000 	lsl.w	r0, r3, r0
    7966:	e7f0      	b.n	794a <_dtoa_r+0x20a>
    7968:	2301      	movs	r3, #1
    796a:	e7b1      	b.n	78d0 <_dtoa_r+0x190>
    796c:	9011      	str	r0, [sp, #68]	; 0x44
    796e:	e7b0      	b.n	78d2 <_dtoa_r+0x192>
    7970:	9b06      	ldr	r3, [sp, #24]
    7972:	eba3 030a 	sub.w	r3, r3, sl
    7976:	9306      	str	r3, [sp, #24]
    7978:	f1ca 0300 	rsb	r3, sl, #0
    797c:	9309      	str	r3, [sp, #36]	; 0x24
    797e:	2300      	movs	r3, #0
    7980:	9310      	str	r3, [sp, #64]	; 0x40
    7982:	e7bd      	b.n	7900 <_dtoa_r+0x1c0>
    7984:	2300      	movs	r3, #0
    7986:	930c      	str	r3, [sp, #48]	; 0x30
    7988:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    798a:	2b00      	cmp	r3, #0
    798c:	dc59      	bgt.n	7a42 <_dtoa_r+0x302>
    798e:	2301      	movs	r3, #1
    7990:	9304      	str	r3, [sp, #16]
    7992:	4699      	mov	r9, r3
    7994:	461a      	mov	r2, r3
    7996:	920d      	str	r2, [sp, #52]	; 0x34
    7998:	e00c      	b.n	79b4 <_dtoa_r+0x274>
    799a:	2301      	movs	r3, #1
    799c:	e7f3      	b.n	7986 <_dtoa_r+0x246>
    799e:	2300      	movs	r3, #0
    79a0:	930c      	str	r3, [sp, #48]	; 0x30
    79a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    79a4:	4453      	add	r3, sl
    79a6:	f103 0901 	add.w	r9, r3, #1
    79aa:	9304      	str	r3, [sp, #16]
    79ac:	464b      	mov	r3, r9
    79ae:	2b01      	cmp	r3, #1
    79b0:	bfb8      	it	lt
    79b2:	2301      	movlt	r3, #1
    79b4:	f8db 5024 	ldr.w	r5, [fp, #36]	; 0x24
    79b8:	2200      	movs	r2, #0
    79ba:	606a      	str	r2, [r5, #4]
    79bc:	2204      	movs	r2, #4
    79be:	f102 0014 	add.w	r0, r2, #20
    79c2:	4298      	cmp	r0, r3
    79c4:	6869      	ldr	r1, [r5, #4]
    79c6:	d95d      	bls.n	7a84 <_dtoa_r+0x344>
    79c8:	4658      	mov	r0, fp
    79ca:	f001 fa9d 	bl	8f08 <_Balloc>
    79ce:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    79d2:	6028      	str	r0, [r5, #0]
    79d4:	681b      	ldr	r3, [r3, #0]
    79d6:	9303      	str	r3, [sp, #12]
    79d8:	f1b9 0f0e 	cmp.w	r9, #14
    79dc:	f200 80d7 	bhi.w	7b8e <_dtoa_r+0x44e>
    79e0:	2c00      	cmp	r4, #0
    79e2:	f000 80d4 	beq.w	7b8e <_dtoa_r+0x44e>
    79e6:	f1ba 0f00 	cmp.w	sl, #0
    79ea:	dd69      	ble.n	7ac0 <_dtoa_r+0x380>
    79ec:	4a23      	ldr	r2, [pc, #140]	; (7a7c <_dtoa_r+0x33c>)
    79ee:	f00a 030f 	and.w	r3, sl, #15
    79f2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    79f6:	ed93 7b00 	vldr	d7, [r3]
    79fa:	ea4f 142a 	mov.w	r4, sl, asr #4
    79fe:	06e2      	lsls	r2, r4, #27
    7a00:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
    7a04:	d55a      	bpl.n	7abc <_dtoa_r+0x37c>
    7a06:	4b1e      	ldr	r3, [pc, #120]	; (7a80 <_dtoa_r+0x340>)
    7a08:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7a0c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    7a10:	f7fd f8c6 	bl	4ba0 <__aeabi_ddiv>
    7a14:	e9cd 0100 	strd	r0, r1, [sp]
    7a18:	f004 040f 	and.w	r4, r4, #15
    7a1c:	2603      	movs	r6, #3
    7a1e:	4d18      	ldr	r5, [pc, #96]	; (7a80 <_dtoa_r+0x340>)
    7a20:	e041      	b.n	7aa6 <_dtoa_r+0x366>
    7a22:	2301      	movs	r3, #1
    7a24:	e7bc      	b.n	79a0 <_dtoa_r+0x260>
    7a26:	2401      	movs	r4, #1
    7a28:	2300      	movs	r3, #0
    7a2a:	9308      	str	r3, [sp, #32]
    7a2c:	940c      	str	r4, [sp, #48]	; 0x30
    7a2e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    7a32:	9304      	str	r3, [sp, #16]
    7a34:	4699      	mov	r9, r3
    7a36:	2200      	movs	r2, #0
    7a38:	2312      	movs	r3, #18
    7a3a:	e7ac      	b.n	7996 <_dtoa_r+0x256>
    7a3c:	2301      	movs	r3, #1
    7a3e:	930c      	str	r3, [sp, #48]	; 0x30
    7a40:	e7f5      	b.n	7a2e <_dtoa_r+0x2ee>
    7a42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7a44:	9304      	str	r3, [sp, #16]
    7a46:	4699      	mov	r9, r3
    7a48:	e7b4      	b.n	79b4 <_dtoa_r+0x274>
    7a4a:	bf00      	nop
    7a4c:	f3af 8000 	nop.w
    7a50:	636f4361 	.word	0x636f4361
    7a54:	3fd287a7 	.word	0x3fd287a7
    7a58:	8b60c8b3 	.word	0x8b60c8b3
    7a5c:	3fc68a28 	.word	0x3fc68a28
    7a60:	509f79fb 	.word	0x509f79fb
    7a64:	3fd34413 	.word	0x3fd34413
    7a68:	7ff00000 	.word	0x7ff00000
    7a6c:	0000bbb1 	.word	0x0000bbb1
    7a70:	0000bba8 	.word	0x0000bba8
    7a74:	0000b4cd 	.word	0x0000b4cd
    7a78:	3ff80000 	.word	0x3ff80000
    7a7c:	0000bc58 	.word	0x0000bc58
    7a80:	0000bc30 	.word	0x0000bc30
    7a84:	3101      	adds	r1, #1
    7a86:	6069      	str	r1, [r5, #4]
    7a88:	0052      	lsls	r2, r2, #1
    7a8a:	e798      	b.n	79be <_dtoa_r+0x27e>
    7a8c:	07e3      	lsls	r3, r4, #31
    7a8e:	d508      	bpl.n	7aa2 <_dtoa_r+0x362>
    7a90:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    7a94:	e9d5 2300 	ldrd	r2, r3, [r5]
    7a98:	f7fc ff58 	bl	494c <__aeabi_dmul>
    7a9c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    7aa0:	3601      	adds	r6, #1
    7aa2:	1064      	asrs	r4, r4, #1
    7aa4:	3508      	adds	r5, #8
    7aa6:	2c00      	cmp	r4, #0
    7aa8:	d1f0      	bne.n	7a8c <_dtoa_r+0x34c>
    7aaa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7aae:	e9dd 0100 	ldrd	r0, r1, [sp]
    7ab2:	f7fd f875 	bl	4ba0 <__aeabi_ddiv>
    7ab6:	e9cd 0100 	strd	r0, r1, [sp]
    7aba:	e01a      	b.n	7af2 <_dtoa_r+0x3b2>
    7abc:	2602      	movs	r6, #2
    7abe:	e7ae      	b.n	7a1e <_dtoa_r+0x2de>
    7ac0:	f000 809f 	beq.w	7c02 <_dtoa_r+0x4c2>
    7ac4:	f1ca 0400 	rsb	r4, sl, #0
    7ac8:	4b9f      	ldr	r3, [pc, #636]	; (7d48 <_dtoa_r+0x608>)
    7aca:	4da0      	ldr	r5, [pc, #640]	; (7d4c <_dtoa_r+0x60c>)
    7acc:	f004 020f 	and.w	r2, r4, #15
    7ad0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    7ad4:	e9d3 2300 	ldrd	r2, r3, [r3]
    7ad8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7adc:	f7fc ff36 	bl	494c <__aeabi_dmul>
    7ae0:	e9cd 0100 	strd	r0, r1, [sp]
    7ae4:	1124      	asrs	r4, r4, #4
    7ae6:	2300      	movs	r3, #0
    7ae8:	2602      	movs	r6, #2
    7aea:	2c00      	cmp	r4, #0
    7aec:	d17e      	bne.n	7bec <_dtoa_r+0x4ac>
    7aee:	2b00      	cmp	r3, #0
    7af0:	d1e1      	bne.n	7ab6 <_dtoa_r+0x376>
    7af2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7af4:	2b00      	cmp	r3, #0
    7af6:	f000 8086 	beq.w	7c06 <_dtoa_r+0x4c6>
    7afa:	e9dd 4500 	ldrd	r4, r5, [sp]
    7afe:	2200      	movs	r2, #0
    7b00:	4b93      	ldr	r3, [pc, #588]	; (7d50 <_dtoa_r+0x610>)
    7b02:	4620      	mov	r0, r4
    7b04:	4629      	mov	r1, r5
    7b06:	f002 fd89 	bl	a61c <__aeabi_dcmplt>
    7b0a:	2800      	cmp	r0, #0
    7b0c:	d07b      	beq.n	7c06 <_dtoa_r+0x4c6>
    7b0e:	f1b9 0f00 	cmp.w	r9, #0
    7b12:	d078      	beq.n	7c06 <_dtoa_r+0x4c6>
    7b14:	9b04      	ldr	r3, [sp, #16]
    7b16:	2b00      	cmp	r3, #0
    7b18:	dd35      	ble.n	7b86 <_dtoa_r+0x446>
    7b1a:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
    7b1e:	930a      	str	r3, [sp, #40]	; 0x28
    7b20:	4620      	mov	r0, r4
    7b22:	2200      	movs	r2, #0
    7b24:	4b8b      	ldr	r3, [pc, #556]	; (7d54 <_dtoa_r+0x614>)
    7b26:	4629      	mov	r1, r5
    7b28:	f7fc ff10 	bl	494c <__aeabi_dmul>
    7b2c:	e9cd 0100 	strd	r0, r1, [sp]
    7b30:	9c04      	ldr	r4, [sp, #16]
    7b32:	3601      	adds	r6, #1
    7b34:	4630      	mov	r0, r6
    7b36:	f7fc fe9f 	bl	4878 <__aeabi_i2d>
    7b3a:	e9dd 2300 	ldrd	r2, r3, [sp]
    7b3e:	f7fc ff05 	bl	494c <__aeabi_dmul>
    7b42:	2200      	movs	r2, #0
    7b44:	4b84      	ldr	r3, [pc, #528]	; (7d58 <_dtoa_r+0x618>)
    7b46:	f7fc fd4b 	bl	45e0 <__adddf3>
    7b4a:	4606      	mov	r6, r0
    7b4c:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
    7b50:	2c00      	cmp	r4, #0
    7b52:	d15c      	bne.n	7c0e <_dtoa_r+0x4ce>
    7b54:	2200      	movs	r2, #0
    7b56:	4b81      	ldr	r3, [pc, #516]	; (7d5c <_dtoa_r+0x61c>)
    7b58:	e9dd 0100 	ldrd	r0, r1, [sp]
    7b5c:	f7fc fd3e 	bl	45dc <__aeabi_dsub>
    7b60:	4632      	mov	r2, r6
    7b62:	463b      	mov	r3, r7
    7b64:	e9cd 0100 	strd	r0, r1, [sp]
    7b68:	f002 fd76 	bl	a658 <__aeabi_dcmpgt>
    7b6c:	2800      	cmp	r0, #0
    7b6e:	f040 828c 	bne.w	808a <_dtoa_r+0x94a>
    7b72:	4632      	mov	r2, r6
    7b74:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    7b78:	e9dd 0100 	ldrd	r0, r1, [sp]
    7b7c:	f002 fd4e 	bl	a61c <__aeabi_dcmplt>
    7b80:	2800      	cmp	r0, #0
    7b82:	f040 8280 	bne.w	8086 <_dtoa_r+0x946>
    7b86:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
    7b8a:	e9cd 3400 	strd	r3, r4, [sp]
    7b8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7b90:	2b00      	cmp	r3, #0
    7b92:	f2c0 814f 	blt.w	7e34 <_dtoa_r+0x6f4>
    7b96:	f1ba 0f0e 	cmp.w	sl, #14
    7b9a:	f300 814b 	bgt.w	7e34 <_dtoa_r+0x6f4>
    7b9e:	4b6a      	ldr	r3, [pc, #424]	; (7d48 <_dtoa_r+0x608>)
    7ba0:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    7ba4:	ed93 7b00 	vldr	d7, [r3]
    7ba8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7baa:	2b00      	cmp	r3, #0
    7bac:	ed8d 7b04 	vstr	d7, [sp, #16]
    7bb0:	f280 80d8 	bge.w	7d64 <_dtoa_r+0x624>
    7bb4:	f1b9 0f00 	cmp.w	r9, #0
    7bb8:	f300 80d4 	bgt.w	7d64 <_dtoa_r+0x624>
    7bbc:	f040 8262 	bne.w	8084 <_dtoa_r+0x944>
    7bc0:	2200      	movs	r2, #0
    7bc2:	4b66      	ldr	r3, [pc, #408]	; (7d5c <_dtoa_r+0x61c>)
    7bc4:	ec51 0b17 	vmov	r0, r1, d7
    7bc8:	f7fc fec0 	bl	494c <__aeabi_dmul>
    7bcc:	e9dd 2300 	ldrd	r2, r3, [sp]
    7bd0:	f002 fd38 	bl	a644 <__aeabi_dcmpge>
    7bd4:	464c      	mov	r4, r9
    7bd6:	464e      	mov	r6, r9
    7bd8:	2800      	cmp	r0, #0
    7bda:	f040 823b 	bne.w	8054 <_dtoa_r+0x914>
    7bde:	9d03      	ldr	r5, [sp, #12]
    7be0:	2331      	movs	r3, #49	; 0x31
    7be2:	f805 3b01 	strb.w	r3, [r5], #1
    7be6:	f10a 0a01 	add.w	sl, sl, #1
    7bea:	e237      	b.n	805c <_dtoa_r+0x91c>
    7bec:	07e7      	lsls	r7, r4, #31
    7bee:	d505      	bpl.n	7bfc <_dtoa_r+0x4bc>
    7bf0:	e9d5 2300 	ldrd	r2, r3, [r5]
    7bf4:	f7fc feaa 	bl	494c <__aeabi_dmul>
    7bf8:	3601      	adds	r6, #1
    7bfa:	2301      	movs	r3, #1
    7bfc:	1064      	asrs	r4, r4, #1
    7bfe:	3508      	adds	r5, #8
    7c00:	e773      	b.n	7aea <_dtoa_r+0x3aa>
    7c02:	2602      	movs	r6, #2
    7c04:	e775      	b.n	7af2 <_dtoa_r+0x3b2>
    7c06:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    7c0a:	464c      	mov	r4, r9
    7c0c:	e792      	b.n	7b34 <_dtoa_r+0x3f4>
    7c0e:	4b4e      	ldr	r3, [pc, #312]	; (7d48 <_dtoa_r+0x608>)
    7c10:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    7c14:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    7c18:	9b03      	ldr	r3, [sp, #12]
    7c1a:	441c      	add	r4, r3
    7c1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7c1e:	2b00      	cmp	r3, #0
    7c20:	d046      	beq.n	7cb0 <_dtoa_r+0x570>
    7c22:	4602      	mov	r2, r0
    7c24:	460b      	mov	r3, r1
    7c26:	2000      	movs	r0, #0
    7c28:	494d      	ldr	r1, [pc, #308]	; (7d60 <_dtoa_r+0x620>)
    7c2a:	f7fc ffb9 	bl	4ba0 <__aeabi_ddiv>
    7c2e:	4632      	mov	r2, r6
    7c30:	463b      	mov	r3, r7
    7c32:	f7fc fcd3 	bl	45dc <__aeabi_dsub>
    7c36:	9d03      	ldr	r5, [sp, #12]
    7c38:	4606      	mov	r6, r0
    7c3a:	460f      	mov	r7, r1
    7c3c:	e9dd 0100 	ldrd	r0, r1, [sp]
    7c40:	f002 fd2a 	bl	a698 <__aeabi_d2iz>
    7c44:	9012      	str	r0, [sp, #72]	; 0x48
    7c46:	f7fc fe17 	bl	4878 <__aeabi_i2d>
    7c4a:	4602      	mov	r2, r0
    7c4c:	460b      	mov	r3, r1
    7c4e:	e9dd 0100 	ldrd	r0, r1, [sp]
    7c52:	f7fc fcc3 	bl	45dc <__aeabi_dsub>
    7c56:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7c58:	3330      	adds	r3, #48	; 0x30
    7c5a:	f805 3b01 	strb.w	r3, [r5], #1
    7c5e:	4632      	mov	r2, r6
    7c60:	463b      	mov	r3, r7
    7c62:	e9cd 0100 	strd	r0, r1, [sp]
    7c66:	f002 fcd9 	bl	a61c <__aeabi_dcmplt>
    7c6a:	2800      	cmp	r0, #0
    7c6c:	d160      	bne.n	7d30 <_dtoa_r+0x5f0>
    7c6e:	e9dd 2300 	ldrd	r2, r3, [sp]
    7c72:	2000      	movs	r0, #0
    7c74:	4936      	ldr	r1, [pc, #216]	; (7d50 <_dtoa_r+0x610>)
    7c76:	f7fc fcb1 	bl	45dc <__aeabi_dsub>
    7c7a:	4632      	mov	r2, r6
    7c7c:	463b      	mov	r3, r7
    7c7e:	f002 fccd 	bl	a61c <__aeabi_dcmplt>
    7c82:	2800      	cmp	r0, #0
    7c84:	f040 80b4 	bne.w	7df0 <_dtoa_r+0x6b0>
    7c88:	42a5      	cmp	r5, r4
    7c8a:	f43f af7c 	beq.w	7b86 <_dtoa_r+0x446>
    7c8e:	2200      	movs	r2, #0
    7c90:	4b30      	ldr	r3, [pc, #192]	; (7d54 <_dtoa_r+0x614>)
    7c92:	4630      	mov	r0, r6
    7c94:	4639      	mov	r1, r7
    7c96:	f7fc fe59 	bl	494c <__aeabi_dmul>
    7c9a:	2200      	movs	r2, #0
    7c9c:	4606      	mov	r6, r0
    7c9e:	460f      	mov	r7, r1
    7ca0:	4b2c      	ldr	r3, [pc, #176]	; (7d54 <_dtoa_r+0x614>)
    7ca2:	e9dd 0100 	ldrd	r0, r1, [sp]
    7ca6:	f7fc fe51 	bl	494c <__aeabi_dmul>
    7caa:	e9cd 0100 	strd	r0, r1, [sp]
    7cae:	e7c5      	b.n	7c3c <_dtoa_r+0x4fc>
    7cb0:	4632      	mov	r2, r6
    7cb2:	463b      	mov	r3, r7
    7cb4:	f7fc fe4a 	bl	494c <__aeabi_dmul>
    7cb8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    7cbc:	9e03      	ldr	r6, [sp, #12]
    7cbe:	4625      	mov	r5, r4
    7cc0:	e9dd 0100 	ldrd	r0, r1, [sp]
    7cc4:	f002 fce8 	bl	a698 <__aeabi_d2iz>
    7cc8:	4607      	mov	r7, r0
    7cca:	f7fc fdd5 	bl	4878 <__aeabi_i2d>
    7cce:	3730      	adds	r7, #48	; 0x30
    7cd0:	4602      	mov	r2, r0
    7cd2:	460b      	mov	r3, r1
    7cd4:	e9dd 0100 	ldrd	r0, r1, [sp]
    7cd8:	f7fc fc80 	bl	45dc <__aeabi_dsub>
    7cdc:	f806 7b01 	strb.w	r7, [r6], #1
    7ce0:	42a6      	cmp	r6, r4
    7ce2:	e9cd 0100 	strd	r0, r1, [sp]
    7ce6:	f04f 0200 	mov.w	r2, #0
    7cea:	d126      	bne.n	7d3a <_dtoa_r+0x5fa>
    7cec:	4b1c      	ldr	r3, [pc, #112]	; (7d60 <_dtoa_r+0x620>)
    7cee:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    7cf2:	f7fc fc75 	bl	45e0 <__adddf3>
    7cf6:	4602      	mov	r2, r0
    7cf8:	460b      	mov	r3, r1
    7cfa:	e9dd 0100 	ldrd	r0, r1, [sp]
    7cfe:	f002 fcab 	bl	a658 <__aeabi_dcmpgt>
    7d02:	2800      	cmp	r0, #0
    7d04:	d174      	bne.n	7df0 <_dtoa_r+0x6b0>
    7d06:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    7d0a:	2000      	movs	r0, #0
    7d0c:	4914      	ldr	r1, [pc, #80]	; (7d60 <_dtoa_r+0x620>)
    7d0e:	f7fc fc65 	bl	45dc <__aeabi_dsub>
    7d12:	4602      	mov	r2, r0
    7d14:	460b      	mov	r3, r1
    7d16:	e9dd 0100 	ldrd	r0, r1, [sp]
    7d1a:	f002 fc7f 	bl	a61c <__aeabi_dcmplt>
    7d1e:	2800      	cmp	r0, #0
    7d20:	f43f af31 	beq.w	7b86 <_dtoa_r+0x446>
    7d24:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    7d28:	2b30      	cmp	r3, #48	; 0x30
    7d2a:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    7d2e:	d002      	beq.n	7d36 <_dtoa_r+0x5f6>
    7d30:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    7d34:	e04a      	b.n	7dcc <_dtoa_r+0x68c>
    7d36:	4615      	mov	r5, r2
    7d38:	e7f4      	b.n	7d24 <_dtoa_r+0x5e4>
    7d3a:	4b06      	ldr	r3, [pc, #24]	; (7d54 <_dtoa_r+0x614>)
    7d3c:	f7fc fe06 	bl	494c <__aeabi_dmul>
    7d40:	e9cd 0100 	strd	r0, r1, [sp]
    7d44:	e7bc      	b.n	7cc0 <_dtoa_r+0x580>
    7d46:	bf00      	nop
    7d48:	0000bc58 	.word	0x0000bc58
    7d4c:	0000bc30 	.word	0x0000bc30
    7d50:	3ff00000 	.word	0x3ff00000
    7d54:	40240000 	.word	0x40240000
    7d58:	401c0000 	.word	0x401c0000
    7d5c:	40140000 	.word	0x40140000
    7d60:	3fe00000 	.word	0x3fe00000
    7d64:	e9dd 6700 	ldrd	r6, r7, [sp]
    7d68:	9d03      	ldr	r5, [sp, #12]
    7d6a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7d6e:	4630      	mov	r0, r6
    7d70:	4639      	mov	r1, r7
    7d72:	f7fc ff15 	bl	4ba0 <__aeabi_ddiv>
    7d76:	f002 fc8f 	bl	a698 <__aeabi_d2iz>
    7d7a:	4604      	mov	r4, r0
    7d7c:	f7fc fd7c 	bl	4878 <__aeabi_i2d>
    7d80:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7d84:	f7fc fde2 	bl	494c <__aeabi_dmul>
    7d88:	4602      	mov	r2, r0
    7d8a:	460b      	mov	r3, r1
    7d8c:	4630      	mov	r0, r6
    7d8e:	4639      	mov	r1, r7
    7d90:	f104 0630 	add.w	r6, r4, #48	; 0x30
    7d94:	f7fc fc22 	bl	45dc <__aeabi_dsub>
    7d98:	f805 6b01 	strb.w	r6, [r5], #1
    7d9c:	9e03      	ldr	r6, [sp, #12]
    7d9e:	1bae      	subs	r6, r5, r6
    7da0:	45b1      	cmp	r9, r6
    7da2:	4602      	mov	r2, r0
    7da4:	460b      	mov	r3, r1
    7da6:	d138      	bne.n	7e1a <_dtoa_r+0x6da>
    7da8:	f7fc fc1a 	bl	45e0 <__adddf3>
    7dac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7db0:	4606      	mov	r6, r0
    7db2:	460f      	mov	r7, r1
    7db4:	f002 fc50 	bl	a658 <__aeabi_dcmpgt>
    7db8:	b9c0      	cbnz	r0, 7dec <_dtoa_r+0x6ac>
    7dba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7dbe:	4630      	mov	r0, r6
    7dc0:	4639      	mov	r1, r7
    7dc2:	f002 fc21 	bl	a608 <__aeabi_dcmpeq>
    7dc6:	b108      	cbz	r0, 7dcc <_dtoa_r+0x68c>
    7dc8:	07e1      	lsls	r1, r4, #31
    7dca:	d40f      	bmi.n	7dec <_dtoa_r+0x6ac>
    7dcc:	4641      	mov	r1, r8
    7dce:	4658      	mov	r0, fp
    7dd0:	f001 f8ce 	bl	8f70 <_Bfree>
    7dd4:	2300      	movs	r3, #0
    7dd6:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7dd8:	702b      	strb	r3, [r5, #0]
    7dda:	f10a 0301 	add.w	r3, sl, #1
    7dde:	6013      	str	r3, [r2, #0]
    7de0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7de2:	2b00      	cmp	r3, #0
    7de4:	f43f acf4 	beq.w	77d0 <_dtoa_r+0x90>
    7de8:	601d      	str	r5, [r3, #0]
    7dea:	e4f1      	b.n	77d0 <_dtoa_r+0x90>
    7dec:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    7df0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    7df4:	2a39      	cmp	r2, #57	; 0x39
    7df6:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
    7dfa:	d108      	bne.n	7e0e <_dtoa_r+0x6ce>
    7dfc:	9a03      	ldr	r2, [sp, #12]
    7dfe:	429a      	cmp	r2, r3
    7e00:	d109      	bne.n	7e16 <_dtoa_r+0x6d6>
    7e02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7e04:	9903      	ldr	r1, [sp, #12]
    7e06:	3201      	adds	r2, #1
    7e08:	920a      	str	r2, [sp, #40]	; 0x28
    7e0a:	2230      	movs	r2, #48	; 0x30
    7e0c:	700a      	strb	r2, [r1, #0]
    7e0e:	781a      	ldrb	r2, [r3, #0]
    7e10:	3201      	adds	r2, #1
    7e12:	701a      	strb	r2, [r3, #0]
    7e14:	e78c      	b.n	7d30 <_dtoa_r+0x5f0>
    7e16:	461d      	mov	r5, r3
    7e18:	e7ea      	b.n	7df0 <_dtoa_r+0x6b0>
    7e1a:	2200      	movs	r2, #0
    7e1c:	4b9d      	ldr	r3, [pc, #628]	; (8094 <_dtoa_r+0x954>)
    7e1e:	f7fc fd95 	bl	494c <__aeabi_dmul>
    7e22:	2200      	movs	r2, #0
    7e24:	2300      	movs	r3, #0
    7e26:	4606      	mov	r6, r0
    7e28:	460f      	mov	r7, r1
    7e2a:	f002 fbed 	bl	a608 <__aeabi_dcmpeq>
    7e2e:	2800      	cmp	r0, #0
    7e30:	d09b      	beq.n	7d6a <_dtoa_r+0x62a>
    7e32:	e7cb      	b.n	7dcc <_dtoa_r+0x68c>
    7e34:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7e36:	2a00      	cmp	r2, #0
    7e38:	f000 80cb 	beq.w	7fd2 <_dtoa_r+0x892>
    7e3c:	9a08      	ldr	r2, [sp, #32]
    7e3e:	2a01      	cmp	r2, #1
    7e40:	f300 80ae 	bgt.w	7fa0 <_dtoa_r+0x860>
    7e44:	9a15      	ldr	r2, [sp, #84]	; 0x54
    7e46:	2a00      	cmp	r2, #0
    7e48:	f000 80a6 	beq.w	7f98 <_dtoa_r+0x858>
    7e4c:	f203 4333 	addw	r3, r3, #1075	; 0x433
    7e50:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7e52:	9d06      	ldr	r5, [sp, #24]
    7e54:	9a06      	ldr	r2, [sp, #24]
    7e56:	441a      	add	r2, r3
    7e58:	9206      	str	r2, [sp, #24]
    7e5a:	9a07      	ldr	r2, [sp, #28]
    7e5c:	2101      	movs	r1, #1
    7e5e:	441a      	add	r2, r3
    7e60:	4658      	mov	r0, fp
    7e62:	9207      	str	r2, [sp, #28]
    7e64:	f001 f964 	bl	9130 <__i2b>
    7e68:	4606      	mov	r6, r0
    7e6a:	2d00      	cmp	r5, #0
    7e6c:	dd0c      	ble.n	7e88 <_dtoa_r+0x748>
    7e6e:	9b07      	ldr	r3, [sp, #28]
    7e70:	2b00      	cmp	r3, #0
    7e72:	dd09      	ble.n	7e88 <_dtoa_r+0x748>
    7e74:	42ab      	cmp	r3, r5
    7e76:	9a06      	ldr	r2, [sp, #24]
    7e78:	bfa8      	it	ge
    7e7a:	462b      	movge	r3, r5
    7e7c:	1ad2      	subs	r2, r2, r3
    7e7e:	9206      	str	r2, [sp, #24]
    7e80:	9a07      	ldr	r2, [sp, #28]
    7e82:	1aed      	subs	r5, r5, r3
    7e84:	1ad3      	subs	r3, r2, r3
    7e86:	9307      	str	r3, [sp, #28]
    7e88:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7e8a:	b1f3      	cbz	r3, 7eca <_dtoa_r+0x78a>
    7e8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7e8e:	2b00      	cmp	r3, #0
    7e90:	f000 80a3 	beq.w	7fda <_dtoa_r+0x89a>
    7e94:	2c00      	cmp	r4, #0
    7e96:	dd10      	ble.n	7eba <_dtoa_r+0x77a>
    7e98:	4631      	mov	r1, r6
    7e9a:	4622      	mov	r2, r4
    7e9c:	4658      	mov	r0, fp
    7e9e:	f001 f9e1 	bl	9264 <__pow5mult>
    7ea2:	4642      	mov	r2, r8
    7ea4:	4601      	mov	r1, r0
    7ea6:	4606      	mov	r6, r0
    7ea8:	4658      	mov	r0, fp
    7eaa:	f001 f94a 	bl	9142 <__multiply>
    7eae:	4641      	mov	r1, r8
    7eb0:	4607      	mov	r7, r0
    7eb2:	4658      	mov	r0, fp
    7eb4:	f001 f85c 	bl	8f70 <_Bfree>
    7eb8:	46b8      	mov	r8, r7
    7eba:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7ebc:	1b1a      	subs	r2, r3, r4
    7ebe:	d004      	beq.n	7eca <_dtoa_r+0x78a>
    7ec0:	4641      	mov	r1, r8
    7ec2:	4658      	mov	r0, fp
    7ec4:	f001 f9ce 	bl	9264 <__pow5mult>
    7ec8:	4680      	mov	r8, r0
    7eca:	2101      	movs	r1, #1
    7ecc:	4658      	mov	r0, fp
    7ece:	f001 f92f 	bl	9130 <__i2b>
    7ed2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    7ed4:	2b00      	cmp	r3, #0
    7ed6:	4604      	mov	r4, r0
    7ed8:	f340 8081 	ble.w	7fde <_dtoa_r+0x89e>
    7edc:	461a      	mov	r2, r3
    7ede:	4601      	mov	r1, r0
    7ee0:	4658      	mov	r0, fp
    7ee2:	f001 f9bf 	bl	9264 <__pow5mult>
    7ee6:	9b08      	ldr	r3, [sp, #32]
    7ee8:	2b01      	cmp	r3, #1
    7eea:	4604      	mov	r4, r0
    7eec:	dd7a      	ble.n	7fe4 <_dtoa_r+0x8a4>
    7eee:	2700      	movs	r7, #0
    7ef0:	6923      	ldr	r3, [r4, #16]
    7ef2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    7ef6:	6918      	ldr	r0, [r3, #16]
    7ef8:	f001 f8ca 	bl	9090 <__hi0bits>
    7efc:	f1c0 0020 	rsb	r0, r0, #32
    7f00:	9b07      	ldr	r3, [sp, #28]
    7f02:	4418      	add	r0, r3
    7f04:	f010 001f 	ands.w	r0, r0, #31
    7f08:	f000 808b 	beq.w	8022 <_dtoa_r+0x8e2>
    7f0c:	f1c0 0320 	rsb	r3, r0, #32
    7f10:	2b04      	cmp	r3, #4
    7f12:	f340 8084 	ble.w	801e <_dtoa_r+0x8de>
    7f16:	f1c0 001c 	rsb	r0, r0, #28
    7f1a:	9b06      	ldr	r3, [sp, #24]
    7f1c:	4403      	add	r3, r0
    7f1e:	9306      	str	r3, [sp, #24]
    7f20:	9b07      	ldr	r3, [sp, #28]
    7f22:	4403      	add	r3, r0
    7f24:	4405      	add	r5, r0
    7f26:	9307      	str	r3, [sp, #28]
    7f28:	9b06      	ldr	r3, [sp, #24]
    7f2a:	2b00      	cmp	r3, #0
    7f2c:	dd05      	ble.n	7f3a <_dtoa_r+0x7fa>
    7f2e:	4641      	mov	r1, r8
    7f30:	461a      	mov	r2, r3
    7f32:	4658      	mov	r0, fp
    7f34:	f001 f9e4 	bl	9300 <__lshift>
    7f38:	4680      	mov	r8, r0
    7f3a:	9b07      	ldr	r3, [sp, #28]
    7f3c:	2b00      	cmp	r3, #0
    7f3e:	dd05      	ble.n	7f4c <_dtoa_r+0x80c>
    7f40:	4621      	mov	r1, r4
    7f42:	461a      	mov	r2, r3
    7f44:	4658      	mov	r0, fp
    7f46:	f001 f9db 	bl	9300 <__lshift>
    7f4a:	4604      	mov	r4, r0
    7f4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7f4e:	2b00      	cmp	r3, #0
    7f50:	d069      	beq.n	8026 <_dtoa_r+0x8e6>
    7f52:	4621      	mov	r1, r4
    7f54:	4640      	mov	r0, r8
    7f56:	f001 fa26 	bl	93a6 <__mcmp>
    7f5a:	2800      	cmp	r0, #0
    7f5c:	da63      	bge.n	8026 <_dtoa_r+0x8e6>
    7f5e:	2300      	movs	r3, #0
    7f60:	4641      	mov	r1, r8
    7f62:	220a      	movs	r2, #10
    7f64:	4658      	mov	r0, fp
    7f66:	f001 f81a 	bl	8f9e <__multadd>
    7f6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7f6c:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    7f70:	4680      	mov	r8, r0
    7f72:	2b00      	cmp	r3, #0
    7f74:	f000 817c 	beq.w	8270 <_dtoa_r+0xb30>
    7f78:	2300      	movs	r3, #0
    7f7a:	4631      	mov	r1, r6
    7f7c:	220a      	movs	r2, #10
    7f7e:	4658      	mov	r0, fp
    7f80:	f001 f80d 	bl	8f9e <__multadd>
    7f84:	9b04      	ldr	r3, [sp, #16]
    7f86:	2b00      	cmp	r3, #0
    7f88:	4606      	mov	r6, r0
    7f8a:	f300 808b 	bgt.w	80a4 <_dtoa_r+0x964>
    7f8e:	9b08      	ldr	r3, [sp, #32]
    7f90:	2b02      	cmp	r3, #2
    7f92:	f340 8087 	ble.w	80a4 <_dtoa_r+0x964>
    7f96:	e04e      	b.n	8036 <_dtoa_r+0x8f6>
    7f98:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7f9a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    7f9e:	e757      	b.n	7e50 <_dtoa_r+0x710>
    7fa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7fa2:	f109 34ff 	add.w	r4, r9, #4294967295	; 0xffffffff
    7fa6:	42a3      	cmp	r3, r4
    7fa8:	bfbf      	itttt	lt
    7faa:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
    7fac:	9409      	strlt	r4, [sp, #36]	; 0x24
    7fae:	1ae2      	sublt	r2, r4, r3
    7fb0:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    7fb2:	bfbb      	ittet	lt
    7fb4:	189b      	addlt	r3, r3, r2
    7fb6:	9310      	strlt	r3, [sp, #64]	; 0x40
    7fb8:	1b1c      	subge	r4, r3, r4
    7fba:	2400      	movlt	r4, #0
    7fbc:	f1b9 0f00 	cmp.w	r9, #0
    7fc0:	bfb5      	itete	lt
    7fc2:	9b06      	ldrlt	r3, [sp, #24]
    7fc4:	9d06      	ldrge	r5, [sp, #24]
    7fc6:	eba3 0509 	sublt.w	r5, r3, r9
    7fca:	464b      	movge	r3, r9
    7fcc:	bfb8      	it	lt
    7fce:	2300      	movlt	r3, #0
    7fd0:	e740      	b.n	7e54 <_dtoa_r+0x714>
    7fd2:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7fd4:	9d06      	ldr	r5, [sp, #24]
    7fd6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    7fd8:	e747      	b.n	7e6a <_dtoa_r+0x72a>
    7fda:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7fdc:	e770      	b.n	7ec0 <_dtoa_r+0x780>
    7fde:	9b08      	ldr	r3, [sp, #32]
    7fe0:	2b01      	cmp	r3, #1
    7fe2:	dc18      	bgt.n	8016 <_dtoa_r+0x8d6>
    7fe4:	9b00      	ldr	r3, [sp, #0]
    7fe6:	b9b3      	cbnz	r3, 8016 <_dtoa_r+0x8d6>
    7fe8:	9b01      	ldr	r3, [sp, #4]
    7fea:	f3c3 0313 	ubfx	r3, r3, #0, #20
    7fee:	b9a3      	cbnz	r3, 801a <_dtoa_r+0x8da>
    7ff0:	9b01      	ldr	r3, [sp, #4]
    7ff2:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    7ff6:	0d3f      	lsrs	r7, r7, #20
    7ff8:	053f      	lsls	r7, r7, #20
    7ffa:	b137      	cbz	r7, 800a <_dtoa_r+0x8ca>
    7ffc:	9b06      	ldr	r3, [sp, #24]
    7ffe:	3301      	adds	r3, #1
    8000:	9306      	str	r3, [sp, #24]
    8002:	9b07      	ldr	r3, [sp, #28]
    8004:	3301      	adds	r3, #1
    8006:	9307      	str	r3, [sp, #28]
    8008:	2701      	movs	r7, #1
    800a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    800c:	2b00      	cmp	r3, #0
    800e:	f47f af6f 	bne.w	7ef0 <_dtoa_r+0x7b0>
    8012:	2001      	movs	r0, #1
    8014:	e774      	b.n	7f00 <_dtoa_r+0x7c0>
    8016:	2700      	movs	r7, #0
    8018:	e7f7      	b.n	800a <_dtoa_r+0x8ca>
    801a:	9f00      	ldr	r7, [sp, #0]
    801c:	e7f5      	b.n	800a <_dtoa_r+0x8ca>
    801e:	d083      	beq.n	7f28 <_dtoa_r+0x7e8>
    8020:	4618      	mov	r0, r3
    8022:	301c      	adds	r0, #28
    8024:	e779      	b.n	7f1a <_dtoa_r+0x7da>
    8026:	f1b9 0f00 	cmp.w	r9, #0
    802a:	dc35      	bgt.n	8098 <_dtoa_r+0x958>
    802c:	9b08      	ldr	r3, [sp, #32]
    802e:	2b02      	cmp	r3, #2
    8030:	dd32      	ble.n	8098 <_dtoa_r+0x958>
    8032:	f8cd 9010 	str.w	r9, [sp, #16]
    8036:	9b04      	ldr	r3, [sp, #16]
    8038:	b963      	cbnz	r3, 8054 <_dtoa_r+0x914>
    803a:	4621      	mov	r1, r4
    803c:	2205      	movs	r2, #5
    803e:	4658      	mov	r0, fp
    8040:	f000 ffad 	bl	8f9e <__multadd>
    8044:	4601      	mov	r1, r0
    8046:	4604      	mov	r4, r0
    8048:	4640      	mov	r0, r8
    804a:	f001 f9ac 	bl	93a6 <__mcmp>
    804e:	2800      	cmp	r0, #0
    8050:	f73f adc5 	bgt.w	7bde <_dtoa_r+0x49e>
    8054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8056:	9d03      	ldr	r5, [sp, #12]
    8058:	ea6f 0a03 	mvn.w	sl, r3
    805c:	2700      	movs	r7, #0
    805e:	4621      	mov	r1, r4
    8060:	4658      	mov	r0, fp
    8062:	f000 ff85 	bl	8f70 <_Bfree>
    8066:	2e00      	cmp	r6, #0
    8068:	f43f aeb0 	beq.w	7dcc <_dtoa_r+0x68c>
    806c:	b12f      	cbz	r7, 807a <_dtoa_r+0x93a>
    806e:	42b7      	cmp	r7, r6
    8070:	d003      	beq.n	807a <_dtoa_r+0x93a>
    8072:	4639      	mov	r1, r7
    8074:	4658      	mov	r0, fp
    8076:	f000 ff7b 	bl	8f70 <_Bfree>
    807a:	4631      	mov	r1, r6
    807c:	4658      	mov	r0, fp
    807e:	f000 ff77 	bl	8f70 <_Bfree>
    8082:	e6a3      	b.n	7dcc <_dtoa_r+0x68c>
    8084:	2400      	movs	r4, #0
    8086:	4626      	mov	r6, r4
    8088:	e7e4      	b.n	8054 <_dtoa_r+0x914>
    808a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    808e:	4626      	mov	r6, r4
    8090:	e5a5      	b.n	7bde <_dtoa_r+0x49e>
    8092:	bf00      	nop
    8094:	40240000 	.word	0x40240000
    8098:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    809a:	f8cd 9010 	str.w	r9, [sp, #16]
    809e:	2b00      	cmp	r3, #0
    80a0:	f000 80ed 	beq.w	827e <_dtoa_r+0xb3e>
    80a4:	2d00      	cmp	r5, #0
    80a6:	dd05      	ble.n	80b4 <_dtoa_r+0x974>
    80a8:	4631      	mov	r1, r6
    80aa:	462a      	mov	r2, r5
    80ac:	4658      	mov	r0, fp
    80ae:	f001 f927 	bl	9300 <__lshift>
    80b2:	4606      	mov	r6, r0
    80b4:	2f00      	cmp	r7, #0
    80b6:	d056      	beq.n	8166 <_dtoa_r+0xa26>
    80b8:	6871      	ldr	r1, [r6, #4]
    80ba:	4658      	mov	r0, fp
    80bc:	f000 ff24 	bl	8f08 <_Balloc>
    80c0:	6932      	ldr	r2, [r6, #16]
    80c2:	3202      	adds	r2, #2
    80c4:	4605      	mov	r5, r0
    80c6:	0092      	lsls	r2, r2, #2
    80c8:	f106 010c 	add.w	r1, r6, #12
    80cc:	300c      	adds	r0, #12
    80ce:	f7fd f89b 	bl	5208 <memcpy>
    80d2:	2201      	movs	r2, #1
    80d4:	4629      	mov	r1, r5
    80d6:	4658      	mov	r0, fp
    80d8:	f001 f912 	bl	9300 <__lshift>
    80dc:	9b03      	ldr	r3, [sp, #12]
    80de:	f103 0901 	add.w	r9, r3, #1
    80e2:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    80e6:	4413      	add	r3, r2
    80e8:	9309      	str	r3, [sp, #36]	; 0x24
    80ea:	9b00      	ldr	r3, [sp, #0]
    80ec:	f003 0301 	and.w	r3, r3, #1
    80f0:	4637      	mov	r7, r6
    80f2:	9307      	str	r3, [sp, #28]
    80f4:	4606      	mov	r6, r0
    80f6:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
    80fa:	4621      	mov	r1, r4
    80fc:	4640      	mov	r0, r8
    80fe:	9300      	str	r3, [sp, #0]
    8100:	f7ff fa94 	bl	762c <quorem>
    8104:	4603      	mov	r3, r0
    8106:	3330      	adds	r3, #48	; 0x30
    8108:	9004      	str	r0, [sp, #16]
    810a:	4639      	mov	r1, r7
    810c:	4640      	mov	r0, r8
    810e:	930a      	str	r3, [sp, #40]	; 0x28
    8110:	f001 f949 	bl	93a6 <__mcmp>
    8114:	4632      	mov	r2, r6
    8116:	9006      	str	r0, [sp, #24]
    8118:	4621      	mov	r1, r4
    811a:	4658      	mov	r0, fp
    811c:	f001 f95d 	bl	93da <__mdiff>
    8120:	68c2      	ldr	r2, [r0, #12]
    8122:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8124:	4605      	mov	r5, r0
    8126:	bb02      	cbnz	r2, 816a <_dtoa_r+0xa2a>
    8128:	4601      	mov	r1, r0
    812a:	4640      	mov	r0, r8
    812c:	f001 f93b 	bl	93a6 <__mcmp>
    8130:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8132:	4602      	mov	r2, r0
    8134:	4629      	mov	r1, r5
    8136:	4658      	mov	r0, fp
    8138:	920c      	str	r2, [sp, #48]	; 0x30
    813a:	930a      	str	r3, [sp, #40]	; 0x28
    813c:	f000 ff18 	bl	8f70 <_Bfree>
    8140:	9b08      	ldr	r3, [sp, #32]
    8142:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    8144:	ea43 0102 	orr.w	r1, r3, r2
    8148:	9b07      	ldr	r3, [sp, #28]
    814a:	430b      	orrs	r3, r1
    814c:	464d      	mov	r5, r9
    814e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8150:	d10d      	bne.n	816e <_dtoa_r+0xa2e>
    8152:	2b39      	cmp	r3, #57	; 0x39
    8154:	d027      	beq.n	81a6 <_dtoa_r+0xa66>
    8156:	9a06      	ldr	r2, [sp, #24]
    8158:	2a00      	cmp	r2, #0
    815a:	dd01      	ble.n	8160 <_dtoa_r+0xa20>
    815c:	9b04      	ldr	r3, [sp, #16]
    815e:	3331      	adds	r3, #49	; 0x31
    8160:	9a00      	ldr	r2, [sp, #0]
    8162:	7013      	strb	r3, [r2, #0]
    8164:	e77b      	b.n	805e <_dtoa_r+0x91e>
    8166:	4630      	mov	r0, r6
    8168:	e7b8      	b.n	80dc <_dtoa_r+0x99c>
    816a:	2201      	movs	r2, #1
    816c:	e7e2      	b.n	8134 <_dtoa_r+0x9f4>
    816e:	9906      	ldr	r1, [sp, #24]
    8170:	2900      	cmp	r1, #0
    8172:	db04      	blt.n	817e <_dtoa_r+0xa3e>
    8174:	9808      	ldr	r0, [sp, #32]
    8176:	4301      	orrs	r1, r0
    8178:	9807      	ldr	r0, [sp, #28]
    817a:	4301      	orrs	r1, r0
    817c:	d11e      	bne.n	81bc <_dtoa_r+0xa7c>
    817e:	2a00      	cmp	r2, #0
    8180:	ddee      	ble.n	8160 <_dtoa_r+0xa20>
    8182:	4641      	mov	r1, r8
    8184:	2201      	movs	r2, #1
    8186:	4658      	mov	r0, fp
    8188:	9306      	str	r3, [sp, #24]
    818a:	f001 f8b9 	bl	9300 <__lshift>
    818e:	4621      	mov	r1, r4
    8190:	4680      	mov	r8, r0
    8192:	f001 f908 	bl	93a6 <__mcmp>
    8196:	2800      	cmp	r0, #0
    8198:	9b06      	ldr	r3, [sp, #24]
    819a:	dc02      	bgt.n	81a2 <_dtoa_r+0xa62>
    819c:	d1e0      	bne.n	8160 <_dtoa_r+0xa20>
    819e:	07da      	lsls	r2, r3, #31
    81a0:	d5de      	bpl.n	8160 <_dtoa_r+0xa20>
    81a2:	2b39      	cmp	r3, #57	; 0x39
    81a4:	d1da      	bne.n	815c <_dtoa_r+0xa1c>
    81a6:	9a00      	ldr	r2, [sp, #0]
    81a8:	2339      	movs	r3, #57	; 0x39
    81aa:	7013      	strb	r3, [r2, #0]
    81ac:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    81b0:	2b39      	cmp	r3, #57	; 0x39
    81b2:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    81b6:	d047      	beq.n	8248 <_dtoa_r+0xb08>
    81b8:	3301      	adds	r3, #1
    81ba:	e7d2      	b.n	8162 <_dtoa_r+0xa22>
    81bc:	2a00      	cmp	r2, #0
    81be:	dd03      	ble.n	81c8 <_dtoa_r+0xa88>
    81c0:	2b39      	cmp	r3, #57	; 0x39
    81c2:	d0f0      	beq.n	81a6 <_dtoa_r+0xa66>
    81c4:	3301      	adds	r3, #1
    81c6:	e7cb      	b.n	8160 <_dtoa_r+0xa20>
    81c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    81ca:	f809 3c01 	strb.w	r3, [r9, #-1]
    81ce:	4591      	cmp	r9, r2
    81d0:	d021      	beq.n	8216 <_dtoa_r+0xad6>
    81d2:	4641      	mov	r1, r8
    81d4:	2300      	movs	r3, #0
    81d6:	220a      	movs	r2, #10
    81d8:	4658      	mov	r0, fp
    81da:	f000 fee0 	bl	8f9e <__multadd>
    81de:	42b7      	cmp	r7, r6
    81e0:	4680      	mov	r8, r0
    81e2:	f04f 0300 	mov.w	r3, #0
    81e6:	f04f 020a 	mov.w	r2, #10
    81ea:	4639      	mov	r1, r7
    81ec:	4658      	mov	r0, fp
    81ee:	d106      	bne.n	81fe <_dtoa_r+0xabe>
    81f0:	f000 fed5 	bl	8f9e <__multadd>
    81f4:	4607      	mov	r7, r0
    81f6:	4606      	mov	r6, r0
    81f8:	f109 0901 	add.w	r9, r9, #1
    81fc:	e77b      	b.n	80f6 <_dtoa_r+0x9b6>
    81fe:	f000 fece 	bl	8f9e <__multadd>
    8202:	4631      	mov	r1, r6
    8204:	4607      	mov	r7, r0
    8206:	2300      	movs	r3, #0
    8208:	220a      	movs	r2, #10
    820a:	4658      	mov	r0, fp
    820c:	f000 fec7 	bl	8f9e <__multadd>
    8210:	4606      	mov	r6, r0
    8212:	e7f1      	b.n	81f8 <_dtoa_r+0xab8>
    8214:	2700      	movs	r7, #0
    8216:	4641      	mov	r1, r8
    8218:	2201      	movs	r2, #1
    821a:	4658      	mov	r0, fp
    821c:	9300      	str	r3, [sp, #0]
    821e:	f001 f86f 	bl	9300 <__lshift>
    8222:	4621      	mov	r1, r4
    8224:	4680      	mov	r8, r0
    8226:	f001 f8be 	bl	93a6 <__mcmp>
    822a:	2800      	cmp	r0, #0
    822c:	dcbe      	bgt.n	81ac <_dtoa_r+0xa6c>
    822e:	d102      	bne.n	8236 <_dtoa_r+0xaf6>
    8230:	9b00      	ldr	r3, [sp, #0]
    8232:	07db      	lsls	r3, r3, #31
    8234:	d4ba      	bmi.n	81ac <_dtoa_r+0xa6c>
    8236:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    823a:	2b30      	cmp	r3, #48	; 0x30
    823c:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    8240:	f47f af0d 	bne.w	805e <_dtoa_r+0x91e>
    8244:	4615      	mov	r5, r2
    8246:	e7f6      	b.n	8236 <_dtoa_r+0xaf6>
    8248:	9b03      	ldr	r3, [sp, #12]
    824a:	4293      	cmp	r3, r2
    824c:	d104      	bne.n	8258 <_dtoa_r+0xb18>
    824e:	f10a 0a01 	add.w	sl, sl, #1
    8252:	2331      	movs	r3, #49	; 0x31
    8254:	9a03      	ldr	r2, [sp, #12]
    8256:	e784      	b.n	8162 <_dtoa_r+0xa22>
    8258:	4615      	mov	r5, r2
    825a:	e7a7      	b.n	81ac <_dtoa_r+0xa6c>
    825c:	4b13      	ldr	r3, [pc, #76]	; (82ac <_dtoa_r+0xb6c>)
    825e:	f7ff bad6 	b.w	780e <_dtoa_r+0xce>
    8262:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8264:	2b00      	cmp	r3, #0
    8266:	f47f aaae 	bne.w	77c6 <_dtoa_r+0x86>
    826a:	4b11      	ldr	r3, [pc, #68]	; (82b0 <_dtoa_r+0xb70>)
    826c:	f7ff bacf 	b.w	780e <_dtoa_r+0xce>
    8270:	9b04      	ldr	r3, [sp, #16]
    8272:	2b00      	cmp	r3, #0
    8274:	dc03      	bgt.n	827e <_dtoa_r+0xb3e>
    8276:	9b08      	ldr	r3, [sp, #32]
    8278:	2b02      	cmp	r3, #2
    827a:	f73f aedc 	bgt.w	8036 <_dtoa_r+0x8f6>
    827e:	9d03      	ldr	r5, [sp, #12]
    8280:	4621      	mov	r1, r4
    8282:	4640      	mov	r0, r8
    8284:	f7ff f9d2 	bl	762c <quorem>
    8288:	f100 0330 	add.w	r3, r0, #48	; 0x30
    828c:	f805 3b01 	strb.w	r3, [r5], #1
    8290:	9a03      	ldr	r2, [sp, #12]
    8292:	9904      	ldr	r1, [sp, #16]
    8294:	1aaa      	subs	r2, r5, r2
    8296:	4291      	cmp	r1, r2
    8298:	ddbc      	ble.n	8214 <_dtoa_r+0xad4>
    829a:	4641      	mov	r1, r8
    829c:	2300      	movs	r3, #0
    829e:	220a      	movs	r2, #10
    82a0:	4658      	mov	r0, fp
    82a2:	f000 fe7c 	bl	8f9e <__multadd>
    82a6:	4680      	mov	r8, r0
    82a8:	e7ea      	b.n	8280 <_dtoa_r+0xb40>
    82aa:	bf00      	nop
    82ac:	0000b4cc 	.word	0x0000b4cc
    82b0:	0000bba8 	.word	0x0000bba8

000082b4 <__sflush_r>:
__sflush_r():
    82b4:	898a      	ldrh	r2, [r1, #12]
    82b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    82ba:	4605      	mov	r5, r0
    82bc:	0710      	lsls	r0, r2, #28
    82be:	460c      	mov	r4, r1
    82c0:	d458      	bmi.n	8374 <__sflush_r+0xc0>
    82c2:	684b      	ldr	r3, [r1, #4]
    82c4:	2b00      	cmp	r3, #0
    82c6:	dc05      	bgt.n	82d4 <__sflush_r+0x20>
    82c8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    82ca:	2b00      	cmp	r3, #0
    82cc:	dc02      	bgt.n	82d4 <__sflush_r+0x20>
    82ce:	2000      	movs	r0, #0
    82d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    82d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    82d6:	2e00      	cmp	r6, #0
    82d8:	d0f9      	beq.n	82ce <__sflush_r+0x1a>
    82da:	2300      	movs	r3, #0
    82dc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    82e0:	682f      	ldr	r7, [r5, #0]
    82e2:	602b      	str	r3, [r5, #0]
    82e4:	d032      	beq.n	834c <__sflush_r+0x98>
    82e6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    82e8:	89a3      	ldrh	r3, [r4, #12]
    82ea:	075a      	lsls	r2, r3, #29
    82ec:	d505      	bpl.n	82fa <__sflush_r+0x46>
    82ee:	6863      	ldr	r3, [r4, #4]
    82f0:	1ac0      	subs	r0, r0, r3
    82f2:	6b63      	ldr	r3, [r4, #52]	; 0x34
    82f4:	b10b      	cbz	r3, 82fa <__sflush_r+0x46>
    82f6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    82f8:	1ac0      	subs	r0, r0, r3
    82fa:	2300      	movs	r3, #0
    82fc:	4602      	mov	r2, r0
    82fe:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    8300:	6a21      	ldr	r1, [r4, #32]
    8302:	4628      	mov	r0, r5
    8304:	47b0      	blx	r6
    8306:	1c43      	adds	r3, r0, #1
    8308:	89a3      	ldrh	r3, [r4, #12]
    830a:	d106      	bne.n	831a <__sflush_r+0x66>
    830c:	6829      	ldr	r1, [r5, #0]
    830e:	291d      	cmp	r1, #29
    8310:	d82c      	bhi.n	836c <__sflush_r+0xb8>
    8312:	4a2a      	ldr	r2, [pc, #168]	; (83bc <__sflush_r+0x108>)
    8314:	40ca      	lsrs	r2, r1
    8316:	07d6      	lsls	r6, r2, #31
    8318:	d528      	bpl.n	836c <__sflush_r+0xb8>
    831a:	2200      	movs	r2, #0
    831c:	6062      	str	r2, [r4, #4]
    831e:	04d9      	lsls	r1, r3, #19
    8320:	6922      	ldr	r2, [r4, #16]
    8322:	6022      	str	r2, [r4, #0]
    8324:	d504      	bpl.n	8330 <__sflush_r+0x7c>
    8326:	1c42      	adds	r2, r0, #1
    8328:	d101      	bne.n	832e <__sflush_r+0x7a>
    832a:	682b      	ldr	r3, [r5, #0]
    832c:	b903      	cbnz	r3, 8330 <__sflush_r+0x7c>
    832e:	6560      	str	r0, [r4, #84]	; 0x54
    8330:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8332:	602f      	str	r7, [r5, #0]
    8334:	2900      	cmp	r1, #0
    8336:	d0ca      	beq.n	82ce <__sflush_r+0x1a>
    8338:	f104 0344 	add.w	r3, r4, #68	; 0x44
    833c:	4299      	cmp	r1, r3
    833e:	d002      	beq.n	8346 <__sflush_r+0x92>
    8340:	4628      	mov	r0, r5
    8342:	f7fc ff91 	bl	5268 <_free_r>
    8346:	2000      	movs	r0, #0
    8348:	6360      	str	r0, [r4, #52]	; 0x34
    834a:	e7c1      	b.n	82d0 <__sflush_r+0x1c>
    834c:	6a21      	ldr	r1, [r4, #32]
    834e:	2301      	movs	r3, #1
    8350:	4628      	mov	r0, r5
    8352:	47b0      	blx	r6
    8354:	1c41      	adds	r1, r0, #1
    8356:	d1c7      	bne.n	82e8 <__sflush_r+0x34>
    8358:	682b      	ldr	r3, [r5, #0]
    835a:	2b00      	cmp	r3, #0
    835c:	d0c4      	beq.n	82e8 <__sflush_r+0x34>
    835e:	2b1d      	cmp	r3, #29
    8360:	d001      	beq.n	8366 <__sflush_r+0xb2>
    8362:	2b16      	cmp	r3, #22
    8364:	d101      	bne.n	836a <__sflush_r+0xb6>
    8366:	602f      	str	r7, [r5, #0]
    8368:	e7b1      	b.n	82ce <__sflush_r+0x1a>
    836a:	89a3      	ldrh	r3, [r4, #12]
    836c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8370:	81a3      	strh	r3, [r4, #12]
    8372:	e7ad      	b.n	82d0 <__sflush_r+0x1c>
    8374:	690f      	ldr	r7, [r1, #16]
    8376:	2f00      	cmp	r7, #0
    8378:	d0a9      	beq.n	82ce <__sflush_r+0x1a>
    837a:	0793      	lsls	r3, r2, #30
    837c:	680e      	ldr	r6, [r1, #0]
    837e:	bf08      	it	eq
    8380:	694b      	ldreq	r3, [r1, #20]
    8382:	600f      	str	r7, [r1, #0]
    8384:	bf18      	it	ne
    8386:	2300      	movne	r3, #0
    8388:	eba6 0807 	sub.w	r8, r6, r7
    838c:	608b      	str	r3, [r1, #8]
    838e:	f1b8 0f00 	cmp.w	r8, #0
    8392:	dd9c      	ble.n	82ce <__sflush_r+0x1a>
    8394:	4643      	mov	r3, r8
    8396:	463a      	mov	r2, r7
    8398:	6a21      	ldr	r1, [r4, #32]
    839a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    839c:	4628      	mov	r0, r5
    839e:	47b0      	blx	r6
    83a0:	2800      	cmp	r0, #0
    83a2:	dc06      	bgt.n	83b2 <__sflush_r+0xfe>
    83a4:	89a3      	ldrh	r3, [r4, #12]
    83a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    83aa:	81a3      	strh	r3, [r4, #12]
    83ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    83b0:	e78e      	b.n	82d0 <__sflush_r+0x1c>
    83b2:	4407      	add	r7, r0
    83b4:	eba8 0800 	sub.w	r8, r8, r0
    83b8:	e7e9      	b.n	838e <__sflush_r+0xda>
    83ba:	bf00      	nop
    83bc:	20400001 	.word	0x20400001

000083c0 <_fflush_r>:
_fflush_r():
    83c0:	b538      	push	{r3, r4, r5, lr}
    83c2:	690b      	ldr	r3, [r1, #16]
    83c4:	4605      	mov	r5, r0
    83c6:	460c      	mov	r4, r1
    83c8:	b913      	cbnz	r3, 83d0 <_fflush_r+0x10>
    83ca:	2500      	movs	r5, #0
    83cc:	4628      	mov	r0, r5
    83ce:	bd38      	pop	{r3, r4, r5, pc}
    83d0:	b118      	cbz	r0, 83da <_fflush_r+0x1a>
    83d2:	6983      	ldr	r3, [r0, #24]
    83d4:	b90b      	cbnz	r3, 83da <_fflush_r+0x1a>
    83d6:	f000 f899 	bl	850c <__sinit>
    83da:	4b14      	ldr	r3, [pc, #80]	; (842c <_fflush_r+0x6c>)
    83dc:	429c      	cmp	r4, r3
    83de:	d11b      	bne.n	8418 <_fflush_r+0x58>
    83e0:	686c      	ldr	r4, [r5, #4]
    83e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    83e6:	2b00      	cmp	r3, #0
    83e8:	d0ef      	beq.n	83ca <_fflush_r+0xa>
    83ea:	6e62      	ldr	r2, [r4, #100]	; 0x64
    83ec:	07d0      	lsls	r0, r2, #31
    83ee:	d404      	bmi.n	83fa <_fflush_r+0x3a>
    83f0:	0599      	lsls	r1, r3, #22
    83f2:	d402      	bmi.n	83fa <_fflush_r+0x3a>
    83f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    83f6:	f7fc fef4 	bl	51e2 <__retarget_lock_acquire_recursive>
    83fa:	4628      	mov	r0, r5
    83fc:	4621      	mov	r1, r4
    83fe:	f7ff ff59 	bl	82b4 <__sflush_r>
    8402:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8404:	07da      	lsls	r2, r3, #31
    8406:	4605      	mov	r5, r0
    8408:	d4e0      	bmi.n	83cc <_fflush_r+0xc>
    840a:	89a3      	ldrh	r3, [r4, #12]
    840c:	059b      	lsls	r3, r3, #22
    840e:	d4dd      	bmi.n	83cc <_fflush_r+0xc>
    8410:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8412:	f7fc fee7 	bl	51e4 <__retarget_lock_release_recursive>
    8416:	e7d9      	b.n	83cc <_fflush_r+0xc>
    8418:	4b05      	ldr	r3, [pc, #20]	; (8430 <_fflush_r+0x70>)
    841a:	429c      	cmp	r4, r3
    841c:	d101      	bne.n	8422 <_fflush_r+0x62>
    841e:	68ac      	ldr	r4, [r5, #8]
    8420:	e7df      	b.n	83e2 <_fflush_r+0x22>
    8422:	4b04      	ldr	r3, [pc, #16]	; (8434 <_fflush_r+0x74>)
    8424:	429c      	cmp	r4, r3
    8426:	bf08      	it	eq
    8428:	68ec      	ldreq	r4, [r5, #12]
    842a:	e7da      	b.n	83e2 <_fflush_r+0x22>
    842c:	0000bbd8 	.word	0x0000bbd8
    8430:	0000bbf8 	.word	0x0000bbf8
    8434:	0000bbb8 	.word	0x0000bbb8

00008438 <fflush>:
fflush():
    8438:	4601      	mov	r1, r0
    843a:	b920      	cbnz	r0, 8446 <fflush+0xe>
    843c:	4b04      	ldr	r3, [pc, #16]	; (8450 <fflush+0x18>)
    843e:	4905      	ldr	r1, [pc, #20]	; (8454 <fflush+0x1c>)
    8440:	6818      	ldr	r0, [r3, #0]
    8442:	f000 b8fd 	b.w	8640 <_fwalk_reent>
    8446:	4b04      	ldr	r3, [pc, #16]	; (8458 <fflush+0x20>)
    8448:	6818      	ldr	r0, [r3, #0]
    844a:	f7ff bfb9 	b.w	83c0 <_fflush_r>
    844e:	bf00      	nop
    8450:	0000bb08 	.word	0x0000bb08
    8454:	000083c1 	.word	0x000083c1
    8458:	10000174 	.word	0x10000174

0000845c <std>:
std():
    845c:	2300      	movs	r3, #0
    845e:	b510      	push	{r4, lr}
    8460:	4604      	mov	r4, r0
    8462:	e9c0 3300 	strd	r3, r3, [r0]
    8466:	6083      	str	r3, [r0, #8]
    8468:	8181      	strh	r1, [r0, #12]
    846a:	6643      	str	r3, [r0, #100]	; 0x64
    846c:	81c2      	strh	r2, [r0, #14]
    846e:	e9c0 3304 	strd	r3, r3, [r0, #16]
    8472:	6183      	str	r3, [r0, #24]
    8474:	4619      	mov	r1, r3
    8476:	2208      	movs	r2, #8
    8478:	305c      	adds	r0, #92	; 0x5c
    847a:	f7fc feed 	bl	5258 <memset>
    847e:	4b05      	ldr	r3, [pc, #20]	; (8494 <std+0x38>)
    8480:	6263      	str	r3, [r4, #36]	; 0x24
    8482:	4b05      	ldr	r3, [pc, #20]	; (8498 <std+0x3c>)
    8484:	62a3      	str	r3, [r4, #40]	; 0x28
    8486:	4b05      	ldr	r3, [pc, #20]	; (849c <std+0x40>)
    8488:	62e3      	str	r3, [r4, #44]	; 0x2c
    848a:	4b05      	ldr	r3, [pc, #20]	; (84a0 <std+0x44>)
    848c:	6224      	str	r4, [r4, #32]
    848e:	6323      	str	r3, [r4, #48]	; 0x30
    8490:	bd10      	pop	{r4, pc}
    8492:	bf00      	nop
    8494:	0000a145 	.word	0x0000a145
    8498:	0000a16b 	.word	0x0000a16b
    849c:	0000a1a3 	.word	0x0000a1a3
    84a0:	0000a1c7 	.word	0x0000a1c7

000084a4 <_cleanup_r>:
_cleanup_r():
    84a4:	4901      	ldr	r1, [pc, #4]	; (84ac <_cleanup_r+0x8>)
    84a6:	f000 b8cb 	b.w	8640 <_fwalk_reent>
    84aa:	bf00      	nop
    84ac:	000083c1 	.word	0x000083c1

000084b0 <__sfmoreglue>:
__sfmoreglue():
    84b0:	b570      	push	{r4, r5, r6, lr}
    84b2:	1e4a      	subs	r2, r1, #1
    84b4:	2568      	movs	r5, #104	; 0x68
    84b6:	4355      	muls	r5, r2
    84b8:	460e      	mov	r6, r1
    84ba:	f105 0174 	add.w	r1, r5, #116	; 0x74
    84be:	f7fc ff21 	bl	5304 <_malloc_r>
    84c2:	4604      	mov	r4, r0
    84c4:	b140      	cbz	r0, 84d8 <__sfmoreglue+0x28>
    84c6:	2100      	movs	r1, #0
    84c8:	e9c0 1600 	strd	r1, r6, [r0]
    84cc:	300c      	adds	r0, #12
    84ce:	60a0      	str	r0, [r4, #8]
    84d0:	f105 0268 	add.w	r2, r5, #104	; 0x68
    84d4:	f7fc fec0 	bl	5258 <memset>
    84d8:	4620      	mov	r0, r4
    84da:	bd70      	pop	{r4, r5, r6, pc}

000084dc <__sfp_lock_acquire>:
__sfp_lock_acquire():
    84dc:	4801      	ldr	r0, [pc, #4]	; (84e4 <__sfp_lock_acquire+0x8>)
    84de:	f7fc be80 	b.w	51e2 <__retarget_lock_acquire_recursive>
    84e2:	bf00      	nop
    84e4:	10001400 	.word	0x10001400

000084e8 <__sfp_lock_release>:
__sfp_lock_release():
    84e8:	4801      	ldr	r0, [pc, #4]	; (84f0 <__sfp_lock_release+0x8>)
    84ea:	f7fc be7b 	b.w	51e4 <__retarget_lock_release_recursive>
    84ee:	bf00      	nop
    84f0:	10001400 	.word	0x10001400

000084f4 <__sinit_lock_acquire>:
__sinit_lock_acquire():
    84f4:	4801      	ldr	r0, [pc, #4]	; (84fc <__sinit_lock_acquire+0x8>)
    84f6:	f7fc be74 	b.w	51e2 <__retarget_lock_acquire_recursive>
    84fa:	bf00      	nop
    84fc:	100013fb 	.word	0x100013fb

00008500 <__sinit_lock_release>:
__sinit_lock_release():
    8500:	4801      	ldr	r0, [pc, #4]	; (8508 <__sinit_lock_release+0x8>)
    8502:	f7fc be6f 	b.w	51e4 <__retarget_lock_release_recursive>
    8506:	bf00      	nop
    8508:	100013fb 	.word	0x100013fb

0000850c <__sinit>:
__sinit():
    850c:	b510      	push	{r4, lr}
    850e:	4604      	mov	r4, r0
    8510:	f7ff fff0 	bl	84f4 <__sinit_lock_acquire>
    8514:	69a3      	ldr	r3, [r4, #24]
    8516:	b11b      	cbz	r3, 8520 <__sinit+0x14>
    8518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    851c:	f7ff bff0 	b.w	8500 <__sinit_lock_release>
    8520:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
    8524:	6523      	str	r3, [r4, #80]	; 0x50
    8526:	4b13      	ldr	r3, [pc, #76]	; (8574 <__sinit+0x68>)
    8528:	4a13      	ldr	r2, [pc, #76]	; (8578 <__sinit+0x6c>)
    852a:	681b      	ldr	r3, [r3, #0]
    852c:	62a2      	str	r2, [r4, #40]	; 0x28
    852e:	42a3      	cmp	r3, r4
    8530:	bf04      	itt	eq
    8532:	2301      	moveq	r3, #1
    8534:	61a3      	streq	r3, [r4, #24]
    8536:	4620      	mov	r0, r4
    8538:	f000 f820 	bl	857c <__sfp>
    853c:	6060      	str	r0, [r4, #4]
    853e:	4620      	mov	r0, r4
    8540:	f000 f81c 	bl	857c <__sfp>
    8544:	60a0      	str	r0, [r4, #8]
    8546:	4620      	mov	r0, r4
    8548:	f000 f818 	bl	857c <__sfp>
    854c:	2200      	movs	r2, #0
    854e:	60e0      	str	r0, [r4, #12]
    8550:	2104      	movs	r1, #4
    8552:	6860      	ldr	r0, [r4, #4]
    8554:	f7ff ff82 	bl	845c <std>
    8558:	2201      	movs	r2, #1
    855a:	2109      	movs	r1, #9
    855c:	68a0      	ldr	r0, [r4, #8]
    855e:	f7ff ff7d 	bl	845c <std>
    8562:	2202      	movs	r2, #2
    8564:	2112      	movs	r1, #18
    8566:	68e0      	ldr	r0, [r4, #12]
    8568:	f7ff ff78 	bl	845c <std>
    856c:	2301      	movs	r3, #1
    856e:	61a3      	str	r3, [r4, #24]
    8570:	e7d2      	b.n	8518 <__sinit+0xc>
    8572:	bf00      	nop
    8574:	0000bb08 	.word	0x0000bb08
    8578:	000084a5 	.word	0x000084a5

0000857c <__sfp>:
__sfp():
    857c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    857e:	4607      	mov	r7, r0
    8580:	f7ff ffac 	bl	84dc <__sfp_lock_acquire>
    8584:	4b1e      	ldr	r3, [pc, #120]	; (8600 <__sfp+0x84>)
    8586:	681e      	ldr	r6, [r3, #0]
    8588:	69b3      	ldr	r3, [r6, #24]
    858a:	b913      	cbnz	r3, 8592 <__sfp+0x16>
    858c:	4630      	mov	r0, r6
    858e:	f7ff ffbd 	bl	850c <__sinit>
    8592:	3648      	adds	r6, #72	; 0x48
    8594:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
    8598:	3b01      	subs	r3, #1
    859a:	d503      	bpl.n	85a4 <__sfp+0x28>
    859c:	6833      	ldr	r3, [r6, #0]
    859e:	b30b      	cbz	r3, 85e4 <__sfp+0x68>
    85a0:	6836      	ldr	r6, [r6, #0]
    85a2:	e7f7      	b.n	8594 <__sfp+0x18>
    85a4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    85a8:	b9d5      	cbnz	r5, 85e0 <__sfp+0x64>
    85aa:	4b16      	ldr	r3, [pc, #88]	; (8604 <__sfp+0x88>)
    85ac:	60e3      	str	r3, [r4, #12]
    85ae:	f104 0058 	add.w	r0, r4, #88	; 0x58
    85b2:	6665      	str	r5, [r4, #100]	; 0x64
    85b4:	f7fc fe14 	bl	51e0 <__retarget_lock_init_recursive>
    85b8:	f7ff ff96 	bl	84e8 <__sfp_lock_release>
    85bc:	6025      	str	r5, [r4, #0]
    85be:	e9c4 5501 	strd	r5, r5, [r4, #4]
    85c2:	e9c4 5504 	strd	r5, r5, [r4, #16]
    85c6:	61a5      	str	r5, [r4, #24]
    85c8:	2208      	movs	r2, #8
    85ca:	4629      	mov	r1, r5
    85cc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    85d0:	f7fc fe42 	bl	5258 <memset>
    85d4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
    85d8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
    85dc:	4620      	mov	r0, r4
    85de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    85e0:	3468      	adds	r4, #104	; 0x68
    85e2:	e7d9      	b.n	8598 <__sfp+0x1c>
    85e4:	2104      	movs	r1, #4
    85e6:	4638      	mov	r0, r7
    85e8:	f7ff ff62 	bl	84b0 <__sfmoreglue>
    85ec:	4604      	mov	r4, r0
    85ee:	6030      	str	r0, [r6, #0]
    85f0:	2800      	cmp	r0, #0
    85f2:	d1d5      	bne.n	85a0 <__sfp+0x24>
    85f4:	f7ff ff78 	bl	84e8 <__sfp_lock_release>
    85f8:	230c      	movs	r3, #12
    85fa:	603b      	str	r3, [r7, #0]
    85fc:	e7ee      	b.n	85dc <__sfp+0x60>
    85fe:	bf00      	nop
    8600:	0000bb08 	.word	0x0000bb08
    8604:	ffff0001 	.word	0xffff0001

00008608 <_fwalk>:
_fwalk():
    8608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    860c:	4688      	mov	r8, r1
    860e:	f100 0448 	add.w	r4, r0, #72	; 0x48
    8612:	2600      	movs	r6, #0
    8614:	b914      	cbnz	r4, 861c <_fwalk+0x14>
    8616:	4630      	mov	r0, r6
    8618:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    861c:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    8620:	3f01      	subs	r7, #1
    8622:	d501      	bpl.n	8628 <_fwalk+0x20>
    8624:	6824      	ldr	r4, [r4, #0]
    8626:	e7f5      	b.n	8614 <_fwalk+0xc>
    8628:	89ab      	ldrh	r3, [r5, #12]
    862a:	2b01      	cmp	r3, #1
    862c:	d906      	bls.n	863c <_fwalk+0x34>
    862e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    8632:	3301      	adds	r3, #1
    8634:	d002      	beq.n	863c <_fwalk+0x34>
    8636:	4628      	mov	r0, r5
    8638:	47c0      	blx	r8
    863a:	4306      	orrs	r6, r0
    863c:	3568      	adds	r5, #104	; 0x68
    863e:	e7ef      	b.n	8620 <_fwalk+0x18>

00008640 <_fwalk_reent>:
_fwalk_reent():
    8640:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8644:	4680      	mov	r8, r0
    8646:	4689      	mov	r9, r1
    8648:	f100 0448 	add.w	r4, r0, #72	; 0x48
    864c:	2600      	movs	r6, #0
    864e:	b914      	cbnz	r4, 8656 <_fwalk_reent+0x16>
    8650:	4630      	mov	r0, r6
    8652:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8656:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    865a:	3f01      	subs	r7, #1
    865c:	d501      	bpl.n	8662 <_fwalk_reent+0x22>
    865e:	6824      	ldr	r4, [r4, #0]
    8660:	e7f5      	b.n	864e <_fwalk_reent+0xe>
    8662:	89ab      	ldrh	r3, [r5, #12]
    8664:	2b01      	cmp	r3, #1
    8666:	d907      	bls.n	8678 <_fwalk_reent+0x38>
    8668:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    866c:	3301      	adds	r3, #1
    866e:	d003      	beq.n	8678 <_fwalk_reent+0x38>
    8670:	4629      	mov	r1, r5
    8672:	4640      	mov	r0, r8
    8674:	47c8      	blx	r9
    8676:	4306      	orrs	r6, r0
    8678:	3568      	adds	r5, #104	; 0x68
    867a:	e7ee      	b.n	865a <_fwalk_reent+0x1a>

0000867c <rshift>:
rshift():
    867c:	b5f0      	push	{r4, r5, r6, r7, lr}
    867e:	6906      	ldr	r6, [r0, #16]
    8680:	114b      	asrs	r3, r1, #5
    8682:	429e      	cmp	r6, r3
    8684:	f100 0414 	add.w	r4, r0, #20
    8688:	dd30      	ble.n	86ec <rshift+0x70>
    868a:	f011 011f 	ands.w	r1, r1, #31
    868e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    8692:	eb04 0283 	add.w	r2, r4, r3, lsl #2
    8696:	d108      	bne.n	86aa <rshift+0x2e>
    8698:	4621      	mov	r1, r4
    869a:	42b2      	cmp	r2, r6
    869c:	460b      	mov	r3, r1
    869e:	d211      	bcs.n	86c4 <rshift+0x48>
    86a0:	f852 3b04 	ldr.w	r3, [r2], #4
    86a4:	f841 3b04 	str.w	r3, [r1], #4
    86a8:	e7f7      	b.n	869a <rshift+0x1e>
    86aa:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
    86ae:	f1c1 0c20 	rsb	ip, r1, #32
    86b2:	40cd      	lsrs	r5, r1
    86b4:	3204      	adds	r2, #4
    86b6:	4623      	mov	r3, r4
    86b8:	4296      	cmp	r6, r2
    86ba:	4617      	mov	r7, r2
    86bc:	d80c      	bhi.n	86d8 <rshift+0x5c>
    86be:	601d      	str	r5, [r3, #0]
    86c0:	b105      	cbz	r5, 86c4 <rshift+0x48>
    86c2:	3304      	adds	r3, #4
    86c4:	1b1a      	subs	r2, r3, r4
    86c6:	42a3      	cmp	r3, r4
    86c8:	ea4f 02a2 	mov.w	r2, r2, asr #2
    86cc:	bf08      	it	eq
    86ce:	2300      	moveq	r3, #0
    86d0:	6102      	str	r2, [r0, #16]
    86d2:	bf08      	it	eq
    86d4:	6143      	streq	r3, [r0, #20]
    86d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    86d8:	683f      	ldr	r7, [r7, #0]
    86da:	fa07 f70c 	lsl.w	r7, r7, ip
    86de:	433d      	orrs	r5, r7
    86e0:	f843 5b04 	str.w	r5, [r3], #4
    86e4:	f852 5b04 	ldr.w	r5, [r2], #4
    86e8:	40cd      	lsrs	r5, r1
    86ea:	e7e5      	b.n	86b8 <rshift+0x3c>
    86ec:	4623      	mov	r3, r4
    86ee:	e7e9      	b.n	86c4 <rshift+0x48>

000086f0 <__hexdig_fun>:
__hexdig_fun():
    86f0:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    86f4:	2b09      	cmp	r3, #9
    86f6:	d802      	bhi.n	86fe <__hexdig_fun+0xe>
    86f8:	3820      	subs	r0, #32
    86fa:	b2c0      	uxtb	r0, r0
    86fc:	4770      	bx	lr
    86fe:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    8702:	2b05      	cmp	r3, #5
    8704:	d801      	bhi.n	870a <__hexdig_fun+0x1a>
    8706:	3847      	subs	r0, #71	; 0x47
    8708:	e7f7      	b.n	86fa <__hexdig_fun+0xa>
    870a:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
    870e:	2b05      	cmp	r3, #5
    8710:	d801      	bhi.n	8716 <__hexdig_fun+0x26>
    8712:	3827      	subs	r0, #39	; 0x27
    8714:	e7f1      	b.n	86fa <__hexdig_fun+0xa>
    8716:	2000      	movs	r0, #0
    8718:	4770      	bx	lr
    871a:	Address 0x000000000000871a is out of bounds.


0000871c <__gethex>:
__gethex():
    871c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8720:	b08b      	sub	sp, #44	; 0x2c
    8722:	468b      	mov	fp, r1
    8724:	9306      	str	r3, [sp, #24]
    8726:	4bb7      	ldr	r3, [pc, #732]	; (8a04 <__gethex+0x2e8>)
    8728:	9002      	str	r0, [sp, #8]
    872a:	681b      	ldr	r3, [r3, #0]
    872c:	9303      	str	r3, [sp, #12]
    872e:	4618      	mov	r0, r3
    8730:	4690      	mov	r8, r2
    8732:	f7fd ff7a 	bl	662a <strlen>
    8736:	9b03      	ldr	r3, [sp, #12]
    8738:	f8db 2000 	ldr.w	r2, [fp]
    873c:	9001      	str	r0, [sp, #4]
    873e:	4403      	add	r3, r0
    8740:	f813 3c01 	ldrb.w	r3, [r3, #-1]
    8744:	9307      	str	r3, [sp, #28]
    8746:	1c93      	adds	r3, r2, #2
    8748:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
    874c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
    8750:	32fe      	adds	r2, #254	; 0xfe
    8752:	eb02 0a03 	add.w	sl, r2, r3
    8756:	461f      	mov	r7, r3
    8758:	f813 0b01 	ldrb.w	r0, [r3], #1
    875c:	2830      	cmp	r0, #48	; 0x30
    875e:	d0f8      	beq.n	8752 <__gethex+0x36>
    8760:	f7ff ffc6 	bl	86f0 <__hexdig_fun>
    8764:	4604      	mov	r4, r0
    8766:	2800      	cmp	r0, #0
    8768:	d168      	bne.n	883c <__gethex+0x120>
    876a:	9a01      	ldr	r2, [sp, #4]
    876c:	9903      	ldr	r1, [sp, #12]
    876e:	4638      	mov	r0, r7
    8770:	f7fd ff86 	bl	6680 <strncmp>
    8774:	4605      	mov	r5, r0
    8776:	2800      	cmp	r0, #0
    8778:	d163      	bne.n	8842 <__gethex+0x126>
    877a:	9b01      	ldr	r3, [sp, #4]
    877c:	5cf8      	ldrb	r0, [r7, r3]
    877e:	18fe      	adds	r6, r7, r3
    8780:	f7ff ffb6 	bl	86f0 <__hexdig_fun>
    8784:	2800      	cmp	r0, #0
    8786:	d05e      	beq.n	8846 <__gethex+0x12a>
    8788:	4633      	mov	r3, r6
    878a:	7818      	ldrb	r0, [r3, #0]
    878c:	2830      	cmp	r0, #48	; 0x30
    878e:	461f      	mov	r7, r3
    8790:	f103 0301 	add.w	r3, r3, #1
    8794:	d0f9      	beq.n	878a <__gethex+0x6e>
    8796:	f7ff ffab 	bl	86f0 <__hexdig_fun>
    879a:	fab0 f480 	clz	r4, r0
    879e:	0964      	lsrs	r4, r4, #5
    87a0:	4635      	mov	r5, r6
    87a2:	f04f 0a01 	mov.w	sl, #1
    87a6:	463a      	mov	r2, r7
    87a8:	4616      	mov	r6, r2
    87aa:	3201      	adds	r2, #1
    87ac:	7830      	ldrb	r0, [r6, #0]
    87ae:	f7ff ff9f 	bl	86f0 <__hexdig_fun>
    87b2:	2800      	cmp	r0, #0
    87b4:	d1f8      	bne.n	87a8 <__gethex+0x8c>
    87b6:	9a01      	ldr	r2, [sp, #4]
    87b8:	9903      	ldr	r1, [sp, #12]
    87ba:	4630      	mov	r0, r6
    87bc:	f7fd ff60 	bl	6680 <strncmp>
    87c0:	b950      	cbnz	r0, 87d8 <__gethex+0xbc>
    87c2:	b955      	cbnz	r5, 87da <__gethex+0xbe>
    87c4:	9b01      	ldr	r3, [sp, #4]
    87c6:	18f5      	adds	r5, r6, r3
    87c8:	462a      	mov	r2, r5
    87ca:	4616      	mov	r6, r2
    87cc:	3201      	adds	r2, #1
    87ce:	7830      	ldrb	r0, [r6, #0]
    87d0:	f7ff ff8e 	bl	86f0 <__hexdig_fun>
    87d4:	2800      	cmp	r0, #0
    87d6:	d1f8      	bne.n	87ca <__gethex+0xae>
    87d8:	b10d      	cbz	r5, 87de <__gethex+0xc2>
    87da:	1bad      	subs	r5, r5, r6
    87dc:	00ad      	lsls	r5, r5, #2
    87de:	7833      	ldrb	r3, [r6, #0]
    87e0:	2b50      	cmp	r3, #80	; 0x50
    87e2:	d001      	beq.n	87e8 <__gethex+0xcc>
    87e4:	2b70      	cmp	r3, #112	; 0x70
    87e6:	d13c      	bne.n	8862 <__gethex+0x146>
    87e8:	7873      	ldrb	r3, [r6, #1]
    87ea:	2b2b      	cmp	r3, #43	; 0x2b
    87ec:	d02d      	beq.n	884a <__gethex+0x12e>
    87ee:	2b2d      	cmp	r3, #45	; 0x2d
    87f0:	d02f      	beq.n	8852 <__gethex+0x136>
    87f2:	1c71      	adds	r1, r6, #1
    87f4:	f04f 0900 	mov.w	r9, #0
    87f8:	7808      	ldrb	r0, [r1, #0]
    87fa:	f7ff ff79 	bl	86f0 <__hexdig_fun>
    87fe:	1e43      	subs	r3, r0, #1
    8800:	b2db      	uxtb	r3, r3
    8802:	2b18      	cmp	r3, #24
    8804:	d82d      	bhi.n	8862 <__gethex+0x146>
    8806:	f1a0 0210 	sub.w	r2, r0, #16
    880a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
    880e:	f7ff ff6f 	bl	86f0 <__hexdig_fun>
    8812:	1e43      	subs	r3, r0, #1
    8814:	b2db      	uxtb	r3, r3
    8816:	2b18      	cmp	r3, #24
    8818:	d91e      	bls.n	8858 <__gethex+0x13c>
    881a:	f1b9 0f00 	cmp.w	r9, #0
    881e:	d000      	beq.n	8822 <__gethex+0x106>
    8820:	4252      	negs	r2, r2
    8822:	4415      	add	r5, r2
    8824:	f8cb 1000 	str.w	r1, [fp]
    8828:	b1ec      	cbz	r4, 8866 <__gethex+0x14a>
    882a:	f1ba 0f00 	cmp.w	sl, #0
    882e:	bf14      	ite	ne
    8830:	2700      	movne	r7, #0
    8832:	2706      	moveq	r7, #6
    8834:	4638      	mov	r0, r7
    8836:	b00b      	add	sp, #44	; 0x2c
    8838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    883c:	2400      	movs	r4, #0
    883e:	4625      	mov	r5, r4
    8840:	e7b1      	b.n	87a6 <__gethex+0x8a>
    8842:	463e      	mov	r6, r7
    8844:	4625      	mov	r5, r4
    8846:	2401      	movs	r4, #1
    8848:	e7c9      	b.n	87de <__gethex+0xc2>
    884a:	f04f 0900 	mov.w	r9, #0
    884e:	1cb1      	adds	r1, r6, #2
    8850:	e7d2      	b.n	87f8 <__gethex+0xdc>
    8852:	f04f 0901 	mov.w	r9, #1
    8856:	e7fa      	b.n	884e <__gethex+0x132>
    8858:	230a      	movs	r3, #10
    885a:	fb03 0202 	mla	r2, r3, r2, r0
    885e:	3a10      	subs	r2, #16
    8860:	e7d3      	b.n	880a <__gethex+0xee>
    8862:	4631      	mov	r1, r6
    8864:	e7de      	b.n	8824 <__gethex+0x108>
    8866:	1bf3      	subs	r3, r6, r7
    8868:	3b01      	subs	r3, #1
    886a:	4621      	mov	r1, r4
    886c:	2b07      	cmp	r3, #7
    886e:	dc4f      	bgt.n	8910 <__gethex+0x1f4>
    8870:	9802      	ldr	r0, [sp, #8]
    8872:	f000 fb49 	bl	8f08 <_Balloc>
    8876:	9b01      	ldr	r3, [sp, #4]
    8878:	f100 0914 	add.w	r9, r0, #20
    887c:	f04f 0b00 	mov.w	fp, #0
    8880:	f1c3 0301 	rsb	r3, r3, #1
    8884:	4604      	mov	r4, r0
    8886:	f8cd 9010 	str.w	r9, [sp, #16]
    888a:	46da      	mov	sl, fp
    888c:	9308      	str	r3, [sp, #32]
    888e:	42b7      	cmp	r7, r6
    8890:	d341      	bcc.n	8916 <__gethex+0x1fa>
    8892:	9804      	ldr	r0, [sp, #16]
    8894:	f840 ab04 	str.w	sl, [r0], #4
    8898:	eba0 0009 	sub.w	r0, r0, r9
    889c:	1080      	asrs	r0, r0, #2
    889e:	6120      	str	r0, [r4, #16]
    88a0:	0147      	lsls	r7, r0, #5
    88a2:	4650      	mov	r0, sl
    88a4:	f000 fbf4 	bl	9090 <__hi0bits>
    88a8:	f8d8 6000 	ldr.w	r6, [r8]
    88ac:	1a3f      	subs	r7, r7, r0
    88ae:	42b7      	cmp	r7, r6
    88b0:	dd63      	ble.n	897a <__gethex+0x25e>
    88b2:	1bbf      	subs	r7, r7, r6
    88b4:	4639      	mov	r1, r7
    88b6:	4620      	mov	r0, r4
    88b8:	f000 fefd 	bl	96b6 <__any_on>
    88bc:	4682      	mov	sl, r0
    88be:	b1a8      	cbz	r0, 88ec <__gethex+0x1d0>
    88c0:	1e7b      	subs	r3, r7, #1
    88c2:	1159      	asrs	r1, r3, #5
    88c4:	f003 021f 	and.w	r2, r3, #31
    88c8:	f04f 0a01 	mov.w	sl, #1
    88cc:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
    88d0:	fa0a f202 	lsl.w	r2, sl, r2
    88d4:	420a      	tst	r2, r1
    88d6:	d009      	beq.n	88ec <__gethex+0x1d0>
    88d8:	4553      	cmp	r3, sl
    88da:	dd05      	ble.n	88e8 <__gethex+0x1cc>
    88dc:	1eb9      	subs	r1, r7, #2
    88de:	4620      	mov	r0, r4
    88e0:	f000 fee9 	bl	96b6 <__any_on>
    88e4:	2800      	cmp	r0, #0
    88e6:	d145      	bne.n	8974 <__gethex+0x258>
    88e8:	f04f 0a02 	mov.w	sl, #2
    88ec:	4639      	mov	r1, r7
    88ee:	4620      	mov	r0, r4
    88f0:	f7ff fec4 	bl	867c <rshift>
    88f4:	443d      	add	r5, r7
    88f6:	f8d8 3008 	ldr.w	r3, [r8, #8]
    88fa:	42ab      	cmp	r3, r5
    88fc:	da4b      	bge.n	8996 <__gethex+0x27a>
    88fe:	4621      	mov	r1, r4
    8900:	9802      	ldr	r0, [sp, #8]
    8902:	f000 fb35 	bl	8f70 <_Bfree>
    8906:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8908:	2300      	movs	r3, #0
    890a:	6013      	str	r3, [r2, #0]
    890c:	27a3      	movs	r7, #163	; 0xa3
    890e:	e791      	b.n	8834 <__gethex+0x118>
    8910:	3101      	adds	r1, #1
    8912:	105b      	asrs	r3, r3, #1
    8914:	e7aa      	b.n	886c <__gethex+0x150>
    8916:	1e73      	subs	r3, r6, #1
    8918:	9305      	str	r3, [sp, #20]
    891a:	9a07      	ldr	r2, [sp, #28]
    891c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
    8920:	4293      	cmp	r3, r2
    8922:	d017      	beq.n	8954 <__gethex+0x238>
    8924:	f1bb 0f20 	cmp.w	fp, #32
    8928:	d106      	bne.n	8938 <__gethex+0x21c>
    892a:	9b04      	ldr	r3, [sp, #16]
    892c:	f843 ab04 	str.w	sl, [r3], #4
    8930:	f04f 0a00 	mov.w	sl, #0
    8934:	9304      	str	r3, [sp, #16]
    8936:	46d3      	mov	fp, sl
    8938:	f816 0c01 	ldrb.w	r0, [r6, #-1]
    893c:	f7ff fed8 	bl	86f0 <__hexdig_fun>
    8940:	f000 000f 	and.w	r0, r0, #15
    8944:	fa00 f00b 	lsl.w	r0, r0, fp
    8948:	ea4a 0a00 	orr.w	sl, sl, r0
    894c:	f10b 0b04 	add.w	fp, fp, #4
    8950:	9b05      	ldr	r3, [sp, #20]
    8952:	e00d      	b.n	8970 <__gethex+0x254>
    8954:	9b05      	ldr	r3, [sp, #20]
    8956:	9a08      	ldr	r2, [sp, #32]
    8958:	4413      	add	r3, r2
    895a:	42bb      	cmp	r3, r7
    895c:	d3e2      	bcc.n	8924 <__gethex+0x208>
    895e:	4618      	mov	r0, r3
    8960:	9a01      	ldr	r2, [sp, #4]
    8962:	9903      	ldr	r1, [sp, #12]
    8964:	9309      	str	r3, [sp, #36]	; 0x24
    8966:	f7fd fe8b 	bl	6680 <strncmp>
    896a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    896c:	2800      	cmp	r0, #0
    896e:	d1d9      	bne.n	8924 <__gethex+0x208>
    8970:	461e      	mov	r6, r3
    8972:	e78c      	b.n	888e <__gethex+0x172>
    8974:	f04f 0a03 	mov.w	sl, #3
    8978:	e7b8      	b.n	88ec <__gethex+0x1d0>
    897a:	da09      	bge.n	8990 <__gethex+0x274>
    897c:	1bf7      	subs	r7, r6, r7
    897e:	4621      	mov	r1, r4
    8980:	463a      	mov	r2, r7
    8982:	9802      	ldr	r0, [sp, #8]
    8984:	f000 fcbc 	bl	9300 <__lshift>
    8988:	1bed      	subs	r5, r5, r7
    898a:	4604      	mov	r4, r0
    898c:	f100 0914 	add.w	r9, r0, #20
    8990:	f04f 0a00 	mov.w	sl, #0
    8994:	e7af      	b.n	88f6 <__gethex+0x1da>
    8996:	f8d8 3004 	ldr.w	r3, [r8, #4]
    899a:	42ab      	cmp	r3, r5
    899c:	dd6d      	ble.n	8a7a <__gethex+0x35e>
    899e:	1b5d      	subs	r5, r3, r5
    89a0:	42ae      	cmp	r6, r5
    89a2:	dc31      	bgt.n	8a08 <__gethex+0x2ec>
    89a4:	f8d8 300c 	ldr.w	r3, [r8, #12]
    89a8:	2b02      	cmp	r3, #2
    89aa:	d022      	beq.n	89f2 <__gethex+0x2d6>
    89ac:	2b03      	cmp	r3, #3
    89ae:	d024      	beq.n	89fa <__gethex+0x2de>
    89b0:	2b01      	cmp	r3, #1
    89b2:	d115      	bne.n	89e0 <__gethex+0x2c4>
    89b4:	42ae      	cmp	r6, r5
    89b6:	d113      	bne.n	89e0 <__gethex+0x2c4>
    89b8:	2e01      	cmp	r6, #1
    89ba:	d10b      	bne.n	89d4 <__gethex+0x2b8>
    89bc:	9a06      	ldr	r2, [sp, #24]
    89be:	f8d8 3004 	ldr.w	r3, [r8, #4]
    89c2:	6013      	str	r3, [r2, #0]
    89c4:	2301      	movs	r3, #1
    89c6:	6123      	str	r3, [r4, #16]
    89c8:	f8c9 3000 	str.w	r3, [r9]
    89cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    89ce:	2762      	movs	r7, #98	; 0x62
    89d0:	601c      	str	r4, [r3, #0]
    89d2:	e72f      	b.n	8834 <__gethex+0x118>
    89d4:	1e71      	subs	r1, r6, #1
    89d6:	4620      	mov	r0, r4
    89d8:	f000 fe6d 	bl	96b6 <__any_on>
    89dc:	2800      	cmp	r0, #0
    89de:	d1ed      	bne.n	89bc <__gethex+0x2a0>
    89e0:	4621      	mov	r1, r4
    89e2:	9802      	ldr	r0, [sp, #8]
    89e4:	f000 fac4 	bl	8f70 <_Bfree>
    89e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
    89ea:	2300      	movs	r3, #0
    89ec:	6013      	str	r3, [r2, #0]
    89ee:	2750      	movs	r7, #80	; 0x50
    89f0:	e720      	b.n	8834 <__gethex+0x118>
    89f2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    89f4:	2b00      	cmp	r3, #0
    89f6:	d1f3      	bne.n	89e0 <__gethex+0x2c4>
    89f8:	e7e0      	b.n	89bc <__gethex+0x2a0>
    89fa:	9b15      	ldr	r3, [sp, #84]	; 0x54
    89fc:	2b00      	cmp	r3, #0
    89fe:	d1dd      	bne.n	89bc <__gethex+0x2a0>
    8a00:	e7ee      	b.n	89e0 <__gethex+0x2c4>
    8a02:	bf00      	nop
    8a04:	0000bc18 	.word	0x0000bc18
    8a08:	1e6f      	subs	r7, r5, #1
    8a0a:	f1ba 0f00 	cmp.w	sl, #0
    8a0e:	d131      	bne.n	8a74 <__gethex+0x358>
    8a10:	b127      	cbz	r7, 8a1c <__gethex+0x300>
    8a12:	4639      	mov	r1, r7
    8a14:	4620      	mov	r0, r4
    8a16:	f000 fe4e 	bl	96b6 <__any_on>
    8a1a:	4682      	mov	sl, r0
    8a1c:	117a      	asrs	r2, r7, #5
    8a1e:	2301      	movs	r3, #1
    8a20:	f007 071f 	and.w	r7, r7, #31
    8a24:	fa03 f707 	lsl.w	r7, r3, r7
    8a28:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
    8a2c:	4629      	mov	r1, r5
    8a2e:	421f      	tst	r7, r3
    8a30:	4620      	mov	r0, r4
    8a32:	bf18      	it	ne
    8a34:	f04a 0a02 	orrne.w	sl, sl, #2
    8a38:	1b76      	subs	r6, r6, r5
    8a3a:	f7ff fe1f 	bl	867c <rshift>
    8a3e:	f8d8 5004 	ldr.w	r5, [r8, #4]
    8a42:	2702      	movs	r7, #2
    8a44:	f1ba 0f00 	cmp.w	sl, #0
    8a48:	d048      	beq.n	8adc <__gethex+0x3c0>
    8a4a:	f8d8 300c 	ldr.w	r3, [r8, #12]
    8a4e:	2b02      	cmp	r3, #2
    8a50:	d015      	beq.n	8a7e <__gethex+0x362>
    8a52:	2b03      	cmp	r3, #3
    8a54:	d017      	beq.n	8a86 <__gethex+0x36a>
    8a56:	2b01      	cmp	r3, #1
    8a58:	d109      	bne.n	8a6e <__gethex+0x352>
    8a5a:	f01a 0f02 	tst.w	sl, #2
    8a5e:	d006      	beq.n	8a6e <__gethex+0x352>
    8a60:	f8d9 3000 	ldr.w	r3, [r9]
    8a64:	ea4a 0a03 	orr.w	sl, sl, r3
    8a68:	f01a 0f01 	tst.w	sl, #1
    8a6c:	d10e      	bne.n	8a8c <__gethex+0x370>
    8a6e:	f047 0710 	orr.w	r7, r7, #16
    8a72:	e033      	b.n	8adc <__gethex+0x3c0>
    8a74:	f04f 0a01 	mov.w	sl, #1
    8a78:	e7d0      	b.n	8a1c <__gethex+0x300>
    8a7a:	2701      	movs	r7, #1
    8a7c:	e7e2      	b.n	8a44 <__gethex+0x328>
    8a7e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8a80:	f1c3 0301 	rsb	r3, r3, #1
    8a84:	9315      	str	r3, [sp, #84]	; 0x54
    8a86:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8a88:	2b00      	cmp	r3, #0
    8a8a:	d0f0      	beq.n	8a6e <__gethex+0x352>
    8a8c:	f8d4 9010 	ldr.w	r9, [r4, #16]
    8a90:	f104 0314 	add.w	r3, r4, #20
    8a94:	ea4f 0a89 	mov.w	sl, r9, lsl #2
    8a98:	eb03 010a 	add.w	r1, r3, sl
    8a9c:	f04f 0c00 	mov.w	ip, #0
    8aa0:	4618      	mov	r0, r3
    8aa2:	f853 2b04 	ldr.w	r2, [r3], #4
    8aa6:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
    8aaa:	d01c      	beq.n	8ae6 <__gethex+0x3ca>
    8aac:	3201      	adds	r2, #1
    8aae:	6002      	str	r2, [r0, #0]
    8ab0:	2f02      	cmp	r7, #2
    8ab2:	f104 0314 	add.w	r3, r4, #20
    8ab6:	d138      	bne.n	8b2a <__gethex+0x40e>
    8ab8:	f8d8 2000 	ldr.w	r2, [r8]
    8abc:	3a01      	subs	r2, #1
    8abe:	42b2      	cmp	r2, r6
    8ac0:	d10a      	bne.n	8ad8 <__gethex+0x3bc>
    8ac2:	1171      	asrs	r1, r6, #5
    8ac4:	2201      	movs	r2, #1
    8ac6:	f006 061f 	and.w	r6, r6, #31
    8aca:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    8ace:	fa02 f606 	lsl.w	r6, r2, r6
    8ad2:	421e      	tst	r6, r3
    8ad4:	bf18      	it	ne
    8ad6:	4617      	movne	r7, r2
    8ad8:	f047 0720 	orr.w	r7, r7, #32
    8adc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8ade:	601c      	str	r4, [r3, #0]
    8ae0:	9b06      	ldr	r3, [sp, #24]
    8ae2:	601d      	str	r5, [r3, #0]
    8ae4:	e6a6      	b.n	8834 <__gethex+0x118>
    8ae6:	4299      	cmp	r1, r3
    8ae8:	f843 cc04 	str.w	ip, [r3, #-4]
    8aec:	d8d8      	bhi.n	8aa0 <__gethex+0x384>
    8aee:	68a3      	ldr	r3, [r4, #8]
    8af0:	4599      	cmp	r9, r3
    8af2:	db12      	blt.n	8b1a <__gethex+0x3fe>
    8af4:	6861      	ldr	r1, [r4, #4]
    8af6:	9802      	ldr	r0, [sp, #8]
    8af8:	3101      	adds	r1, #1
    8afa:	f000 fa05 	bl	8f08 <_Balloc>
    8afe:	6922      	ldr	r2, [r4, #16]
    8b00:	3202      	adds	r2, #2
    8b02:	f104 010c 	add.w	r1, r4, #12
    8b06:	4683      	mov	fp, r0
    8b08:	0092      	lsls	r2, r2, #2
    8b0a:	300c      	adds	r0, #12
    8b0c:	f7fc fb7c 	bl	5208 <memcpy>
    8b10:	4621      	mov	r1, r4
    8b12:	9802      	ldr	r0, [sp, #8]
    8b14:	f000 fa2c 	bl	8f70 <_Bfree>
    8b18:	465c      	mov	r4, fp
    8b1a:	6923      	ldr	r3, [r4, #16]
    8b1c:	1c5a      	adds	r2, r3, #1
    8b1e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    8b22:	6122      	str	r2, [r4, #16]
    8b24:	2201      	movs	r2, #1
    8b26:	615a      	str	r2, [r3, #20]
    8b28:	e7c2      	b.n	8ab0 <__gethex+0x394>
    8b2a:	6922      	ldr	r2, [r4, #16]
    8b2c:	454a      	cmp	r2, r9
    8b2e:	dd0b      	ble.n	8b48 <__gethex+0x42c>
    8b30:	2101      	movs	r1, #1
    8b32:	4620      	mov	r0, r4
    8b34:	f7ff fda2 	bl	867c <rshift>
    8b38:	f8d8 3008 	ldr.w	r3, [r8, #8]
    8b3c:	3501      	adds	r5, #1
    8b3e:	42ab      	cmp	r3, r5
    8b40:	f6ff aedd 	blt.w	88fe <__gethex+0x1e2>
    8b44:	2701      	movs	r7, #1
    8b46:	e7c7      	b.n	8ad8 <__gethex+0x3bc>
    8b48:	f016 061f 	ands.w	r6, r6, #31
    8b4c:	d0fa      	beq.n	8b44 <__gethex+0x428>
    8b4e:	449a      	add	sl, r3
    8b50:	f1c6 0620 	rsb	r6, r6, #32
    8b54:	f85a 0c04 	ldr.w	r0, [sl, #-4]
    8b58:	f000 fa9a 	bl	9090 <__hi0bits>
    8b5c:	42b0      	cmp	r0, r6
    8b5e:	dbe7      	blt.n	8b30 <__gethex+0x414>
    8b60:	e7f0      	b.n	8b44 <__gethex+0x428>
    8b62:	bf00      	nop

00008b64 <L_shift>:
L_shift():
    8b64:	f1c2 0208 	rsb	r2, r2, #8
    8b68:	0092      	lsls	r2, r2, #2
    8b6a:	b570      	push	{r4, r5, r6, lr}
    8b6c:	f1c2 0620 	rsb	r6, r2, #32
    8b70:	6843      	ldr	r3, [r0, #4]
    8b72:	6804      	ldr	r4, [r0, #0]
    8b74:	fa03 f506 	lsl.w	r5, r3, r6
    8b78:	432c      	orrs	r4, r5
    8b7a:	40d3      	lsrs	r3, r2
    8b7c:	6004      	str	r4, [r0, #0]
    8b7e:	f840 3f04 	str.w	r3, [r0, #4]!
    8b82:	4288      	cmp	r0, r1
    8b84:	d3f4      	bcc.n	8b70 <L_shift+0xc>
    8b86:	bd70      	pop	{r4, r5, r6, pc}

00008b88 <__match>:
__match():
    8b88:	b530      	push	{r4, r5, lr}
    8b8a:	6803      	ldr	r3, [r0, #0]
    8b8c:	3301      	adds	r3, #1
    8b8e:	f811 4b01 	ldrb.w	r4, [r1], #1
    8b92:	b914      	cbnz	r4, 8b9a <__match+0x12>
    8b94:	6003      	str	r3, [r0, #0]
    8b96:	2001      	movs	r0, #1
    8b98:	bd30      	pop	{r4, r5, pc}
    8b9a:	f813 2b01 	ldrb.w	r2, [r3], #1
    8b9e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
    8ba2:	2d19      	cmp	r5, #25
    8ba4:	bf98      	it	ls
    8ba6:	3220      	addls	r2, #32
    8ba8:	42a2      	cmp	r2, r4
    8baa:	d0f0      	beq.n	8b8e <__match+0x6>
    8bac:	2000      	movs	r0, #0
    8bae:	e7f3      	b.n	8b98 <__match+0x10>

00008bb0 <__hexnan>:
__hexnan():
    8bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8bb4:	680b      	ldr	r3, [r1, #0]
    8bb6:	6801      	ldr	r1, [r0, #0]
    8bb8:	115f      	asrs	r7, r3, #5
    8bba:	eb02 0787 	add.w	r7, r2, r7, lsl #2
    8bbe:	f013 031f 	ands.w	r3, r3, #31
    8bc2:	b087      	sub	sp, #28
    8bc4:	bf18      	it	ne
    8bc6:	3704      	addne	r7, #4
    8bc8:	2500      	movs	r5, #0
    8bca:	1f3e      	subs	r6, r7, #4
    8bcc:	4682      	mov	sl, r0
    8bce:	4690      	mov	r8, r2
    8bd0:	9301      	str	r3, [sp, #4]
    8bd2:	f847 5c04 	str.w	r5, [r7, #-4]
    8bd6:	46b1      	mov	r9, r6
    8bd8:	4634      	mov	r4, r6
    8bda:	9502      	str	r5, [sp, #8]
    8bdc:	46ab      	mov	fp, r5
    8bde:	784a      	ldrb	r2, [r1, #1]
    8be0:	1c4b      	adds	r3, r1, #1
    8be2:	9303      	str	r3, [sp, #12]
    8be4:	b342      	cbz	r2, 8c38 <__hexnan+0x88>
    8be6:	4610      	mov	r0, r2
    8be8:	9105      	str	r1, [sp, #20]
    8bea:	9204      	str	r2, [sp, #16]
    8bec:	f7ff fd80 	bl	86f0 <__hexdig_fun>
    8bf0:	2800      	cmp	r0, #0
    8bf2:	d143      	bne.n	8c7c <__hexnan+0xcc>
    8bf4:	9a04      	ldr	r2, [sp, #16]
    8bf6:	9905      	ldr	r1, [sp, #20]
    8bf8:	2a20      	cmp	r2, #32
    8bfa:	d818      	bhi.n	8c2e <__hexnan+0x7e>
    8bfc:	9b02      	ldr	r3, [sp, #8]
    8bfe:	459b      	cmp	fp, r3
    8c00:	dd13      	ble.n	8c2a <__hexnan+0x7a>
    8c02:	454c      	cmp	r4, r9
    8c04:	d206      	bcs.n	8c14 <__hexnan+0x64>
    8c06:	2d07      	cmp	r5, #7
    8c08:	dc04      	bgt.n	8c14 <__hexnan+0x64>
    8c0a:	462a      	mov	r2, r5
    8c0c:	4649      	mov	r1, r9
    8c0e:	4620      	mov	r0, r4
    8c10:	f7ff ffa8 	bl	8b64 <L_shift>
    8c14:	4544      	cmp	r4, r8
    8c16:	d944      	bls.n	8ca2 <__hexnan+0xf2>
    8c18:	2300      	movs	r3, #0
    8c1a:	f1a4 0904 	sub.w	r9, r4, #4
    8c1e:	f844 3c04 	str.w	r3, [r4, #-4]
    8c22:	f8cd b008 	str.w	fp, [sp, #8]
    8c26:	464c      	mov	r4, r9
    8c28:	461d      	mov	r5, r3
    8c2a:	9903      	ldr	r1, [sp, #12]
    8c2c:	e7d7      	b.n	8bde <__hexnan+0x2e>
    8c2e:	2a29      	cmp	r2, #41	; 0x29
    8c30:	d14a      	bne.n	8cc8 <__hexnan+0x118>
    8c32:	3102      	adds	r1, #2
    8c34:	f8ca 1000 	str.w	r1, [sl]
    8c38:	f1bb 0f00 	cmp.w	fp, #0
    8c3c:	d044      	beq.n	8cc8 <__hexnan+0x118>
    8c3e:	454c      	cmp	r4, r9
    8c40:	d206      	bcs.n	8c50 <__hexnan+0xa0>
    8c42:	2d07      	cmp	r5, #7
    8c44:	dc04      	bgt.n	8c50 <__hexnan+0xa0>
    8c46:	462a      	mov	r2, r5
    8c48:	4649      	mov	r1, r9
    8c4a:	4620      	mov	r0, r4
    8c4c:	f7ff ff8a 	bl	8b64 <L_shift>
    8c50:	4544      	cmp	r4, r8
    8c52:	d928      	bls.n	8ca6 <__hexnan+0xf6>
    8c54:	4643      	mov	r3, r8
    8c56:	f854 2b04 	ldr.w	r2, [r4], #4
    8c5a:	f843 2b04 	str.w	r2, [r3], #4
    8c5e:	42a6      	cmp	r6, r4
    8c60:	d2f9      	bcs.n	8c56 <__hexnan+0xa6>
    8c62:	2200      	movs	r2, #0
    8c64:	f843 2b04 	str.w	r2, [r3], #4
    8c68:	429e      	cmp	r6, r3
    8c6a:	d2fb      	bcs.n	8c64 <__hexnan+0xb4>
    8c6c:	6833      	ldr	r3, [r6, #0]
    8c6e:	b91b      	cbnz	r3, 8c78 <__hexnan+0xc8>
    8c70:	4546      	cmp	r6, r8
    8c72:	d127      	bne.n	8cc4 <__hexnan+0x114>
    8c74:	2301      	movs	r3, #1
    8c76:	6033      	str	r3, [r6, #0]
    8c78:	2005      	movs	r0, #5
    8c7a:	e026      	b.n	8cca <__hexnan+0x11a>
    8c7c:	3501      	adds	r5, #1
    8c7e:	2d08      	cmp	r5, #8
    8c80:	f10b 0b01 	add.w	fp, fp, #1
    8c84:	dd06      	ble.n	8c94 <__hexnan+0xe4>
    8c86:	4544      	cmp	r4, r8
    8c88:	d9cf      	bls.n	8c2a <__hexnan+0x7a>
    8c8a:	2300      	movs	r3, #0
    8c8c:	f844 3c04 	str.w	r3, [r4, #-4]
    8c90:	2501      	movs	r5, #1
    8c92:	3c04      	subs	r4, #4
    8c94:	6822      	ldr	r2, [r4, #0]
    8c96:	f000 000f 	and.w	r0, r0, #15
    8c9a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
    8c9e:	6020      	str	r0, [r4, #0]
    8ca0:	e7c3      	b.n	8c2a <__hexnan+0x7a>
    8ca2:	2508      	movs	r5, #8
    8ca4:	e7c1      	b.n	8c2a <__hexnan+0x7a>
    8ca6:	9b01      	ldr	r3, [sp, #4]
    8ca8:	2b00      	cmp	r3, #0
    8caa:	d0df      	beq.n	8c6c <__hexnan+0xbc>
    8cac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    8cb0:	f1c3 0320 	rsb	r3, r3, #32
    8cb4:	fa22 f303 	lsr.w	r3, r2, r3
    8cb8:	f857 2c04 	ldr.w	r2, [r7, #-4]
    8cbc:	401a      	ands	r2, r3
    8cbe:	f847 2c04 	str.w	r2, [r7, #-4]
    8cc2:	e7d3      	b.n	8c6c <__hexnan+0xbc>
    8cc4:	3e04      	subs	r6, #4
    8cc6:	e7d1      	b.n	8c6c <__hexnan+0xbc>
    8cc8:	2004      	movs	r0, #4
    8cca:	b007      	add	sp, #28
    8ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00008cd0 <_getc_r>:
_getc_r():
    8cd0:	b538      	push	{r3, r4, r5, lr}
    8cd2:	460c      	mov	r4, r1
    8cd4:	4605      	mov	r5, r0
    8cd6:	b118      	cbz	r0, 8ce0 <_getc_r+0x10>
    8cd8:	6983      	ldr	r3, [r0, #24]
    8cda:	b90b      	cbnz	r3, 8ce0 <_getc_r+0x10>
    8cdc:	f7ff fc16 	bl	850c <__sinit>
    8ce0:	4b18      	ldr	r3, [pc, #96]	; (8d44 <_getc_r+0x74>)
    8ce2:	429c      	cmp	r4, r3
    8ce4:	d11e      	bne.n	8d24 <_getc_r+0x54>
    8ce6:	686c      	ldr	r4, [r5, #4]
    8ce8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8cea:	07d8      	lsls	r0, r3, #31
    8cec:	d405      	bmi.n	8cfa <_getc_r+0x2a>
    8cee:	89a3      	ldrh	r3, [r4, #12]
    8cf0:	0599      	lsls	r1, r3, #22
    8cf2:	d402      	bmi.n	8cfa <_getc_r+0x2a>
    8cf4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8cf6:	f7fc fa74 	bl	51e2 <__retarget_lock_acquire_recursive>
    8cfa:	6863      	ldr	r3, [r4, #4]
    8cfc:	3b01      	subs	r3, #1
    8cfe:	2b00      	cmp	r3, #0
    8d00:	6063      	str	r3, [r4, #4]
    8d02:	da19      	bge.n	8d38 <_getc_r+0x68>
    8d04:	4628      	mov	r0, r5
    8d06:	4621      	mov	r1, r4
    8d08:	f001 f9b4 	bl	a074 <__srget_r>
    8d0c:	4605      	mov	r5, r0
    8d0e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    8d10:	07da      	lsls	r2, r3, #31
    8d12:	d405      	bmi.n	8d20 <_getc_r+0x50>
    8d14:	89a3      	ldrh	r3, [r4, #12]
    8d16:	059b      	lsls	r3, r3, #22
    8d18:	d402      	bmi.n	8d20 <_getc_r+0x50>
    8d1a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    8d1c:	f7fc fa62 	bl	51e4 <__retarget_lock_release_recursive>
    8d20:	4628      	mov	r0, r5
    8d22:	bd38      	pop	{r3, r4, r5, pc}
    8d24:	4b08      	ldr	r3, [pc, #32]	; (8d48 <_getc_r+0x78>)
    8d26:	429c      	cmp	r4, r3
    8d28:	d101      	bne.n	8d2e <_getc_r+0x5e>
    8d2a:	68ac      	ldr	r4, [r5, #8]
    8d2c:	e7dc      	b.n	8ce8 <_getc_r+0x18>
    8d2e:	4b07      	ldr	r3, [pc, #28]	; (8d4c <_getc_r+0x7c>)
    8d30:	429c      	cmp	r4, r3
    8d32:	bf08      	it	eq
    8d34:	68ec      	ldreq	r4, [r5, #12]
    8d36:	e7d7      	b.n	8ce8 <_getc_r+0x18>
    8d38:	6823      	ldr	r3, [r4, #0]
    8d3a:	1c5a      	adds	r2, r3, #1
    8d3c:	6022      	str	r2, [r4, #0]
    8d3e:	781d      	ldrb	r5, [r3, #0]
    8d40:	e7e5      	b.n	8d0e <_getc_r+0x3e>
    8d42:	bf00      	nop
    8d44:	0000bbd8 	.word	0x0000bbd8
    8d48:	0000bbf8 	.word	0x0000bbf8
    8d4c:	0000bbb8 	.word	0x0000bbb8

00008d50 <_localeconv_r>:
_localeconv_r():
    8d50:	4800      	ldr	r0, [pc, #0]	; (8d54 <_localeconv_r+0x4>)
    8d52:	4770      	bx	lr
    8d54:	100002cc 	.word	0x100002cc

00008d58 <__swhatbuf_r>:
__swhatbuf_r():
    8d58:	b570      	push	{r4, r5, r6, lr}
    8d5a:	460e      	mov	r6, r1
    8d5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    8d60:	2900      	cmp	r1, #0
    8d62:	b096      	sub	sp, #88	; 0x58
    8d64:	4614      	mov	r4, r2
    8d66:	461d      	mov	r5, r3
    8d68:	da07      	bge.n	8d7a <__swhatbuf_r+0x22>
    8d6a:	2300      	movs	r3, #0
    8d6c:	602b      	str	r3, [r5, #0]
    8d6e:	89b3      	ldrh	r3, [r6, #12]
    8d70:	061a      	lsls	r2, r3, #24
    8d72:	d410      	bmi.n	8d96 <__swhatbuf_r+0x3e>
    8d74:	f44f 6380 	mov.w	r3, #1024	; 0x400
    8d78:	e00e      	b.n	8d98 <__swhatbuf_r+0x40>
    8d7a:	466a      	mov	r2, sp
    8d7c:	f001 fb0a 	bl	a394 <_fstat_r>
    8d80:	2800      	cmp	r0, #0
    8d82:	dbf2      	blt.n	8d6a <__swhatbuf_r+0x12>
    8d84:	9a01      	ldr	r2, [sp, #4]
    8d86:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    8d8a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
    8d8e:	425a      	negs	r2, r3
    8d90:	415a      	adcs	r2, r3
    8d92:	602a      	str	r2, [r5, #0]
    8d94:	e7ee      	b.n	8d74 <__swhatbuf_r+0x1c>
    8d96:	2340      	movs	r3, #64	; 0x40
    8d98:	2000      	movs	r0, #0
    8d9a:	6023      	str	r3, [r4, #0]
    8d9c:	b016      	add	sp, #88	; 0x58
    8d9e:	bd70      	pop	{r4, r5, r6, pc}

00008da0 <__smakebuf_r>:
__smakebuf_r():
    8da0:	898b      	ldrh	r3, [r1, #12]
    8da2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    8da4:	079d      	lsls	r5, r3, #30
    8da6:	4606      	mov	r6, r0
    8da8:	460c      	mov	r4, r1
    8daa:	d507      	bpl.n	8dbc <__smakebuf_r+0x1c>
    8dac:	f104 0347 	add.w	r3, r4, #71	; 0x47
    8db0:	6023      	str	r3, [r4, #0]
    8db2:	6123      	str	r3, [r4, #16]
    8db4:	2301      	movs	r3, #1
    8db6:	6163      	str	r3, [r4, #20]
    8db8:	b002      	add	sp, #8
    8dba:	bd70      	pop	{r4, r5, r6, pc}
    8dbc:	ab01      	add	r3, sp, #4
    8dbe:	466a      	mov	r2, sp
    8dc0:	f7ff ffca 	bl	8d58 <__swhatbuf_r>
    8dc4:	9900      	ldr	r1, [sp, #0]
    8dc6:	4605      	mov	r5, r0
    8dc8:	4630      	mov	r0, r6
    8dca:	f7fc fa9b 	bl	5304 <_malloc_r>
    8dce:	b948      	cbnz	r0, 8de4 <__smakebuf_r+0x44>
    8dd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    8dd4:	059a      	lsls	r2, r3, #22
    8dd6:	d4ef      	bmi.n	8db8 <__smakebuf_r+0x18>
    8dd8:	f023 0303 	bic.w	r3, r3, #3
    8ddc:	f043 0302 	orr.w	r3, r3, #2
    8de0:	81a3      	strh	r3, [r4, #12]
    8de2:	e7e3      	b.n	8dac <__smakebuf_r+0xc>
    8de4:	4b0d      	ldr	r3, [pc, #52]	; (8e1c <__smakebuf_r+0x7c>)
    8de6:	62b3      	str	r3, [r6, #40]	; 0x28
    8de8:	89a3      	ldrh	r3, [r4, #12]
    8dea:	6020      	str	r0, [r4, #0]
    8dec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    8df0:	81a3      	strh	r3, [r4, #12]
    8df2:	9b00      	ldr	r3, [sp, #0]
    8df4:	6163      	str	r3, [r4, #20]
    8df6:	9b01      	ldr	r3, [sp, #4]
    8df8:	6120      	str	r0, [r4, #16]
    8dfa:	b15b      	cbz	r3, 8e14 <__smakebuf_r+0x74>
    8dfc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    8e00:	4630      	mov	r0, r6
    8e02:	f001 fad9 	bl	a3b8 <_isatty_r>
    8e06:	b128      	cbz	r0, 8e14 <__smakebuf_r+0x74>
    8e08:	89a3      	ldrh	r3, [r4, #12]
    8e0a:	f023 0303 	bic.w	r3, r3, #3
    8e0e:	f043 0301 	orr.w	r3, r3, #1
    8e12:	81a3      	strh	r3, [r4, #12]
    8e14:	89a3      	ldrh	r3, [r4, #12]
    8e16:	431d      	orrs	r5, r3
    8e18:	81a5      	strh	r5, [r4, #12]
    8e1a:	e7cd      	b.n	8db8 <__smakebuf_r+0x18>
    8e1c:	000084a5 	.word	0x000084a5

00008e20 <__ascii_mbtowc>:
__ascii_mbtowc():
    8e20:	b082      	sub	sp, #8
    8e22:	b901      	cbnz	r1, 8e26 <__ascii_mbtowc+0x6>
    8e24:	a901      	add	r1, sp, #4
    8e26:	b142      	cbz	r2, 8e3a <__ascii_mbtowc+0x1a>
    8e28:	b14b      	cbz	r3, 8e3e <__ascii_mbtowc+0x1e>
    8e2a:	7813      	ldrb	r3, [r2, #0]
    8e2c:	600b      	str	r3, [r1, #0]
    8e2e:	7812      	ldrb	r2, [r2, #0]
    8e30:	1c10      	adds	r0, r2, #0
    8e32:	bf18      	it	ne
    8e34:	2001      	movne	r0, #1
    8e36:	b002      	add	sp, #8
    8e38:	4770      	bx	lr
    8e3a:	4610      	mov	r0, r2
    8e3c:	e7fb      	b.n	8e36 <__ascii_mbtowc+0x16>
    8e3e:	f06f 0001 	mvn.w	r0, #1
    8e42:	e7f8      	b.n	8e36 <__ascii_mbtowc+0x16>
    8e44:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    8e48:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    8e4c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

00008e50 <memchr>:
memchr():
    8e50:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    8e54:	2a10      	cmp	r2, #16
    8e56:	db2b      	blt.n	8eb0 <memchr+0x60>
    8e58:	f010 0f07 	tst.w	r0, #7
    8e5c:	d008      	beq.n	8e70 <memchr+0x20>
    8e5e:	f810 3b01 	ldrb.w	r3, [r0], #1
    8e62:	3a01      	subs	r2, #1
    8e64:	428b      	cmp	r3, r1
    8e66:	d02d      	beq.n	8ec4 <memchr+0x74>
    8e68:	f010 0f07 	tst.w	r0, #7
    8e6c:	b342      	cbz	r2, 8ec0 <memchr+0x70>
    8e6e:	d1f6      	bne.n	8e5e <memchr+0xe>
    8e70:	b4f0      	push	{r4, r5, r6, r7}
    8e72:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    8e76:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    8e7a:	f022 0407 	bic.w	r4, r2, #7
    8e7e:	f07f 0700 	mvns.w	r7, #0
    8e82:	2300      	movs	r3, #0
    8e84:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    8e88:	3c08      	subs	r4, #8
    8e8a:	ea85 0501 	eor.w	r5, r5, r1
    8e8e:	ea86 0601 	eor.w	r6, r6, r1
    8e92:	fa85 f547 	uadd8	r5, r5, r7
    8e96:	faa3 f587 	sel	r5, r3, r7
    8e9a:	fa86 f647 	uadd8	r6, r6, r7
    8e9e:	faa5 f687 	sel	r6, r5, r7
    8ea2:	b98e      	cbnz	r6, 8ec8 <memchr+0x78>
    8ea4:	d1ee      	bne.n	8e84 <memchr+0x34>
    8ea6:	bcf0      	pop	{r4, r5, r6, r7}
    8ea8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    8eac:	f002 0207 	and.w	r2, r2, #7
    8eb0:	b132      	cbz	r2, 8ec0 <memchr+0x70>
    8eb2:	f810 3b01 	ldrb.w	r3, [r0], #1
    8eb6:	3a01      	subs	r2, #1
    8eb8:	ea83 0301 	eor.w	r3, r3, r1
    8ebc:	b113      	cbz	r3, 8ec4 <memchr+0x74>
    8ebe:	d1f8      	bne.n	8eb2 <memchr+0x62>
    8ec0:	2000      	movs	r0, #0
    8ec2:	4770      	bx	lr
    8ec4:	3801      	subs	r0, #1
    8ec6:	4770      	bx	lr
    8ec8:	2d00      	cmp	r5, #0
    8eca:	bf06      	itte	eq
    8ecc:	4635      	moveq	r5, r6
    8ece:	3803      	subeq	r0, #3
    8ed0:	3807      	subne	r0, #7
    8ed2:	f015 0f01 	tst.w	r5, #1
    8ed6:	d107      	bne.n	8ee8 <memchr+0x98>
    8ed8:	3001      	adds	r0, #1
    8eda:	f415 7f80 	tst.w	r5, #256	; 0x100
    8ede:	bf02      	ittt	eq
    8ee0:	3001      	addeq	r0, #1
    8ee2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    8ee6:	3001      	addeq	r0, #1
    8ee8:	bcf0      	pop	{r4, r5, r6, r7}
    8eea:	3801      	subs	r0, #1
    8eec:	4770      	bx	lr
    8eee:	bf00      	nop

00008ef0 <__malloc_lock>:
__malloc_lock():
    8ef0:	4801      	ldr	r0, [pc, #4]	; (8ef8 <__malloc_lock+0x8>)
    8ef2:	f7fc b976 	b.w	51e2 <__retarget_lock_acquire_recursive>
    8ef6:	bf00      	nop
    8ef8:	100013fc 	.word	0x100013fc

00008efc <__malloc_unlock>:
__malloc_unlock():
    8efc:	4801      	ldr	r0, [pc, #4]	; (8f04 <__malloc_unlock+0x8>)
    8efe:	f7fc b971 	b.w	51e4 <__retarget_lock_release_recursive>
    8f02:	bf00      	nop
    8f04:	100013fc 	.word	0x100013fc

00008f08 <_Balloc>:
_Balloc():
    8f08:	b570      	push	{r4, r5, r6, lr}
    8f0a:	6a45      	ldr	r5, [r0, #36]	; 0x24
    8f0c:	4604      	mov	r4, r0
    8f0e:	460e      	mov	r6, r1
    8f10:	b93d      	cbnz	r5, 8f22 <_Balloc+0x1a>
    8f12:	2010      	movs	r0, #16
    8f14:	f7fc f968 	bl	51e8 <malloc>
    8f18:	e9c0 5501 	strd	r5, r5, [r0, #4]
    8f1c:	6260      	str	r0, [r4, #36]	; 0x24
    8f1e:	6005      	str	r5, [r0, #0]
    8f20:	60c5      	str	r5, [r0, #12]
    8f22:	6a65      	ldr	r5, [r4, #36]	; 0x24
    8f24:	68eb      	ldr	r3, [r5, #12]
    8f26:	b183      	cbz	r3, 8f4a <_Balloc+0x42>
    8f28:	6a63      	ldr	r3, [r4, #36]	; 0x24
    8f2a:	68db      	ldr	r3, [r3, #12]
    8f2c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    8f30:	b9b8      	cbnz	r0, 8f62 <_Balloc+0x5a>
    8f32:	2101      	movs	r1, #1
    8f34:	fa01 f506 	lsl.w	r5, r1, r6
    8f38:	1d6a      	adds	r2, r5, #5
    8f3a:	0092      	lsls	r2, r2, #2
    8f3c:	4620      	mov	r0, r4
    8f3e:	f000 fbdb 	bl	96f8 <_calloc_r>
    8f42:	b160      	cbz	r0, 8f5e <_Balloc+0x56>
    8f44:	e9c0 6501 	strd	r6, r5, [r0, #4]
    8f48:	e00e      	b.n	8f68 <_Balloc+0x60>
    8f4a:	2221      	movs	r2, #33	; 0x21
    8f4c:	2104      	movs	r1, #4
    8f4e:	4620      	mov	r0, r4
    8f50:	f000 fbd2 	bl	96f8 <_calloc_r>
    8f54:	6a63      	ldr	r3, [r4, #36]	; 0x24
    8f56:	60e8      	str	r0, [r5, #12]
    8f58:	68db      	ldr	r3, [r3, #12]
    8f5a:	2b00      	cmp	r3, #0
    8f5c:	d1e4      	bne.n	8f28 <_Balloc+0x20>
    8f5e:	2000      	movs	r0, #0
    8f60:	bd70      	pop	{r4, r5, r6, pc}
    8f62:	6802      	ldr	r2, [r0, #0]
    8f64:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    8f68:	2300      	movs	r3, #0
    8f6a:	e9c0 3303 	strd	r3, r3, [r0, #12]
    8f6e:	e7f7      	b.n	8f60 <_Balloc+0x58>

00008f70 <_Bfree>:
_Bfree():
    8f70:	b570      	push	{r4, r5, r6, lr}
    8f72:	6a44      	ldr	r4, [r0, #36]	; 0x24
    8f74:	4606      	mov	r6, r0
    8f76:	460d      	mov	r5, r1
    8f78:	b93c      	cbnz	r4, 8f8a <_Bfree+0x1a>
    8f7a:	2010      	movs	r0, #16
    8f7c:	f7fc f934 	bl	51e8 <malloc>
    8f80:	e9c0 4401 	strd	r4, r4, [r0, #4]
    8f84:	6270      	str	r0, [r6, #36]	; 0x24
    8f86:	6004      	str	r4, [r0, #0]
    8f88:	60c4      	str	r4, [r0, #12]
    8f8a:	b13d      	cbz	r5, 8f9c <_Bfree+0x2c>
    8f8c:	6a73      	ldr	r3, [r6, #36]	; 0x24
    8f8e:	686a      	ldr	r2, [r5, #4]
    8f90:	68db      	ldr	r3, [r3, #12]
    8f92:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    8f96:	6029      	str	r1, [r5, #0]
    8f98:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    8f9c:	bd70      	pop	{r4, r5, r6, pc}

00008f9e <__multadd>:
__multadd():
    8f9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8fa2:	690d      	ldr	r5, [r1, #16]
    8fa4:	461f      	mov	r7, r3
    8fa6:	4606      	mov	r6, r0
    8fa8:	460c      	mov	r4, r1
    8faa:	f101 0c14 	add.w	ip, r1, #20
    8fae:	2300      	movs	r3, #0
    8fb0:	f8dc 0000 	ldr.w	r0, [ip]
    8fb4:	b281      	uxth	r1, r0
    8fb6:	fb02 7101 	mla	r1, r2, r1, r7
    8fba:	0c0f      	lsrs	r7, r1, #16
    8fbc:	0c00      	lsrs	r0, r0, #16
    8fbe:	fb02 7000 	mla	r0, r2, r0, r7
    8fc2:	b289      	uxth	r1, r1
    8fc4:	3301      	adds	r3, #1
    8fc6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    8fca:	429d      	cmp	r5, r3
    8fcc:	ea4f 4710 	mov.w	r7, r0, lsr #16
    8fd0:	f84c 1b04 	str.w	r1, [ip], #4
    8fd4:	dcec      	bgt.n	8fb0 <__multadd+0x12>
    8fd6:	b1d7      	cbz	r7, 900e <__multadd+0x70>
    8fd8:	68a3      	ldr	r3, [r4, #8]
    8fda:	42ab      	cmp	r3, r5
    8fdc:	dc12      	bgt.n	9004 <__multadd+0x66>
    8fde:	6861      	ldr	r1, [r4, #4]
    8fe0:	4630      	mov	r0, r6
    8fe2:	3101      	adds	r1, #1
    8fe4:	f7ff ff90 	bl	8f08 <_Balloc>
    8fe8:	6922      	ldr	r2, [r4, #16]
    8fea:	3202      	adds	r2, #2
    8fec:	f104 010c 	add.w	r1, r4, #12
    8ff0:	4680      	mov	r8, r0
    8ff2:	0092      	lsls	r2, r2, #2
    8ff4:	300c      	adds	r0, #12
    8ff6:	f7fc f907 	bl	5208 <memcpy>
    8ffa:	4621      	mov	r1, r4
    8ffc:	4630      	mov	r0, r6
    8ffe:	f7ff ffb7 	bl	8f70 <_Bfree>
    9002:	4644      	mov	r4, r8
    9004:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    9008:	3501      	adds	r5, #1
    900a:	615f      	str	r7, [r3, #20]
    900c:	6125      	str	r5, [r4, #16]
    900e:	4620      	mov	r0, r4
    9010:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00009014 <__s2b>:
__s2b():
    9014:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9018:	460c      	mov	r4, r1
    901a:	4615      	mov	r5, r2
    901c:	461f      	mov	r7, r3
    901e:	2209      	movs	r2, #9
    9020:	3308      	adds	r3, #8
    9022:	4606      	mov	r6, r0
    9024:	fb93 f3f2 	sdiv	r3, r3, r2
    9028:	2100      	movs	r1, #0
    902a:	2201      	movs	r2, #1
    902c:	429a      	cmp	r2, r3
    902e:	db20      	blt.n	9072 <__s2b+0x5e>
    9030:	4630      	mov	r0, r6
    9032:	f7ff ff69 	bl	8f08 <_Balloc>
    9036:	9b08      	ldr	r3, [sp, #32]
    9038:	6143      	str	r3, [r0, #20]
    903a:	2d09      	cmp	r5, #9
    903c:	f04f 0301 	mov.w	r3, #1
    9040:	6103      	str	r3, [r0, #16]
    9042:	dd19      	ble.n	9078 <__s2b+0x64>
    9044:	f104 0909 	add.w	r9, r4, #9
    9048:	46c8      	mov	r8, r9
    904a:	442c      	add	r4, r5
    904c:	f818 3b01 	ldrb.w	r3, [r8], #1
    9050:	4601      	mov	r1, r0
    9052:	3b30      	subs	r3, #48	; 0x30
    9054:	220a      	movs	r2, #10
    9056:	4630      	mov	r0, r6
    9058:	f7ff ffa1 	bl	8f9e <__multadd>
    905c:	45a0      	cmp	r8, r4
    905e:	d1f5      	bne.n	904c <__s2b+0x38>
    9060:	f1a5 0408 	sub.w	r4, r5, #8
    9064:	444c      	add	r4, r9
    9066:	1b2d      	subs	r5, r5, r4
    9068:	1963      	adds	r3, r4, r5
    906a:	42bb      	cmp	r3, r7
    906c:	db07      	blt.n	907e <__s2b+0x6a>
    906e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    9072:	0052      	lsls	r2, r2, #1
    9074:	3101      	adds	r1, #1
    9076:	e7d9      	b.n	902c <__s2b+0x18>
    9078:	340a      	adds	r4, #10
    907a:	2509      	movs	r5, #9
    907c:	e7f3      	b.n	9066 <__s2b+0x52>
    907e:	f814 3b01 	ldrb.w	r3, [r4], #1
    9082:	4601      	mov	r1, r0
    9084:	3b30      	subs	r3, #48	; 0x30
    9086:	220a      	movs	r2, #10
    9088:	4630      	mov	r0, r6
    908a:	f7ff ff88 	bl	8f9e <__multadd>
    908e:	e7eb      	b.n	9068 <__s2b+0x54>

00009090 <__hi0bits>:
__hi0bits():
    9090:	0c02      	lsrs	r2, r0, #16
    9092:	0412      	lsls	r2, r2, #16
    9094:	4603      	mov	r3, r0
    9096:	b9ca      	cbnz	r2, 90cc <__hi0bits+0x3c>
    9098:	0403      	lsls	r3, r0, #16
    909a:	2010      	movs	r0, #16
    909c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    90a0:	bf04      	itt	eq
    90a2:	021b      	lsleq	r3, r3, #8
    90a4:	3008      	addeq	r0, #8
    90a6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    90aa:	bf04      	itt	eq
    90ac:	011b      	lsleq	r3, r3, #4
    90ae:	3004      	addeq	r0, #4
    90b0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    90b4:	bf04      	itt	eq
    90b6:	009b      	lsleq	r3, r3, #2
    90b8:	3002      	addeq	r0, #2
    90ba:	2b00      	cmp	r3, #0
    90bc:	db05      	blt.n	90ca <__hi0bits+0x3a>
    90be:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
    90c2:	f100 0001 	add.w	r0, r0, #1
    90c6:	bf08      	it	eq
    90c8:	2020      	moveq	r0, #32
    90ca:	4770      	bx	lr
    90cc:	2000      	movs	r0, #0
    90ce:	e7e5      	b.n	909c <__hi0bits+0xc>

000090d0 <__lo0bits>:
__lo0bits():
    90d0:	6803      	ldr	r3, [r0, #0]
    90d2:	f013 0207 	ands.w	r2, r3, #7
    90d6:	4601      	mov	r1, r0
    90d8:	d00b      	beq.n	90f2 <__lo0bits+0x22>
    90da:	07da      	lsls	r2, r3, #31
    90dc:	d424      	bmi.n	9128 <__lo0bits+0x58>
    90de:	0798      	lsls	r0, r3, #30
    90e0:	bf49      	itett	mi
    90e2:	085b      	lsrmi	r3, r3, #1
    90e4:	089b      	lsrpl	r3, r3, #2
    90e6:	2001      	movmi	r0, #1
    90e8:	600b      	strmi	r3, [r1, #0]
    90ea:	bf5c      	itt	pl
    90ec:	600b      	strpl	r3, [r1, #0]
    90ee:	2002      	movpl	r0, #2
    90f0:	4770      	bx	lr
    90f2:	b298      	uxth	r0, r3
    90f4:	b9b0      	cbnz	r0, 9124 <__lo0bits+0x54>
    90f6:	0c1b      	lsrs	r3, r3, #16
    90f8:	2010      	movs	r0, #16
    90fa:	f013 0fff 	tst.w	r3, #255	; 0xff
    90fe:	bf04      	itt	eq
    9100:	0a1b      	lsreq	r3, r3, #8
    9102:	3008      	addeq	r0, #8
    9104:	071a      	lsls	r2, r3, #28
    9106:	bf04      	itt	eq
    9108:	091b      	lsreq	r3, r3, #4
    910a:	3004      	addeq	r0, #4
    910c:	079a      	lsls	r2, r3, #30
    910e:	bf04      	itt	eq
    9110:	089b      	lsreq	r3, r3, #2
    9112:	3002      	addeq	r0, #2
    9114:	07da      	lsls	r2, r3, #31
    9116:	d403      	bmi.n	9120 <__lo0bits+0x50>
    9118:	085b      	lsrs	r3, r3, #1
    911a:	f100 0001 	add.w	r0, r0, #1
    911e:	d005      	beq.n	912c <__lo0bits+0x5c>
    9120:	600b      	str	r3, [r1, #0]
    9122:	4770      	bx	lr
    9124:	4610      	mov	r0, r2
    9126:	e7e8      	b.n	90fa <__lo0bits+0x2a>
    9128:	2000      	movs	r0, #0
    912a:	4770      	bx	lr
    912c:	2020      	movs	r0, #32
    912e:	4770      	bx	lr

00009130 <__i2b>:
__i2b():
    9130:	b510      	push	{r4, lr}
    9132:	460c      	mov	r4, r1
    9134:	2101      	movs	r1, #1
    9136:	f7ff fee7 	bl	8f08 <_Balloc>
    913a:	2201      	movs	r2, #1
    913c:	6144      	str	r4, [r0, #20]
    913e:	6102      	str	r2, [r0, #16]
    9140:	bd10      	pop	{r4, pc}

00009142 <__multiply>:
__multiply():
    9142:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9146:	4690      	mov	r8, r2
    9148:	690a      	ldr	r2, [r1, #16]
    914a:	f8d8 3010 	ldr.w	r3, [r8, #16]
    914e:	429a      	cmp	r2, r3
    9150:	bfb8      	it	lt
    9152:	460b      	movlt	r3, r1
    9154:	460c      	mov	r4, r1
    9156:	bfbc      	itt	lt
    9158:	4644      	movlt	r4, r8
    915a:	4698      	movlt	r8, r3
    915c:	6927      	ldr	r7, [r4, #16]
    915e:	f8d8 9010 	ldr.w	r9, [r8, #16]
    9162:	68a3      	ldr	r3, [r4, #8]
    9164:	6861      	ldr	r1, [r4, #4]
    9166:	eb07 0609 	add.w	r6, r7, r9
    916a:	42b3      	cmp	r3, r6
    916c:	bfb8      	it	lt
    916e:	3101      	addlt	r1, #1
    9170:	f7ff feca 	bl	8f08 <_Balloc>
    9174:	f100 0514 	add.w	r5, r0, #20
    9178:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    917c:	462b      	mov	r3, r5
    917e:	2200      	movs	r2, #0
    9180:	4573      	cmp	r3, lr
    9182:	d316      	bcc.n	91b2 <__multiply+0x70>
    9184:	f104 0314 	add.w	r3, r4, #20
    9188:	f108 0214 	add.w	r2, r8, #20
    918c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    9190:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    9194:	9300      	str	r3, [sp, #0]
    9196:	9b00      	ldr	r3, [sp, #0]
    9198:	9201      	str	r2, [sp, #4]
    919a:	4293      	cmp	r3, r2
    919c:	d80c      	bhi.n	91b8 <__multiply+0x76>
    919e:	2e00      	cmp	r6, #0
    91a0:	dd03      	ble.n	91aa <__multiply+0x68>
    91a2:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    91a6:	2b00      	cmp	r3, #0
    91a8:	d059      	beq.n	925e <__multiply+0x11c>
    91aa:	6106      	str	r6, [r0, #16]
    91ac:	b003      	add	sp, #12
    91ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    91b2:	f843 2b04 	str.w	r2, [r3], #4
    91b6:	e7e3      	b.n	9180 <__multiply+0x3e>
    91b8:	f8b2 a000 	ldrh.w	sl, [r2]
    91bc:	f1ba 0f00 	cmp.w	sl, #0
    91c0:	d023      	beq.n	920a <__multiply+0xc8>
    91c2:	f104 0914 	add.w	r9, r4, #20
    91c6:	46ac      	mov	ip, r5
    91c8:	f04f 0800 	mov.w	r8, #0
    91cc:	f859 1b04 	ldr.w	r1, [r9], #4
    91d0:	f8dc b000 	ldr.w	fp, [ip]
    91d4:	b28b      	uxth	r3, r1
    91d6:	fa1f fb8b 	uxth.w	fp, fp
    91da:	fb0a b303 	mla	r3, sl, r3, fp
    91de:	ea4f 4b11 	mov.w	fp, r1, lsr #16
    91e2:	f8dc 1000 	ldr.w	r1, [ip]
    91e6:	4443      	add	r3, r8
    91e8:	ea4f 4811 	mov.w	r8, r1, lsr #16
    91ec:	fb0a 810b 	mla	r1, sl, fp, r8
    91f0:	eb01 4113 	add.w	r1, r1, r3, lsr #16
    91f4:	b29b      	uxth	r3, r3
    91f6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    91fa:	454f      	cmp	r7, r9
    91fc:	ea4f 4811 	mov.w	r8, r1, lsr #16
    9200:	f84c 3b04 	str.w	r3, [ip], #4
    9204:	d8e2      	bhi.n	91cc <__multiply+0x8a>
    9206:	f8cc 8000 	str.w	r8, [ip]
    920a:	9b01      	ldr	r3, [sp, #4]
    920c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
    9210:	3204      	adds	r2, #4
    9212:	f1b9 0f00 	cmp.w	r9, #0
    9216:	d020      	beq.n	925a <__multiply+0x118>
    9218:	682b      	ldr	r3, [r5, #0]
    921a:	f104 0814 	add.w	r8, r4, #20
    921e:	46ac      	mov	ip, r5
    9220:	f04f 0a00 	mov.w	sl, #0
    9224:	f8b8 1000 	ldrh.w	r1, [r8]
    9228:	f8bc b002 	ldrh.w	fp, [ip, #2]
    922c:	fb09 b101 	mla	r1, r9, r1, fp
    9230:	448a      	add	sl, r1
    9232:	b29b      	uxth	r3, r3
    9234:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    9238:	f84c 3b04 	str.w	r3, [ip], #4
    923c:	f858 3b04 	ldr.w	r3, [r8], #4
    9240:	f8bc 1000 	ldrh.w	r1, [ip]
    9244:	0c1b      	lsrs	r3, r3, #16
    9246:	fb09 1303 	mla	r3, r9, r3, r1
    924a:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    924e:	4547      	cmp	r7, r8
    9250:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    9254:	d8e6      	bhi.n	9224 <__multiply+0xe2>
    9256:	f8cc 3000 	str.w	r3, [ip]
    925a:	3504      	adds	r5, #4
    925c:	e79b      	b.n	9196 <__multiply+0x54>
    925e:	3e01      	subs	r6, #1
    9260:	e79d      	b.n	919e <__multiply+0x5c>
    9262:	Address 0x0000000000009262 is out of bounds.


00009264 <__pow5mult>:
__pow5mult():
    9264:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9268:	4615      	mov	r5, r2
    926a:	f012 0203 	ands.w	r2, r2, #3
    926e:	4606      	mov	r6, r0
    9270:	460f      	mov	r7, r1
    9272:	d007      	beq.n	9284 <__pow5mult+0x20>
    9274:	3a01      	subs	r2, #1
    9276:	4c21      	ldr	r4, [pc, #132]	; (92fc <__pow5mult+0x98>)
    9278:	2300      	movs	r3, #0
    927a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    927e:	f7ff fe8e 	bl	8f9e <__multadd>
    9282:	4607      	mov	r7, r0
    9284:	10ad      	asrs	r5, r5, #2
    9286:	d035      	beq.n	92f4 <__pow5mult+0x90>
    9288:	6a74      	ldr	r4, [r6, #36]	; 0x24
    928a:	b93c      	cbnz	r4, 929c <__pow5mult+0x38>
    928c:	2010      	movs	r0, #16
    928e:	f7fb ffab 	bl	51e8 <malloc>
    9292:	e9c0 4401 	strd	r4, r4, [r0, #4]
    9296:	6270      	str	r0, [r6, #36]	; 0x24
    9298:	6004      	str	r4, [r0, #0]
    929a:	60c4      	str	r4, [r0, #12]
    929c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    92a0:	f8d8 4008 	ldr.w	r4, [r8, #8]
    92a4:	b94c      	cbnz	r4, 92ba <__pow5mult+0x56>
    92a6:	f240 2171 	movw	r1, #625	; 0x271
    92aa:	4630      	mov	r0, r6
    92ac:	f7ff ff40 	bl	9130 <__i2b>
    92b0:	2300      	movs	r3, #0
    92b2:	f8c8 0008 	str.w	r0, [r8, #8]
    92b6:	4604      	mov	r4, r0
    92b8:	6003      	str	r3, [r0, #0]
    92ba:	f04f 0800 	mov.w	r8, #0
    92be:	07eb      	lsls	r3, r5, #31
    92c0:	d50a      	bpl.n	92d8 <__pow5mult+0x74>
    92c2:	4639      	mov	r1, r7
    92c4:	4622      	mov	r2, r4
    92c6:	4630      	mov	r0, r6
    92c8:	f7ff ff3b 	bl	9142 <__multiply>
    92cc:	4639      	mov	r1, r7
    92ce:	4681      	mov	r9, r0
    92d0:	4630      	mov	r0, r6
    92d2:	f7ff fe4d 	bl	8f70 <_Bfree>
    92d6:	464f      	mov	r7, r9
    92d8:	106d      	asrs	r5, r5, #1
    92da:	d00b      	beq.n	92f4 <__pow5mult+0x90>
    92dc:	6820      	ldr	r0, [r4, #0]
    92de:	b938      	cbnz	r0, 92f0 <__pow5mult+0x8c>
    92e0:	4622      	mov	r2, r4
    92e2:	4621      	mov	r1, r4
    92e4:	4630      	mov	r0, r6
    92e6:	f7ff ff2c 	bl	9142 <__multiply>
    92ea:	6020      	str	r0, [r4, #0]
    92ec:	f8c0 8000 	str.w	r8, [r0]
    92f0:	4604      	mov	r4, r0
    92f2:	e7e4      	b.n	92be <__pow5mult+0x5a>
    92f4:	4638      	mov	r0, r7
    92f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    92fa:	bf00      	nop
    92fc:	0000bd20 	.word	0x0000bd20

00009300 <__lshift>:
__lshift():
    9300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9304:	460c      	mov	r4, r1
    9306:	ea4f 1a62 	mov.w	sl, r2, asr #5
    930a:	6923      	ldr	r3, [r4, #16]
    930c:	6849      	ldr	r1, [r1, #4]
    930e:	eb0a 0903 	add.w	r9, sl, r3
    9312:	68a3      	ldr	r3, [r4, #8]
    9314:	4607      	mov	r7, r0
    9316:	4616      	mov	r6, r2
    9318:	f109 0501 	add.w	r5, r9, #1
    931c:	42ab      	cmp	r3, r5
    931e:	db33      	blt.n	9388 <__lshift+0x88>
    9320:	4638      	mov	r0, r7
    9322:	f7ff fdf1 	bl	8f08 <_Balloc>
    9326:	2300      	movs	r3, #0
    9328:	4680      	mov	r8, r0
    932a:	f100 0114 	add.w	r1, r0, #20
    932e:	f100 0210 	add.w	r2, r0, #16
    9332:	4618      	mov	r0, r3
    9334:	4553      	cmp	r3, sl
    9336:	db2a      	blt.n	938e <__lshift+0x8e>
    9338:	6920      	ldr	r0, [r4, #16]
    933a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    933e:	f104 0314 	add.w	r3, r4, #20
    9342:	f016 021f 	ands.w	r2, r6, #31
    9346:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    934a:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    934e:	d022      	beq.n	9396 <__lshift+0x96>
    9350:	f1c2 0e20 	rsb	lr, r2, #32
    9354:	2000      	movs	r0, #0
    9356:	681e      	ldr	r6, [r3, #0]
    9358:	4096      	lsls	r6, r2
    935a:	4330      	orrs	r0, r6
    935c:	f841 0b04 	str.w	r0, [r1], #4
    9360:	f853 0b04 	ldr.w	r0, [r3], #4
    9364:	459c      	cmp	ip, r3
    9366:	fa20 f00e 	lsr.w	r0, r0, lr
    936a:	d8f4      	bhi.n	9356 <__lshift+0x56>
    936c:	6008      	str	r0, [r1, #0]
    936e:	b108      	cbz	r0, 9374 <__lshift+0x74>
    9370:	f109 0502 	add.w	r5, r9, #2
    9374:	3d01      	subs	r5, #1
    9376:	4638      	mov	r0, r7
    9378:	f8c8 5010 	str.w	r5, [r8, #16]
    937c:	4621      	mov	r1, r4
    937e:	f7ff fdf7 	bl	8f70 <_Bfree>
    9382:	4640      	mov	r0, r8
    9384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9388:	3101      	adds	r1, #1
    938a:	005b      	lsls	r3, r3, #1
    938c:	e7c6      	b.n	931c <__lshift+0x1c>
    938e:	f842 0f04 	str.w	r0, [r2, #4]!
    9392:	3301      	adds	r3, #1
    9394:	e7ce      	b.n	9334 <__lshift+0x34>
    9396:	3904      	subs	r1, #4
    9398:	f853 2b04 	ldr.w	r2, [r3], #4
    939c:	f841 2f04 	str.w	r2, [r1, #4]!
    93a0:	459c      	cmp	ip, r3
    93a2:	d8f9      	bhi.n	9398 <__lshift+0x98>
    93a4:	e7e6      	b.n	9374 <__lshift+0x74>

000093a6 <__mcmp>:
__mcmp():
    93a6:	6903      	ldr	r3, [r0, #16]
    93a8:	690a      	ldr	r2, [r1, #16]
    93aa:	1a9b      	subs	r3, r3, r2
    93ac:	b530      	push	{r4, r5, lr}
    93ae:	d10c      	bne.n	93ca <__mcmp+0x24>
    93b0:	0092      	lsls	r2, r2, #2
    93b2:	3014      	adds	r0, #20
    93b4:	3114      	adds	r1, #20
    93b6:	1884      	adds	r4, r0, r2
    93b8:	4411      	add	r1, r2
    93ba:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    93be:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    93c2:	4295      	cmp	r5, r2
    93c4:	d003      	beq.n	93ce <__mcmp+0x28>
    93c6:	d305      	bcc.n	93d4 <__mcmp+0x2e>
    93c8:	2301      	movs	r3, #1
    93ca:	4618      	mov	r0, r3
    93cc:	bd30      	pop	{r4, r5, pc}
    93ce:	42a0      	cmp	r0, r4
    93d0:	d3f3      	bcc.n	93ba <__mcmp+0x14>
    93d2:	e7fa      	b.n	93ca <__mcmp+0x24>
    93d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    93d8:	e7f7      	b.n	93ca <__mcmp+0x24>

000093da <__mdiff>:
__mdiff():
    93da:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    93de:	460d      	mov	r5, r1
    93e0:	4607      	mov	r7, r0
    93e2:	4611      	mov	r1, r2
    93e4:	4628      	mov	r0, r5
    93e6:	4614      	mov	r4, r2
    93e8:	f7ff ffdd 	bl	93a6 <__mcmp>
    93ec:	1e06      	subs	r6, r0, #0
    93ee:	d108      	bne.n	9402 <__mdiff+0x28>
    93f0:	4631      	mov	r1, r6
    93f2:	4638      	mov	r0, r7
    93f4:	f7ff fd88 	bl	8f08 <_Balloc>
    93f8:	2301      	movs	r3, #1
    93fa:	e9c0 3604 	strd	r3, r6, [r0, #16]
    93fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9402:	bfa4      	itt	ge
    9404:	4623      	movge	r3, r4
    9406:	462c      	movge	r4, r5
    9408:	4638      	mov	r0, r7
    940a:	6861      	ldr	r1, [r4, #4]
    940c:	bfa6      	itte	ge
    940e:	461d      	movge	r5, r3
    9410:	2600      	movge	r6, #0
    9412:	2601      	movlt	r6, #1
    9414:	f7ff fd78 	bl	8f08 <_Balloc>
    9418:	692b      	ldr	r3, [r5, #16]
    941a:	60c6      	str	r6, [r0, #12]
    941c:	6926      	ldr	r6, [r4, #16]
    941e:	f105 0914 	add.w	r9, r5, #20
    9422:	f104 0214 	add.w	r2, r4, #20
    9426:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    942a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    942e:	f100 0514 	add.w	r5, r0, #20
    9432:	f04f 0e00 	mov.w	lr, #0
    9436:	f852 ab04 	ldr.w	sl, [r2], #4
    943a:	f859 4b04 	ldr.w	r4, [r9], #4
    943e:	fa1e f18a 	uxtah	r1, lr, sl
    9442:	b2a3      	uxth	r3, r4
    9444:	1ac9      	subs	r1, r1, r3
    9446:	0c23      	lsrs	r3, r4, #16
    9448:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    944c:	eb03 4321 	add.w	r3, r3, r1, asr #16
    9450:	b289      	uxth	r1, r1
    9452:	ea4f 4e23 	mov.w	lr, r3, asr #16
    9456:	45c8      	cmp	r8, r9
    9458:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    945c:	4694      	mov	ip, r2
    945e:	f845 3b04 	str.w	r3, [r5], #4
    9462:	d8e8      	bhi.n	9436 <__mdiff+0x5c>
    9464:	45bc      	cmp	ip, r7
    9466:	d304      	bcc.n	9472 <__mdiff+0x98>
    9468:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    946c:	b183      	cbz	r3, 9490 <__mdiff+0xb6>
    946e:	6106      	str	r6, [r0, #16]
    9470:	e7c5      	b.n	93fe <__mdiff+0x24>
    9472:	f85c 1b04 	ldr.w	r1, [ip], #4
    9476:	fa1e f381 	uxtah	r3, lr, r1
    947a:	141a      	asrs	r2, r3, #16
    947c:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    9480:	b29b      	uxth	r3, r3
    9482:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    9486:	ea4f 4e22 	mov.w	lr, r2, asr #16
    948a:	f845 3b04 	str.w	r3, [r5], #4
    948e:	e7e9      	b.n	9464 <__mdiff+0x8a>
    9490:	3e01      	subs	r6, #1
    9492:	e7e9      	b.n	9468 <__mdiff+0x8e>

00009494 <__ulp>:
__ulp():
    9494:	4b11      	ldr	r3, [pc, #68]	; (94dc <__ulp+0x48>)
    9496:	ee10 2a90 	vmov	r2, s1
    949a:	401a      	ands	r2, r3
    949c:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
    94a0:	2b00      	cmp	r3, #0
    94a2:	dd04      	ble.n	94ae <__ulp+0x1a>
    94a4:	2000      	movs	r0, #0
    94a6:	4619      	mov	r1, r3
    94a8:	ec41 0b10 	vmov	d0, r0, r1
    94ac:	4770      	bx	lr
    94ae:	425b      	negs	r3, r3
    94b0:	151b      	asrs	r3, r3, #20
    94b2:	2b13      	cmp	r3, #19
    94b4:	f04f 0000 	mov.w	r0, #0
    94b8:	f04f 0100 	mov.w	r1, #0
    94bc:	dc04      	bgt.n	94c8 <__ulp+0x34>
    94be:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    94c2:	fa42 f103 	asr.w	r1, r2, r3
    94c6:	e7ef      	b.n	94a8 <__ulp+0x14>
    94c8:	3b14      	subs	r3, #20
    94ca:	2b1e      	cmp	r3, #30
    94cc:	bfda      	itte	le
    94ce:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
    94d2:	fa22 f303 	lsrle.w	r3, r2, r3
    94d6:	2301      	movgt	r3, #1
    94d8:	4618      	mov	r0, r3
    94da:	e7e5      	b.n	94a8 <__ulp+0x14>
    94dc:	7ff00000 	.word	0x7ff00000

000094e0 <__b2d>:
__b2d():
    94e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    94e2:	6905      	ldr	r5, [r0, #16]
    94e4:	f100 0714 	add.w	r7, r0, #20
    94e8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    94ec:	1f2e      	subs	r6, r5, #4
    94ee:	f855 4c04 	ldr.w	r4, [r5, #-4]
    94f2:	4620      	mov	r0, r4
    94f4:	f7ff fdcc 	bl	9090 <__hi0bits>
    94f8:	f1c0 0320 	rsb	r3, r0, #32
    94fc:	280a      	cmp	r0, #10
    94fe:	600b      	str	r3, [r1, #0]
    9500:	f8df c078 	ldr.w	ip, [pc, #120]	; 957c <__b2d+0x9c>
    9504:	dc14      	bgt.n	9530 <__b2d+0x50>
    9506:	f1c0 0e0b 	rsb	lr, r0, #11
    950a:	fa24 f10e 	lsr.w	r1, r4, lr
    950e:	42b7      	cmp	r7, r6
    9510:	ea41 030c 	orr.w	r3, r1, ip
    9514:	bf34      	ite	cc
    9516:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    951a:	2100      	movcs	r1, #0
    951c:	3015      	adds	r0, #21
    951e:	fa04 f000 	lsl.w	r0, r4, r0
    9522:	fa21 f10e 	lsr.w	r1, r1, lr
    9526:	ea40 0201 	orr.w	r2, r0, r1
    952a:	ec43 2b10 	vmov	d0, r2, r3
    952e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9530:	42b7      	cmp	r7, r6
    9532:	bf3a      	itte	cc
    9534:	f1a5 0608 	subcc.w	r6, r5, #8
    9538:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    953c:	2100      	movcs	r1, #0
    953e:	380b      	subs	r0, #11
    9540:	d017      	beq.n	9572 <__b2d+0x92>
    9542:	f1c0 0c20 	rsb	ip, r0, #32
    9546:	fa04 f500 	lsl.w	r5, r4, r0
    954a:	42be      	cmp	r6, r7
    954c:	fa21 f40c 	lsr.w	r4, r1, ip
    9550:	ea45 0504 	orr.w	r5, r5, r4
    9554:	bf8c      	ite	hi
    9556:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
    955a:	2400      	movls	r4, #0
    955c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
    9560:	fa01 f000 	lsl.w	r0, r1, r0
    9564:	fa24 f40c 	lsr.w	r4, r4, ip
    9568:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    956c:	ea40 0204 	orr.w	r2, r0, r4
    9570:	e7db      	b.n	952a <__b2d+0x4a>
    9572:	ea44 030c 	orr.w	r3, r4, ip
    9576:	460a      	mov	r2, r1
    9578:	e7d7      	b.n	952a <__b2d+0x4a>
    957a:	bf00      	nop
    957c:	3ff00000 	.word	0x3ff00000

00009580 <__d2b>:
__d2b():
    9580:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    9584:	460e      	mov	r6, r1
    9586:	2101      	movs	r1, #1
    9588:	ec59 8b10 	vmov	r8, r9, d0
    958c:	4615      	mov	r5, r2
    958e:	f7ff fcbb 	bl	8f08 <_Balloc>
    9592:	f3c9 540a 	ubfx	r4, r9, #20, #11
    9596:	4607      	mov	r7, r0
    9598:	f3c9 0313 	ubfx	r3, r9, #0, #20
    959c:	bb2c      	cbnz	r4, 95ea <__d2b+0x6a>
    959e:	9301      	str	r3, [sp, #4]
    95a0:	f1b8 0300 	subs.w	r3, r8, #0
    95a4:	d026      	beq.n	95f4 <__d2b+0x74>
    95a6:	4668      	mov	r0, sp
    95a8:	9300      	str	r3, [sp, #0]
    95aa:	f7ff fd91 	bl	90d0 <__lo0bits>
    95ae:	9900      	ldr	r1, [sp, #0]
    95b0:	b1f0      	cbz	r0, 95f0 <__d2b+0x70>
    95b2:	9a01      	ldr	r2, [sp, #4]
    95b4:	f1c0 0320 	rsb	r3, r0, #32
    95b8:	fa02 f303 	lsl.w	r3, r2, r3
    95bc:	430b      	orrs	r3, r1
    95be:	40c2      	lsrs	r2, r0
    95c0:	617b      	str	r3, [r7, #20]
    95c2:	9201      	str	r2, [sp, #4]
    95c4:	9b01      	ldr	r3, [sp, #4]
    95c6:	61bb      	str	r3, [r7, #24]
    95c8:	2b00      	cmp	r3, #0
    95ca:	bf14      	ite	ne
    95cc:	2102      	movne	r1, #2
    95ce:	2101      	moveq	r1, #1
    95d0:	6139      	str	r1, [r7, #16]
    95d2:	b1c4      	cbz	r4, 9606 <__d2b+0x86>
    95d4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    95d8:	4404      	add	r4, r0
    95da:	6034      	str	r4, [r6, #0]
    95dc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    95e0:	6028      	str	r0, [r5, #0]
    95e2:	4638      	mov	r0, r7
    95e4:	b003      	add	sp, #12
    95e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    95ea:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    95ee:	e7d6      	b.n	959e <__d2b+0x1e>
    95f0:	6179      	str	r1, [r7, #20]
    95f2:	e7e7      	b.n	95c4 <__d2b+0x44>
    95f4:	a801      	add	r0, sp, #4
    95f6:	f7ff fd6b 	bl	90d0 <__lo0bits>
    95fa:	9b01      	ldr	r3, [sp, #4]
    95fc:	617b      	str	r3, [r7, #20]
    95fe:	2101      	movs	r1, #1
    9600:	6139      	str	r1, [r7, #16]
    9602:	3020      	adds	r0, #32
    9604:	e7e5      	b.n	95d2 <__d2b+0x52>
    9606:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    960a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    960e:	6030      	str	r0, [r6, #0]
    9610:	6918      	ldr	r0, [r3, #16]
    9612:	f7ff fd3d 	bl	9090 <__hi0bits>
    9616:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    961a:	e7e1      	b.n	95e0 <__d2b+0x60>

0000961c <__ratio>:
__ratio():
    961c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9620:	4688      	mov	r8, r1
    9622:	4669      	mov	r1, sp
    9624:	4681      	mov	r9, r0
    9626:	f7ff ff5b 	bl	94e0 <__b2d>
    962a:	a901      	add	r1, sp, #4
    962c:	4640      	mov	r0, r8
    962e:	ec57 6b10 	vmov	r6, r7, d0
    9632:	f7ff ff55 	bl	94e0 <__b2d>
    9636:	f8d9 3010 	ldr.w	r3, [r9, #16]
    963a:	f8d8 2010 	ldr.w	r2, [r8, #16]
    963e:	eba3 0c02 	sub.w	ip, r3, r2
    9642:	e9dd 3200 	ldrd	r3, r2, [sp]
    9646:	1a9b      	subs	r3, r3, r2
    9648:	eb03 134c 	add.w	r3, r3, ip, lsl #5
    964c:	ec5b ab10 	vmov	sl, fp, d0
    9650:	2b00      	cmp	r3, #0
    9652:	bfce      	itee	gt
    9654:	463a      	movgt	r2, r7
    9656:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
    965a:	465a      	movle	r2, fp
    965c:	4659      	mov	r1, fp
    965e:	463d      	mov	r5, r7
    9660:	bfd4      	ite	le
    9662:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
    9666:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
    966a:	4630      	mov	r0, r6
    966c:	ee10 2a10 	vmov	r2, s0
    9670:	460b      	mov	r3, r1
    9672:	4629      	mov	r1, r5
    9674:	f7fb fa94 	bl	4ba0 <__aeabi_ddiv>
    9678:	ec41 0b10 	vmov	d0, r0, r1
    967c:	b003      	add	sp, #12
    967e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009682 <__copybits>:
__copybits():
    9682:	3901      	subs	r1, #1
    9684:	b510      	push	{r4, lr}
    9686:	1149      	asrs	r1, r1, #5
    9688:	6914      	ldr	r4, [r2, #16]
    968a:	3101      	adds	r1, #1
    968c:	f102 0314 	add.w	r3, r2, #20
    9690:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    9694:	eb03 0484 	add.w	r4, r3, r4, lsl #2
    9698:	42a3      	cmp	r3, r4
    969a:	4602      	mov	r2, r0
    969c:	d303      	bcc.n	96a6 <__copybits+0x24>
    969e:	2300      	movs	r3, #0
    96a0:	428a      	cmp	r2, r1
    96a2:	d305      	bcc.n	96b0 <__copybits+0x2e>
    96a4:	bd10      	pop	{r4, pc}
    96a6:	f853 2b04 	ldr.w	r2, [r3], #4
    96aa:	f840 2b04 	str.w	r2, [r0], #4
    96ae:	e7f3      	b.n	9698 <__copybits+0x16>
    96b0:	f842 3b04 	str.w	r3, [r2], #4
    96b4:	e7f4      	b.n	96a0 <__copybits+0x1e>

000096b6 <__any_on>:
__any_on():
    96b6:	f100 0214 	add.w	r2, r0, #20
    96ba:	6900      	ldr	r0, [r0, #16]
    96bc:	114b      	asrs	r3, r1, #5
    96be:	4298      	cmp	r0, r3
    96c0:	b510      	push	{r4, lr}
    96c2:	db11      	blt.n	96e8 <__any_on+0x32>
    96c4:	dd0a      	ble.n	96dc <__any_on+0x26>
    96c6:	f011 011f 	ands.w	r1, r1, #31
    96ca:	d007      	beq.n	96dc <__any_on+0x26>
    96cc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
    96d0:	fa24 f001 	lsr.w	r0, r4, r1
    96d4:	fa00 f101 	lsl.w	r1, r0, r1
    96d8:	428c      	cmp	r4, r1
    96da:	d10b      	bne.n	96f4 <__any_on+0x3e>
    96dc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    96e0:	4293      	cmp	r3, r2
    96e2:	d803      	bhi.n	96ec <__any_on+0x36>
    96e4:	2000      	movs	r0, #0
    96e6:	bd10      	pop	{r4, pc}
    96e8:	4603      	mov	r3, r0
    96ea:	e7f7      	b.n	96dc <__any_on+0x26>
    96ec:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    96f0:	2900      	cmp	r1, #0
    96f2:	d0f5      	beq.n	96e0 <__any_on+0x2a>
    96f4:	2001      	movs	r0, #1
    96f6:	e7f6      	b.n	96e6 <__any_on+0x30>

000096f8 <_calloc_r>:
_calloc_r():
    96f8:	b538      	push	{r3, r4, r5, lr}
    96fa:	fb02 f401 	mul.w	r4, r2, r1
    96fe:	4621      	mov	r1, r4
    9700:	f7fb fe00 	bl	5304 <_malloc_r>
    9704:	4605      	mov	r5, r0
    9706:	b118      	cbz	r0, 9710 <_calloc_r+0x18>
    9708:	4622      	mov	r2, r4
    970a:	2100      	movs	r1, #0
    970c:	f7fb fda4 	bl	5258 <memset>
    9710:	4628      	mov	r0, r5
    9712:	bd38      	pop	{r3, r4, r5, pc}

00009714 <_realloc_r>:
_realloc_r():
    9714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9716:	4607      	mov	r7, r0
    9718:	4614      	mov	r4, r2
    971a:	460e      	mov	r6, r1
    971c:	b921      	cbnz	r1, 9728 <_realloc_r+0x14>
    971e:	4611      	mov	r1, r2
    9720:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    9724:	f7fb bdee 	b.w	5304 <_malloc_r>
    9728:	b922      	cbnz	r2, 9734 <_realloc_r+0x20>
    972a:	f7fb fd9d 	bl	5268 <_free_r>
    972e:	4625      	mov	r5, r4
    9730:	4628      	mov	r0, r5
    9732:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9734:	f000 fe62 	bl	a3fc <_malloc_usable_size_r>
    9738:	42a0      	cmp	r0, r4
    973a:	d20f      	bcs.n	975c <_realloc_r+0x48>
    973c:	4621      	mov	r1, r4
    973e:	4638      	mov	r0, r7
    9740:	f7fb fde0 	bl	5304 <_malloc_r>
    9744:	4605      	mov	r5, r0
    9746:	2800      	cmp	r0, #0
    9748:	d0f2      	beq.n	9730 <_realloc_r+0x1c>
    974a:	4631      	mov	r1, r6
    974c:	4622      	mov	r2, r4
    974e:	f7fb fd5b 	bl	5208 <memcpy>
    9752:	4631      	mov	r1, r6
    9754:	4638      	mov	r0, r7
    9756:	f7fb fd87 	bl	5268 <_free_r>
    975a:	e7e9      	b.n	9730 <_realloc_r+0x1c>
    975c:	4635      	mov	r5, r6
    975e:	e7e7      	b.n	9730 <_realloc_r+0x1c>

00009760 <__ssputs_r>:
__ssputs_r():
    9760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9764:	688e      	ldr	r6, [r1, #8]
    9766:	429e      	cmp	r6, r3
    9768:	4682      	mov	sl, r0
    976a:	460c      	mov	r4, r1
    976c:	4691      	mov	r9, r2
    976e:	4698      	mov	r8, r3
    9770:	d838      	bhi.n	97e4 <__ssputs_r+0x84>
    9772:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
    9776:	f41c 6f90 	tst.w	ip, #1152	; 0x480
    977a:	d031      	beq.n	97e0 <__ssputs_r+0x80>
    977c:	6962      	ldr	r2, [r4, #20]
    977e:	6825      	ldr	r5, [r4, #0]
    9780:	6909      	ldr	r1, [r1, #16]
    9782:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    9786:	1a6f      	subs	r7, r5, r1
    9788:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
    978c:	3301      	adds	r3, #1
    978e:	1055      	asrs	r5, r2, #1
    9790:	443b      	add	r3, r7
    9792:	429d      	cmp	r5, r3
    9794:	bf38      	it	cc
    9796:	461d      	movcc	r5, r3
    9798:	f41c 6f80 	tst.w	ip, #1024	; 0x400
    979c:	d030      	beq.n	9800 <__ssputs_r+0xa0>
    979e:	4629      	mov	r1, r5
    97a0:	f7fb fdb0 	bl	5304 <_malloc_r>
    97a4:	4606      	mov	r6, r0
    97a6:	b950      	cbnz	r0, 97be <__ssputs_r+0x5e>
    97a8:	230c      	movs	r3, #12
    97aa:	f8ca 3000 	str.w	r3, [sl]
    97ae:	89a3      	ldrh	r3, [r4, #12]
    97b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    97b4:	81a3      	strh	r3, [r4, #12]
    97b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    97ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    97be:	463a      	mov	r2, r7
    97c0:	6921      	ldr	r1, [r4, #16]
    97c2:	f7fb fd21 	bl	5208 <memcpy>
    97c6:	89a3      	ldrh	r3, [r4, #12]
    97c8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    97cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    97d0:	81a3      	strh	r3, [r4, #12]
    97d2:	6126      	str	r6, [r4, #16]
    97d4:	6165      	str	r5, [r4, #20]
    97d6:	443e      	add	r6, r7
    97d8:	1bed      	subs	r5, r5, r7
    97da:	6026      	str	r6, [r4, #0]
    97dc:	60a5      	str	r5, [r4, #8]
    97de:	4646      	mov	r6, r8
    97e0:	4546      	cmp	r6, r8
    97e2:	d900      	bls.n	97e6 <__ssputs_r+0x86>
    97e4:	4646      	mov	r6, r8
    97e6:	4632      	mov	r2, r6
    97e8:	4649      	mov	r1, r9
    97ea:	6820      	ldr	r0, [r4, #0]
    97ec:	f7fb fd1a 	bl	5224 <memmove>
    97f0:	68a3      	ldr	r3, [r4, #8]
    97f2:	1b9b      	subs	r3, r3, r6
    97f4:	60a3      	str	r3, [r4, #8]
    97f6:	6823      	ldr	r3, [r4, #0]
    97f8:	441e      	add	r6, r3
    97fa:	6026      	str	r6, [r4, #0]
    97fc:	2000      	movs	r0, #0
    97fe:	e7dc      	b.n	97ba <__ssputs_r+0x5a>
    9800:	462a      	mov	r2, r5
    9802:	f7ff ff87 	bl	9714 <_realloc_r>
    9806:	4606      	mov	r6, r0
    9808:	2800      	cmp	r0, #0
    980a:	d1e2      	bne.n	97d2 <__ssputs_r+0x72>
    980c:	6921      	ldr	r1, [r4, #16]
    980e:	4650      	mov	r0, sl
    9810:	f7fb fd2a 	bl	5268 <_free_r>
    9814:	e7c8      	b.n	97a8 <__ssputs_r+0x48>
    9816:	Address 0x0000000000009816 is out of bounds.


00009818 <_svfiprintf_r>:
_svfiprintf_r():
    9818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    981c:	461e      	mov	r6, r3
    981e:	898b      	ldrh	r3, [r1, #12]
    9820:	061b      	lsls	r3, r3, #24
    9822:	b09d      	sub	sp, #116	; 0x74
    9824:	4607      	mov	r7, r0
    9826:	460d      	mov	r5, r1
    9828:	4614      	mov	r4, r2
    982a:	d50e      	bpl.n	984a <_svfiprintf_r+0x32>
    982c:	690b      	ldr	r3, [r1, #16]
    982e:	b963      	cbnz	r3, 984a <_svfiprintf_r+0x32>
    9830:	2140      	movs	r1, #64	; 0x40
    9832:	f7fb fd67 	bl	5304 <_malloc_r>
    9836:	6028      	str	r0, [r5, #0]
    9838:	6128      	str	r0, [r5, #16]
    983a:	b920      	cbnz	r0, 9846 <_svfiprintf_r+0x2e>
    983c:	230c      	movs	r3, #12
    983e:	603b      	str	r3, [r7, #0]
    9840:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    9844:	e0c9      	b.n	99da <_svfiprintf_r+0x1c2>
    9846:	2340      	movs	r3, #64	; 0x40
    9848:	616b      	str	r3, [r5, #20]
    984a:	2300      	movs	r3, #0
    984c:	9309      	str	r3, [sp, #36]	; 0x24
    984e:	2320      	movs	r3, #32
    9850:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    9854:	f8df 919c 	ldr.w	r9, [pc, #412]	; 99f4 <_svfiprintf_r+0x1dc>
    9858:	9603      	str	r6, [sp, #12]
    985a:	2330      	movs	r3, #48	; 0x30
    985c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    9860:	f04f 0a01 	mov.w	sl, #1
    9864:	4623      	mov	r3, r4
    9866:	461e      	mov	r6, r3
    9868:	f813 2b01 	ldrb.w	r2, [r3], #1
    986c:	b10a      	cbz	r2, 9872 <_svfiprintf_r+0x5a>
    986e:	2a25      	cmp	r2, #37	; 0x25
    9870:	d1f9      	bne.n	9866 <_svfiprintf_r+0x4e>
    9872:	ebb6 0b04 	subs.w	fp, r6, r4
    9876:	d00b      	beq.n	9890 <_svfiprintf_r+0x78>
    9878:	465b      	mov	r3, fp
    987a:	4622      	mov	r2, r4
    987c:	4629      	mov	r1, r5
    987e:	4638      	mov	r0, r7
    9880:	f7ff ff6e 	bl	9760 <__ssputs_r>
    9884:	3001      	adds	r0, #1
    9886:	f000 80a3 	beq.w	99d0 <_svfiprintf_r+0x1b8>
    988a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    988c:	445b      	add	r3, fp
    988e:	9309      	str	r3, [sp, #36]	; 0x24
    9890:	7833      	ldrb	r3, [r6, #0]
    9892:	2b00      	cmp	r3, #0
    9894:	f000 809c 	beq.w	99d0 <_svfiprintf_r+0x1b8>
    9898:	2300      	movs	r3, #0
    989a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    989e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    98a2:	3601      	adds	r6, #1
    98a4:	9304      	str	r3, [sp, #16]
    98a6:	9307      	str	r3, [sp, #28]
    98a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    98ac:	931a      	str	r3, [sp, #104]	; 0x68
    98ae:	4634      	mov	r4, r6
    98b0:	2205      	movs	r2, #5
    98b2:	f814 1b01 	ldrb.w	r1, [r4], #1
    98b6:	484f      	ldr	r0, [pc, #316]	; (99f4 <_svfiprintf_r+0x1dc>)
    98b8:	f7ff faca 	bl	8e50 <memchr>
    98bc:	9b04      	ldr	r3, [sp, #16]
    98be:	b9c0      	cbnz	r0, 98f2 <_svfiprintf_r+0xda>
    98c0:	06d9      	lsls	r1, r3, #27
    98c2:	bf44      	itt	mi
    98c4:	2220      	movmi	r2, #32
    98c6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    98ca:	071a      	lsls	r2, r3, #28
    98cc:	bf44      	itt	mi
    98ce:	222b      	movmi	r2, #43	; 0x2b
    98d0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    98d4:	7832      	ldrb	r2, [r6, #0]
    98d6:	2a2a      	cmp	r2, #42	; 0x2a
    98d8:	d013      	beq.n	9902 <_svfiprintf_r+0xea>
    98da:	9a07      	ldr	r2, [sp, #28]
    98dc:	4634      	mov	r4, r6
    98de:	2000      	movs	r0, #0
    98e0:	260a      	movs	r6, #10
    98e2:	4621      	mov	r1, r4
    98e4:	f811 3b01 	ldrb.w	r3, [r1], #1
    98e8:	3b30      	subs	r3, #48	; 0x30
    98ea:	2b09      	cmp	r3, #9
    98ec:	d94b      	bls.n	9986 <_svfiprintf_r+0x16e>
    98ee:	b970      	cbnz	r0, 990e <_svfiprintf_r+0xf6>
    98f0:	e014      	b.n	991c <_svfiprintf_r+0x104>
    98f2:	eba0 0009 	sub.w	r0, r0, r9
    98f6:	fa0a f000 	lsl.w	r0, sl, r0
    98fa:	4318      	orrs	r0, r3
    98fc:	9004      	str	r0, [sp, #16]
    98fe:	4626      	mov	r6, r4
    9900:	e7d5      	b.n	98ae <_svfiprintf_r+0x96>
    9902:	9a03      	ldr	r2, [sp, #12]
    9904:	1d11      	adds	r1, r2, #4
    9906:	6812      	ldr	r2, [r2, #0]
    9908:	9103      	str	r1, [sp, #12]
    990a:	2a00      	cmp	r2, #0
    990c:	db01      	blt.n	9912 <_svfiprintf_r+0xfa>
    990e:	9207      	str	r2, [sp, #28]
    9910:	e004      	b.n	991c <_svfiprintf_r+0x104>
    9912:	4252      	negs	r2, r2
    9914:	f043 0302 	orr.w	r3, r3, #2
    9918:	9207      	str	r2, [sp, #28]
    991a:	9304      	str	r3, [sp, #16]
    991c:	7823      	ldrb	r3, [r4, #0]
    991e:	2b2e      	cmp	r3, #46	; 0x2e
    9920:	d10c      	bne.n	993c <_svfiprintf_r+0x124>
    9922:	7863      	ldrb	r3, [r4, #1]
    9924:	2b2a      	cmp	r3, #42	; 0x2a
    9926:	d133      	bne.n	9990 <_svfiprintf_r+0x178>
    9928:	9b03      	ldr	r3, [sp, #12]
    992a:	1d1a      	adds	r2, r3, #4
    992c:	681b      	ldr	r3, [r3, #0]
    992e:	9203      	str	r2, [sp, #12]
    9930:	2b00      	cmp	r3, #0
    9932:	bfb8      	it	lt
    9934:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    9938:	3402      	adds	r4, #2
    993a:	9305      	str	r3, [sp, #20]
    993c:	4e2e      	ldr	r6, [pc, #184]	; (99f8 <_svfiprintf_r+0x1e0>)
    993e:	7821      	ldrb	r1, [r4, #0]
    9940:	2203      	movs	r2, #3
    9942:	4630      	mov	r0, r6
    9944:	f7ff fa84 	bl	8e50 <memchr>
    9948:	b138      	cbz	r0, 995a <_svfiprintf_r+0x142>
    994a:	2340      	movs	r3, #64	; 0x40
    994c:	1b80      	subs	r0, r0, r6
    994e:	fa03 f000 	lsl.w	r0, r3, r0
    9952:	9b04      	ldr	r3, [sp, #16]
    9954:	4303      	orrs	r3, r0
    9956:	3401      	adds	r4, #1
    9958:	9304      	str	r3, [sp, #16]
    995a:	f814 1b01 	ldrb.w	r1, [r4], #1
    995e:	4827      	ldr	r0, [pc, #156]	; (99fc <_svfiprintf_r+0x1e4>)
    9960:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    9964:	2206      	movs	r2, #6
    9966:	f7ff fa73 	bl	8e50 <memchr>
    996a:	2800      	cmp	r0, #0
    996c:	d038      	beq.n	99e0 <_svfiprintf_r+0x1c8>
    996e:	4b24      	ldr	r3, [pc, #144]	; (9a00 <_svfiprintf_r+0x1e8>)
    9970:	bb13      	cbnz	r3, 99b8 <_svfiprintf_r+0x1a0>
    9972:	9b03      	ldr	r3, [sp, #12]
    9974:	3307      	adds	r3, #7
    9976:	f023 0307 	bic.w	r3, r3, #7
    997a:	3308      	adds	r3, #8
    997c:	9303      	str	r3, [sp, #12]
    997e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9980:	4443      	add	r3, r8
    9982:	9309      	str	r3, [sp, #36]	; 0x24
    9984:	e76e      	b.n	9864 <_svfiprintf_r+0x4c>
    9986:	fb06 3202 	mla	r2, r6, r2, r3
    998a:	2001      	movs	r0, #1
    998c:	460c      	mov	r4, r1
    998e:	e7a8      	b.n	98e2 <_svfiprintf_r+0xca>
    9990:	2300      	movs	r3, #0
    9992:	3401      	adds	r4, #1
    9994:	9305      	str	r3, [sp, #20]
    9996:	4619      	mov	r1, r3
    9998:	260a      	movs	r6, #10
    999a:	4620      	mov	r0, r4
    999c:	f810 2b01 	ldrb.w	r2, [r0], #1
    99a0:	3a30      	subs	r2, #48	; 0x30
    99a2:	2a09      	cmp	r2, #9
    99a4:	d903      	bls.n	99ae <_svfiprintf_r+0x196>
    99a6:	2b00      	cmp	r3, #0
    99a8:	d0c8      	beq.n	993c <_svfiprintf_r+0x124>
    99aa:	9105      	str	r1, [sp, #20]
    99ac:	e7c6      	b.n	993c <_svfiprintf_r+0x124>
    99ae:	fb06 2101 	mla	r1, r6, r1, r2
    99b2:	2301      	movs	r3, #1
    99b4:	4604      	mov	r4, r0
    99b6:	e7f0      	b.n	999a <_svfiprintf_r+0x182>
    99b8:	ab03      	add	r3, sp, #12
    99ba:	9300      	str	r3, [sp, #0]
    99bc:	462a      	mov	r2, r5
    99be:	4b11      	ldr	r3, [pc, #68]	; (9a04 <_svfiprintf_r+0x1ec>)
    99c0:	a904      	add	r1, sp, #16
    99c2:	4638      	mov	r0, r7
    99c4:	f7fb feda 	bl	577c <_printf_float>
    99c8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    99cc:	4680      	mov	r8, r0
    99ce:	d1d6      	bne.n	997e <_svfiprintf_r+0x166>
    99d0:	89ab      	ldrh	r3, [r5, #12]
    99d2:	065b      	lsls	r3, r3, #25
    99d4:	f53f af34 	bmi.w	9840 <_svfiprintf_r+0x28>
    99d8:	9809      	ldr	r0, [sp, #36]	; 0x24
    99da:	b01d      	add	sp, #116	; 0x74
    99dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    99e0:	ab03      	add	r3, sp, #12
    99e2:	9300      	str	r3, [sp, #0]
    99e4:	462a      	mov	r2, r5
    99e6:	4b07      	ldr	r3, [pc, #28]	; (9a04 <_svfiprintf_r+0x1ec>)
    99e8:	a904      	add	r1, sp, #16
    99ea:	4638      	mov	r0, r7
    99ec:	f7fc f966 	bl	5cbc <_printf_i>
    99f0:	e7ea      	b.n	99c8 <_svfiprintf_r+0x1b0>
    99f2:	bf00      	nop
    99f4:	0000bb0c 	.word	0x0000bb0c
    99f8:	0000bb12 	.word	0x0000bb12
    99fc:	0000bb16 	.word	0x0000bb16
    9a00:	0000577d 	.word	0x0000577d
    9a04:	00009761 	.word	0x00009761

00009a08 <_sungetc_r>:
_sungetc_r():
    9a08:	b538      	push	{r3, r4, r5, lr}
    9a0a:	1c4b      	adds	r3, r1, #1
    9a0c:	4614      	mov	r4, r2
    9a0e:	d103      	bne.n	9a18 <_sungetc_r+0x10>
    9a10:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    9a14:	4628      	mov	r0, r5
    9a16:	bd38      	pop	{r3, r4, r5, pc}
    9a18:	8993      	ldrh	r3, [r2, #12]
    9a1a:	f023 0320 	bic.w	r3, r3, #32
    9a1e:	8193      	strh	r3, [r2, #12]
    9a20:	6b63      	ldr	r3, [r4, #52]	; 0x34
    9a22:	6852      	ldr	r2, [r2, #4]
    9a24:	b2cd      	uxtb	r5, r1
    9a26:	b18b      	cbz	r3, 9a4c <_sungetc_r+0x44>
    9a28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    9a2a:	4293      	cmp	r3, r2
    9a2c:	dd08      	ble.n	9a40 <_sungetc_r+0x38>
    9a2e:	6823      	ldr	r3, [r4, #0]
    9a30:	1e5a      	subs	r2, r3, #1
    9a32:	6022      	str	r2, [r4, #0]
    9a34:	f803 5c01 	strb.w	r5, [r3, #-1]
    9a38:	6863      	ldr	r3, [r4, #4]
    9a3a:	3301      	adds	r3, #1
    9a3c:	6063      	str	r3, [r4, #4]
    9a3e:	e7e9      	b.n	9a14 <_sungetc_r+0xc>
    9a40:	4621      	mov	r1, r4
    9a42:	f000 fc3d 	bl	a2c0 <__submore>
    9a46:	2800      	cmp	r0, #0
    9a48:	d0f1      	beq.n	9a2e <_sungetc_r+0x26>
    9a4a:	e7e1      	b.n	9a10 <_sungetc_r+0x8>
    9a4c:	6921      	ldr	r1, [r4, #16]
    9a4e:	6823      	ldr	r3, [r4, #0]
    9a50:	b151      	cbz	r1, 9a68 <_sungetc_r+0x60>
    9a52:	4299      	cmp	r1, r3
    9a54:	d208      	bcs.n	9a68 <_sungetc_r+0x60>
    9a56:	f813 1c01 	ldrb.w	r1, [r3, #-1]
    9a5a:	42a9      	cmp	r1, r5
    9a5c:	d104      	bne.n	9a68 <_sungetc_r+0x60>
    9a5e:	3b01      	subs	r3, #1
    9a60:	3201      	adds	r2, #1
    9a62:	6023      	str	r3, [r4, #0]
    9a64:	6062      	str	r2, [r4, #4]
    9a66:	e7d5      	b.n	9a14 <_sungetc_r+0xc>
    9a68:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
    9a6c:	f104 0344 	add.w	r3, r4, #68	; 0x44
    9a70:	6363      	str	r3, [r4, #52]	; 0x34
    9a72:	2303      	movs	r3, #3
    9a74:	63a3      	str	r3, [r4, #56]	; 0x38
    9a76:	4623      	mov	r3, r4
    9a78:	f803 5f46 	strb.w	r5, [r3, #70]!
    9a7c:	6023      	str	r3, [r4, #0]
    9a7e:	2301      	movs	r3, #1
    9a80:	e7dc      	b.n	9a3c <_sungetc_r+0x34>

00009a82 <__ssrefill_r>:
__ssrefill_r():
    9a82:	b510      	push	{r4, lr}
    9a84:	460c      	mov	r4, r1
    9a86:	6b49      	ldr	r1, [r1, #52]	; 0x34
    9a88:	b169      	cbz	r1, 9aa6 <__ssrefill_r+0x24>
    9a8a:	f104 0344 	add.w	r3, r4, #68	; 0x44
    9a8e:	4299      	cmp	r1, r3
    9a90:	d001      	beq.n	9a96 <__ssrefill_r+0x14>
    9a92:	f7fb fbe9 	bl	5268 <_free_r>
    9a96:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9a98:	6063      	str	r3, [r4, #4]
    9a9a:	2000      	movs	r0, #0
    9a9c:	6360      	str	r0, [r4, #52]	; 0x34
    9a9e:	b113      	cbz	r3, 9aa6 <__ssrefill_r+0x24>
    9aa0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    9aa2:	6023      	str	r3, [r4, #0]
    9aa4:	bd10      	pop	{r4, pc}
    9aa6:	6923      	ldr	r3, [r4, #16]
    9aa8:	6023      	str	r3, [r4, #0]
    9aaa:	2300      	movs	r3, #0
    9aac:	6063      	str	r3, [r4, #4]
    9aae:	89a3      	ldrh	r3, [r4, #12]
    9ab0:	f043 0320 	orr.w	r3, r3, #32
    9ab4:	81a3      	strh	r3, [r4, #12]
    9ab6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    9aba:	e7f3      	b.n	9aa4 <__ssrefill_r+0x22>

00009abc <__ssvfiscanf_r>:
__ssvfiscanf_r():
    9abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ac0:	460c      	mov	r4, r1
    9ac2:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
    9ac6:	2100      	movs	r1, #0
    9ac8:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
    9acc:	499a      	ldr	r1, [pc, #616]	; (9d38 <__ssvfiscanf_r+0x27c>)
    9ace:	91a0      	str	r1, [sp, #640]	; 0x280
    9ad0:	f10d 0804 	add.w	r8, sp, #4
    9ad4:	4999      	ldr	r1, [pc, #612]	; (9d3c <__ssvfiscanf_r+0x280>)
    9ad6:	4f9a      	ldr	r7, [pc, #616]	; (9d40 <__ssvfiscanf_r+0x284>)
    9ad8:	f8df 9268 	ldr.w	r9, [pc, #616]	; 9d44 <__ssvfiscanf_r+0x288>
    9adc:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
    9ae0:	4606      	mov	r6, r0
    9ae2:	91a1      	str	r1, [sp, #644]	; 0x284
    9ae4:	9300      	str	r3, [sp, #0]
    9ae6:	f892 a000 	ldrb.w	sl, [r2]
    9aea:	f1ba 0f00 	cmp.w	sl, #0
    9aee:	f000 8120 	beq.w	9d32 <__ssvfiscanf_r+0x276>
    9af2:	f81a 3007 	ldrb.w	r3, [sl, r7]
    9af6:	f013 0308 	ands.w	r3, r3, #8
    9afa:	f102 0501 	add.w	r5, r2, #1
    9afe:	d019      	beq.n	9b34 <__ssvfiscanf_r+0x78>
    9b00:	6863      	ldr	r3, [r4, #4]
    9b02:	2b00      	cmp	r3, #0
    9b04:	dd0f      	ble.n	9b26 <__ssvfiscanf_r+0x6a>
    9b06:	6823      	ldr	r3, [r4, #0]
    9b08:	781a      	ldrb	r2, [r3, #0]
    9b0a:	5cba      	ldrb	r2, [r7, r2]
    9b0c:	0712      	lsls	r2, r2, #28
    9b0e:	d401      	bmi.n	9b14 <__ssvfiscanf_r+0x58>
    9b10:	462a      	mov	r2, r5
    9b12:	e7e8      	b.n	9ae6 <__ssvfiscanf_r+0x2a>
    9b14:	9a45      	ldr	r2, [sp, #276]	; 0x114
    9b16:	3201      	adds	r2, #1
    9b18:	9245      	str	r2, [sp, #276]	; 0x114
    9b1a:	6862      	ldr	r2, [r4, #4]
    9b1c:	3301      	adds	r3, #1
    9b1e:	3a01      	subs	r2, #1
    9b20:	6062      	str	r2, [r4, #4]
    9b22:	6023      	str	r3, [r4, #0]
    9b24:	e7ec      	b.n	9b00 <__ssvfiscanf_r+0x44>
    9b26:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    9b28:	4621      	mov	r1, r4
    9b2a:	4630      	mov	r0, r6
    9b2c:	4798      	blx	r3
    9b2e:	2800      	cmp	r0, #0
    9b30:	d0e9      	beq.n	9b06 <__ssvfiscanf_r+0x4a>
    9b32:	e7ed      	b.n	9b10 <__ssvfiscanf_r+0x54>
    9b34:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
    9b38:	d17d      	bne.n	9c36 <__ssvfiscanf_r+0x17a>
    9b3a:	9341      	str	r3, [sp, #260]	; 0x104
    9b3c:	9343      	str	r3, [sp, #268]	; 0x10c
    9b3e:	7853      	ldrb	r3, [r2, #1]
    9b40:	2b2a      	cmp	r3, #42	; 0x2a
    9b42:	bf02      	ittt	eq
    9b44:	2310      	moveq	r3, #16
    9b46:	1c95      	addeq	r5, r2, #2
    9b48:	9341      	streq	r3, [sp, #260]	; 0x104
    9b4a:	220a      	movs	r2, #10
    9b4c:	46ab      	mov	fp, r5
    9b4e:	f81b 1b01 	ldrb.w	r1, [fp], #1
    9b52:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    9b56:	2b09      	cmp	r3, #9
    9b58:	d921      	bls.n	9b9e <__ssvfiscanf_r+0xe2>
    9b5a:	2203      	movs	r2, #3
    9b5c:	4879      	ldr	r0, [pc, #484]	; (9d44 <__ssvfiscanf_r+0x288>)
    9b5e:	f7ff f977 	bl	8e50 <memchr>
    9b62:	b138      	cbz	r0, 9b74 <__ssvfiscanf_r+0xb8>
    9b64:	eba0 0309 	sub.w	r3, r0, r9
    9b68:	2001      	movs	r0, #1
    9b6a:	4098      	lsls	r0, r3
    9b6c:	9b41      	ldr	r3, [sp, #260]	; 0x104
    9b6e:	4318      	orrs	r0, r3
    9b70:	9041      	str	r0, [sp, #260]	; 0x104
    9b72:	465d      	mov	r5, fp
    9b74:	f815 3b01 	ldrb.w	r3, [r5], #1
    9b78:	2b67      	cmp	r3, #103	; 0x67
    9b7a:	d848      	bhi.n	9c0e <__ssvfiscanf_r+0x152>
    9b7c:	2b65      	cmp	r3, #101	; 0x65
    9b7e:	f080 809e 	bcs.w	9cbe <__ssvfiscanf_r+0x202>
    9b82:	2b47      	cmp	r3, #71	; 0x47
    9b84:	d812      	bhi.n	9bac <__ssvfiscanf_r+0xf0>
    9b86:	2b45      	cmp	r3, #69	; 0x45
    9b88:	f080 8099 	bcs.w	9cbe <__ssvfiscanf_r+0x202>
    9b8c:	2b00      	cmp	r3, #0
    9b8e:	d06b      	beq.n	9c68 <__ssvfiscanf_r+0x1ac>
    9b90:	2b25      	cmp	r3, #37	; 0x25
    9b92:	d050      	beq.n	9c36 <__ssvfiscanf_r+0x17a>
    9b94:	2303      	movs	r3, #3
    9b96:	9347      	str	r3, [sp, #284]	; 0x11c
    9b98:	230a      	movs	r3, #10
    9b9a:	9342      	str	r3, [sp, #264]	; 0x108
    9b9c:	e016      	b.n	9bcc <__ssvfiscanf_r+0x110>
    9b9e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
    9ba0:	fb02 1303 	mla	r3, r2, r3, r1
    9ba4:	3b30      	subs	r3, #48	; 0x30
    9ba6:	9343      	str	r3, [sp, #268]	; 0x10c
    9ba8:	465d      	mov	r5, fp
    9baa:	e7cf      	b.n	9b4c <__ssvfiscanf_r+0x90>
    9bac:	2b5b      	cmp	r3, #91	; 0x5b
    9bae:	d067      	beq.n	9c80 <__ssvfiscanf_r+0x1c4>
    9bb0:	d827      	bhi.n	9c02 <__ssvfiscanf_r+0x146>
    9bb2:	2b58      	cmp	r3, #88	; 0x58
    9bb4:	d1ee      	bne.n	9b94 <__ssvfiscanf_r+0xd8>
    9bb6:	9a41      	ldr	r2, [sp, #260]	; 0x104
    9bb8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    9bbc:	9241      	str	r2, [sp, #260]	; 0x104
    9bbe:	2210      	movs	r2, #16
    9bc0:	2b6f      	cmp	r3, #111	; 0x6f
    9bc2:	9242      	str	r2, [sp, #264]	; 0x108
    9bc4:	bf34      	ite	cc
    9bc6:	2303      	movcc	r3, #3
    9bc8:	2304      	movcs	r3, #4
    9bca:	9347      	str	r3, [sp, #284]	; 0x11c
    9bcc:	6863      	ldr	r3, [r4, #4]
    9bce:	2b00      	cmp	r3, #0
    9bd0:	dd77      	ble.n	9cc2 <__ssvfiscanf_r+0x206>
    9bd2:	9b41      	ldr	r3, [sp, #260]	; 0x104
    9bd4:	0659      	lsls	r1, r3, #25
    9bd6:	d404      	bmi.n	9be2 <__ssvfiscanf_r+0x126>
    9bd8:	6823      	ldr	r3, [r4, #0]
    9bda:	781a      	ldrb	r2, [r3, #0]
    9bdc:	5cba      	ldrb	r2, [r7, r2]
    9bde:	0712      	lsls	r2, r2, #28
    9be0:	d476      	bmi.n	9cd0 <__ssvfiscanf_r+0x214>
    9be2:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    9be4:	2b02      	cmp	r3, #2
    9be6:	f300 8086 	bgt.w	9cf6 <__ssvfiscanf_r+0x23a>
    9bea:	466b      	mov	r3, sp
    9bec:	4622      	mov	r2, r4
    9bee:	a941      	add	r1, sp, #260	; 0x104
    9bf0:	4630      	mov	r0, r6
    9bf2:	f000 f8ab 	bl	9d4c <_scanf_chars>
    9bf6:	2801      	cmp	r0, #1
    9bf8:	f000 809b 	beq.w	9d32 <__ssvfiscanf_r+0x276>
    9bfc:	2802      	cmp	r0, #2
    9bfe:	d187      	bne.n	9b10 <__ssvfiscanf_r+0x54>
    9c00:	e02f      	b.n	9c62 <__ssvfiscanf_r+0x1a6>
    9c02:	2b63      	cmp	r3, #99	; 0x63
    9c04:	d047      	beq.n	9c96 <__ssvfiscanf_r+0x1da>
    9c06:	2b64      	cmp	r3, #100	; 0x64
    9c08:	d1c4      	bne.n	9b94 <__ssvfiscanf_r+0xd8>
    9c0a:	220a      	movs	r2, #10
    9c0c:	e7d8      	b.n	9bc0 <__ssvfiscanf_r+0x104>
    9c0e:	2b70      	cmp	r3, #112	; 0x70
    9c10:	d02d      	beq.n	9c6e <__ssvfiscanf_r+0x1b2>
    9c12:	d808      	bhi.n	9c26 <__ssvfiscanf_r+0x16a>
    9c14:	2b6e      	cmp	r3, #110	; 0x6e
    9c16:	d044      	beq.n	9ca2 <__ssvfiscanf_r+0x1e6>
    9c18:	d82e      	bhi.n	9c78 <__ssvfiscanf_r+0x1bc>
    9c1a:	2b69      	cmp	r3, #105	; 0x69
    9c1c:	d1ba      	bne.n	9b94 <__ssvfiscanf_r+0xd8>
    9c1e:	2300      	movs	r3, #0
    9c20:	9342      	str	r3, [sp, #264]	; 0x108
    9c22:	2303      	movs	r3, #3
    9c24:	e7d1      	b.n	9bca <__ssvfiscanf_r+0x10e>
    9c26:	2b75      	cmp	r3, #117	; 0x75
    9c28:	d0ef      	beq.n	9c0a <__ssvfiscanf_r+0x14e>
    9c2a:	2b78      	cmp	r3, #120	; 0x78
    9c2c:	d0c3      	beq.n	9bb6 <__ssvfiscanf_r+0xfa>
    9c2e:	2b73      	cmp	r3, #115	; 0x73
    9c30:	d1b0      	bne.n	9b94 <__ssvfiscanf_r+0xd8>
    9c32:	2302      	movs	r3, #2
    9c34:	e7c9      	b.n	9bca <__ssvfiscanf_r+0x10e>
    9c36:	6863      	ldr	r3, [r4, #4]
    9c38:	2b00      	cmp	r3, #0
    9c3a:	dd0c      	ble.n	9c56 <__ssvfiscanf_r+0x19a>
    9c3c:	6823      	ldr	r3, [r4, #0]
    9c3e:	781a      	ldrb	r2, [r3, #0]
    9c40:	4552      	cmp	r2, sl
    9c42:	d176      	bne.n	9d32 <__ssvfiscanf_r+0x276>
    9c44:	3301      	adds	r3, #1
    9c46:	6862      	ldr	r2, [r4, #4]
    9c48:	6023      	str	r3, [r4, #0]
    9c4a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    9c4c:	3a01      	subs	r2, #1
    9c4e:	3301      	adds	r3, #1
    9c50:	6062      	str	r2, [r4, #4]
    9c52:	9345      	str	r3, [sp, #276]	; 0x114
    9c54:	e75c      	b.n	9b10 <__ssvfiscanf_r+0x54>
    9c56:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    9c58:	4621      	mov	r1, r4
    9c5a:	4630      	mov	r0, r6
    9c5c:	4798      	blx	r3
    9c5e:	2800      	cmp	r0, #0
    9c60:	d0ec      	beq.n	9c3c <__ssvfiscanf_r+0x180>
    9c62:	9844      	ldr	r0, [sp, #272]	; 0x110
    9c64:	2800      	cmp	r0, #0
    9c66:	d15a      	bne.n	9d1e <__ssvfiscanf_r+0x262>
    9c68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    9c6c:	e05d      	b.n	9d2a <__ssvfiscanf_r+0x26e>
    9c6e:	9a41      	ldr	r2, [sp, #260]	; 0x104
    9c70:	f042 0220 	orr.w	r2, r2, #32
    9c74:	9241      	str	r2, [sp, #260]	; 0x104
    9c76:	e79e      	b.n	9bb6 <__ssvfiscanf_r+0xfa>
    9c78:	2308      	movs	r3, #8
    9c7a:	9342      	str	r3, [sp, #264]	; 0x108
    9c7c:	2304      	movs	r3, #4
    9c7e:	e7a4      	b.n	9bca <__ssvfiscanf_r+0x10e>
    9c80:	4629      	mov	r1, r5
    9c82:	4640      	mov	r0, r8
    9c84:	f000 fa2c 	bl	a0e0 <__sccl>
    9c88:	9b41      	ldr	r3, [sp, #260]	; 0x104
    9c8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    9c8e:	9341      	str	r3, [sp, #260]	; 0x104
    9c90:	4605      	mov	r5, r0
    9c92:	2301      	movs	r3, #1
    9c94:	e799      	b.n	9bca <__ssvfiscanf_r+0x10e>
    9c96:	9b41      	ldr	r3, [sp, #260]	; 0x104
    9c98:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    9c9c:	9341      	str	r3, [sp, #260]	; 0x104
    9c9e:	2300      	movs	r3, #0
    9ca0:	e793      	b.n	9bca <__ssvfiscanf_r+0x10e>
    9ca2:	9841      	ldr	r0, [sp, #260]	; 0x104
    9ca4:	06c3      	lsls	r3, r0, #27
    9ca6:	f53f af33 	bmi.w	9b10 <__ssvfiscanf_r+0x54>
    9caa:	9b00      	ldr	r3, [sp, #0]
    9cac:	9a45      	ldr	r2, [sp, #276]	; 0x114
    9cae:	1d19      	adds	r1, r3, #4
    9cb0:	9100      	str	r1, [sp, #0]
    9cb2:	681b      	ldr	r3, [r3, #0]
    9cb4:	07c0      	lsls	r0, r0, #31
    9cb6:	bf4c      	ite	mi
    9cb8:	801a      	strhmi	r2, [r3, #0]
    9cba:	601a      	strpl	r2, [r3, #0]
    9cbc:	e728      	b.n	9b10 <__ssvfiscanf_r+0x54>
    9cbe:	2305      	movs	r3, #5
    9cc0:	e783      	b.n	9bca <__ssvfiscanf_r+0x10e>
    9cc2:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    9cc4:	4621      	mov	r1, r4
    9cc6:	4630      	mov	r0, r6
    9cc8:	4798      	blx	r3
    9cca:	2800      	cmp	r0, #0
    9ccc:	d081      	beq.n	9bd2 <__ssvfiscanf_r+0x116>
    9cce:	e7c8      	b.n	9c62 <__ssvfiscanf_r+0x1a6>
    9cd0:	9a45      	ldr	r2, [sp, #276]	; 0x114
    9cd2:	3201      	adds	r2, #1
    9cd4:	9245      	str	r2, [sp, #276]	; 0x114
    9cd6:	6862      	ldr	r2, [r4, #4]
    9cd8:	3a01      	subs	r2, #1
    9cda:	2a00      	cmp	r2, #0
    9cdc:	6062      	str	r2, [r4, #4]
    9cde:	dd02      	ble.n	9ce6 <__ssvfiscanf_r+0x22a>
    9ce0:	3301      	adds	r3, #1
    9ce2:	6023      	str	r3, [r4, #0]
    9ce4:	e778      	b.n	9bd8 <__ssvfiscanf_r+0x11c>
    9ce6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    9ce8:	4621      	mov	r1, r4
    9cea:	4630      	mov	r0, r6
    9cec:	4798      	blx	r3
    9cee:	2800      	cmp	r0, #0
    9cf0:	f43f af72 	beq.w	9bd8 <__ssvfiscanf_r+0x11c>
    9cf4:	e7b5      	b.n	9c62 <__ssvfiscanf_r+0x1a6>
    9cf6:	2b04      	cmp	r3, #4
    9cf8:	dc06      	bgt.n	9d08 <__ssvfiscanf_r+0x24c>
    9cfa:	466b      	mov	r3, sp
    9cfc:	4622      	mov	r2, r4
    9cfe:	a941      	add	r1, sp, #260	; 0x104
    9d00:	4630      	mov	r0, r6
    9d02:	f000 f87b 	bl	9dfc <_scanf_i>
    9d06:	e776      	b.n	9bf6 <__ssvfiscanf_r+0x13a>
    9d08:	4b0f      	ldr	r3, [pc, #60]	; (9d48 <__ssvfiscanf_r+0x28c>)
    9d0a:	2b00      	cmp	r3, #0
    9d0c:	f43f af00 	beq.w	9b10 <__ssvfiscanf_r+0x54>
    9d10:	466b      	mov	r3, sp
    9d12:	4622      	mov	r2, r4
    9d14:	a941      	add	r1, sp, #260	; 0x104
    9d16:	4630      	mov	r0, r6
    9d18:	f7fc f8e4 	bl	5ee4 <_scanf_float>
    9d1c:	e76b      	b.n	9bf6 <__ssvfiscanf_r+0x13a>
    9d1e:	89a3      	ldrh	r3, [r4, #12]
    9d20:	f013 0f40 	tst.w	r3, #64	; 0x40
    9d24:	bf18      	it	ne
    9d26:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    9d2a:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
    9d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d32:	9844      	ldr	r0, [sp, #272]	; 0x110
    9d34:	e7f9      	b.n	9d2a <__ssvfiscanf_r+0x26e>
    9d36:	bf00      	nop
    9d38:	00009a09 	.word	0x00009a09
    9d3c:	00009a83 	.word	0x00009a83
    9d40:	0000ba05 	.word	0x0000ba05
    9d44:	0000bb12 	.word	0x0000bb12
    9d48:	00005ee5 	.word	0x00005ee5

00009d4c <_scanf_chars>:
_scanf_chars():
    9d4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9d50:	4615      	mov	r5, r2
    9d52:	688a      	ldr	r2, [r1, #8]
    9d54:	4680      	mov	r8, r0
    9d56:	460c      	mov	r4, r1
    9d58:	b932      	cbnz	r2, 9d68 <_scanf_chars+0x1c>
    9d5a:	698a      	ldr	r2, [r1, #24]
    9d5c:	2a00      	cmp	r2, #0
    9d5e:	bf0c      	ite	eq
    9d60:	2201      	moveq	r2, #1
    9d62:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
    9d66:	608a      	str	r2, [r1, #8]
    9d68:	6822      	ldr	r2, [r4, #0]
    9d6a:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9df8 <_scanf_chars+0xac>
    9d6e:	06d1      	lsls	r1, r2, #27
    9d70:	bf5f      	itttt	pl
    9d72:	681a      	ldrpl	r2, [r3, #0]
    9d74:	1d11      	addpl	r1, r2, #4
    9d76:	6019      	strpl	r1, [r3, #0]
    9d78:	6816      	ldrpl	r6, [r2, #0]
    9d7a:	2700      	movs	r7, #0
    9d7c:	69a0      	ldr	r0, [r4, #24]
    9d7e:	b188      	cbz	r0, 9da4 <_scanf_chars+0x58>
    9d80:	2801      	cmp	r0, #1
    9d82:	d107      	bne.n	9d94 <_scanf_chars+0x48>
    9d84:	682b      	ldr	r3, [r5, #0]
    9d86:	781a      	ldrb	r2, [r3, #0]
    9d88:	6963      	ldr	r3, [r4, #20]
    9d8a:	5c9b      	ldrb	r3, [r3, r2]
    9d8c:	b953      	cbnz	r3, 9da4 <_scanf_chars+0x58>
    9d8e:	bb27      	cbnz	r7, 9dda <_scanf_chars+0x8e>
    9d90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    9d94:	2802      	cmp	r0, #2
    9d96:	d120      	bne.n	9dda <_scanf_chars+0x8e>
    9d98:	682b      	ldr	r3, [r5, #0]
    9d9a:	781b      	ldrb	r3, [r3, #0]
    9d9c:	f813 3009 	ldrb.w	r3, [r3, r9]
    9da0:	071b      	lsls	r3, r3, #28
    9da2:	d41a      	bmi.n	9dda <_scanf_chars+0x8e>
    9da4:	6823      	ldr	r3, [r4, #0]
    9da6:	06da      	lsls	r2, r3, #27
    9da8:	bf5e      	ittt	pl
    9daa:	682b      	ldrpl	r3, [r5, #0]
    9dac:	781b      	ldrbpl	r3, [r3, #0]
    9dae:	f806 3b01 	strbpl.w	r3, [r6], #1
    9db2:	682a      	ldr	r2, [r5, #0]
    9db4:	686b      	ldr	r3, [r5, #4]
    9db6:	3201      	adds	r2, #1
    9db8:	602a      	str	r2, [r5, #0]
    9dba:	68a2      	ldr	r2, [r4, #8]
    9dbc:	3b01      	subs	r3, #1
    9dbe:	3a01      	subs	r2, #1
    9dc0:	606b      	str	r3, [r5, #4]
    9dc2:	3701      	adds	r7, #1
    9dc4:	60a2      	str	r2, [r4, #8]
    9dc6:	b142      	cbz	r2, 9dda <_scanf_chars+0x8e>
    9dc8:	2b00      	cmp	r3, #0
    9dca:	dcd7      	bgt.n	9d7c <_scanf_chars+0x30>
    9dcc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    9dd0:	4629      	mov	r1, r5
    9dd2:	4640      	mov	r0, r8
    9dd4:	4798      	blx	r3
    9dd6:	2800      	cmp	r0, #0
    9dd8:	d0d0      	beq.n	9d7c <_scanf_chars+0x30>
    9dda:	6823      	ldr	r3, [r4, #0]
    9ddc:	f013 0310 	ands.w	r3, r3, #16
    9de0:	d105      	bne.n	9dee <_scanf_chars+0xa2>
    9de2:	68e2      	ldr	r2, [r4, #12]
    9de4:	3201      	adds	r2, #1
    9de6:	60e2      	str	r2, [r4, #12]
    9de8:	69a2      	ldr	r2, [r4, #24]
    9dea:	b102      	cbz	r2, 9dee <_scanf_chars+0xa2>
    9dec:	7033      	strb	r3, [r6, #0]
    9dee:	6923      	ldr	r3, [r4, #16]
    9df0:	441f      	add	r7, r3
    9df2:	6127      	str	r7, [r4, #16]
    9df4:	2000      	movs	r0, #0
    9df6:	e7cb      	b.n	9d90 <_scanf_chars+0x44>
    9df8:	0000ba05 	.word	0x0000ba05

00009dfc <_scanf_i>:
_scanf_i():
    9dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9e00:	4699      	mov	r9, r3
    9e02:	4b74      	ldr	r3, [pc, #464]	; (9fd4 <_scanf_i+0x1d8>)
    9e04:	460c      	mov	r4, r1
    9e06:	4682      	mov	sl, r0
    9e08:	4616      	mov	r6, r2
    9e0a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    9e0e:	b087      	sub	sp, #28
    9e10:	ab03      	add	r3, sp, #12
    9e12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    9e16:	4b70      	ldr	r3, [pc, #448]	; (9fd8 <_scanf_i+0x1dc>)
    9e18:	69a1      	ldr	r1, [r4, #24]
    9e1a:	4a70      	ldr	r2, [pc, #448]	; (9fdc <_scanf_i+0x1e0>)
    9e1c:	2903      	cmp	r1, #3
    9e1e:	bf18      	it	ne
    9e20:	461a      	movne	r2, r3
    9e22:	68a3      	ldr	r3, [r4, #8]
    9e24:	9201      	str	r2, [sp, #4]
    9e26:	1e5a      	subs	r2, r3, #1
    9e28:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    9e2c:	bf88      	it	hi
    9e2e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    9e32:	4627      	mov	r7, r4
    9e34:	bf82      	ittt	hi
    9e36:	eb03 0805 	addhi.w	r8, r3, r5
    9e3a:	f240 135d 	movwhi	r3, #349	; 0x15d
    9e3e:	60a3      	strhi	r3, [r4, #8]
    9e40:	f857 3b1c 	ldr.w	r3, [r7], #28
    9e44:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
    9e48:	bf98      	it	ls
    9e4a:	f04f 0800 	movls.w	r8, #0
    9e4e:	6023      	str	r3, [r4, #0]
    9e50:	463d      	mov	r5, r7
    9e52:	f04f 0b00 	mov.w	fp, #0
    9e56:	6831      	ldr	r1, [r6, #0]
    9e58:	ab03      	add	r3, sp, #12
    9e5a:	2202      	movs	r2, #2
    9e5c:	7809      	ldrb	r1, [r1, #0]
    9e5e:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
    9e62:	f7fe fff5 	bl	8e50 <memchr>
    9e66:	b328      	cbz	r0, 9eb4 <_scanf_i+0xb8>
    9e68:	f1bb 0f01 	cmp.w	fp, #1
    9e6c:	d159      	bne.n	9f22 <_scanf_i+0x126>
    9e6e:	6862      	ldr	r2, [r4, #4]
    9e70:	b92a      	cbnz	r2, 9e7e <_scanf_i+0x82>
    9e72:	6822      	ldr	r2, [r4, #0]
    9e74:	2308      	movs	r3, #8
    9e76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    9e7a:	6063      	str	r3, [r4, #4]
    9e7c:	6022      	str	r2, [r4, #0]
    9e7e:	6822      	ldr	r2, [r4, #0]
    9e80:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
    9e84:	6022      	str	r2, [r4, #0]
    9e86:	68a2      	ldr	r2, [r4, #8]
    9e88:	1e51      	subs	r1, r2, #1
    9e8a:	60a1      	str	r1, [r4, #8]
    9e8c:	b192      	cbz	r2, 9eb4 <_scanf_i+0xb8>
    9e8e:	6832      	ldr	r2, [r6, #0]
    9e90:	1c51      	adds	r1, r2, #1
    9e92:	6031      	str	r1, [r6, #0]
    9e94:	7812      	ldrb	r2, [r2, #0]
    9e96:	f805 2b01 	strb.w	r2, [r5], #1
    9e9a:	6872      	ldr	r2, [r6, #4]
    9e9c:	3a01      	subs	r2, #1
    9e9e:	2a00      	cmp	r2, #0
    9ea0:	6072      	str	r2, [r6, #4]
    9ea2:	dc07      	bgt.n	9eb4 <_scanf_i+0xb8>
    9ea4:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
    9ea8:	4631      	mov	r1, r6
    9eaa:	4650      	mov	r0, sl
    9eac:	4790      	blx	r2
    9eae:	2800      	cmp	r0, #0
    9eb0:	f040 8085 	bne.w	9fbe <_scanf_i+0x1c2>
    9eb4:	f10b 0b01 	add.w	fp, fp, #1
    9eb8:	f1bb 0f03 	cmp.w	fp, #3
    9ebc:	d1cb      	bne.n	9e56 <_scanf_i+0x5a>
    9ebe:	6863      	ldr	r3, [r4, #4]
    9ec0:	b90b      	cbnz	r3, 9ec6 <_scanf_i+0xca>
    9ec2:	230a      	movs	r3, #10
    9ec4:	6063      	str	r3, [r4, #4]
    9ec6:	6863      	ldr	r3, [r4, #4]
    9ec8:	4945      	ldr	r1, [pc, #276]	; (9fe0 <_scanf_i+0x1e4>)
    9eca:	6960      	ldr	r0, [r4, #20]
    9ecc:	1ac9      	subs	r1, r1, r3
    9ece:	f000 f907 	bl	a0e0 <__sccl>
    9ed2:	f04f 0b00 	mov.w	fp, #0
    9ed6:	68a3      	ldr	r3, [r4, #8]
    9ed8:	6822      	ldr	r2, [r4, #0]
    9eda:	2b00      	cmp	r3, #0
    9edc:	d03d      	beq.n	9f5a <_scanf_i+0x15e>
    9ede:	6831      	ldr	r1, [r6, #0]
    9ee0:	6960      	ldr	r0, [r4, #20]
    9ee2:	f891 c000 	ldrb.w	ip, [r1]
    9ee6:	f810 000c 	ldrb.w	r0, [r0, ip]
    9eea:	2800      	cmp	r0, #0
    9eec:	d035      	beq.n	9f5a <_scanf_i+0x15e>
    9eee:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
    9ef2:	d124      	bne.n	9f3e <_scanf_i+0x142>
    9ef4:	0510      	lsls	r0, r2, #20
    9ef6:	d522      	bpl.n	9f3e <_scanf_i+0x142>
    9ef8:	f10b 0b01 	add.w	fp, fp, #1
    9efc:	f1b8 0f00 	cmp.w	r8, #0
    9f00:	d003      	beq.n	9f0a <_scanf_i+0x10e>
    9f02:	3301      	adds	r3, #1
    9f04:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    9f08:	60a3      	str	r3, [r4, #8]
    9f0a:	6873      	ldr	r3, [r6, #4]
    9f0c:	3b01      	subs	r3, #1
    9f0e:	2b00      	cmp	r3, #0
    9f10:	6073      	str	r3, [r6, #4]
    9f12:	dd1b      	ble.n	9f4c <_scanf_i+0x150>
    9f14:	6833      	ldr	r3, [r6, #0]
    9f16:	3301      	adds	r3, #1
    9f18:	6033      	str	r3, [r6, #0]
    9f1a:	68a3      	ldr	r3, [r4, #8]
    9f1c:	3b01      	subs	r3, #1
    9f1e:	60a3      	str	r3, [r4, #8]
    9f20:	e7d9      	b.n	9ed6 <_scanf_i+0xda>
    9f22:	f1bb 0f02 	cmp.w	fp, #2
    9f26:	d1ae      	bne.n	9e86 <_scanf_i+0x8a>
    9f28:	6822      	ldr	r2, [r4, #0]
    9f2a:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
    9f2e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    9f32:	d1bf      	bne.n	9eb4 <_scanf_i+0xb8>
    9f34:	2310      	movs	r3, #16
    9f36:	6063      	str	r3, [r4, #4]
    9f38:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    9f3c:	e7a2      	b.n	9e84 <_scanf_i+0x88>
    9f3e:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
    9f42:	6022      	str	r2, [r4, #0]
    9f44:	780b      	ldrb	r3, [r1, #0]
    9f46:	f805 3b01 	strb.w	r3, [r5], #1
    9f4a:	e7de      	b.n	9f0a <_scanf_i+0x10e>
    9f4c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    9f50:	4631      	mov	r1, r6
    9f52:	4650      	mov	r0, sl
    9f54:	4798      	blx	r3
    9f56:	2800      	cmp	r0, #0
    9f58:	d0df      	beq.n	9f1a <_scanf_i+0x11e>
    9f5a:	6823      	ldr	r3, [r4, #0]
    9f5c:	05d9      	lsls	r1, r3, #23
    9f5e:	d50d      	bpl.n	9f7c <_scanf_i+0x180>
    9f60:	42bd      	cmp	r5, r7
    9f62:	d909      	bls.n	9f78 <_scanf_i+0x17c>
    9f64:	f815 1c01 	ldrb.w	r1, [r5, #-1]
    9f68:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    9f6c:	4632      	mov	r2, r6
    9f6e:	4650      	mov	r0, sl
    9f70:	4798      	blx	r3
    9f72:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
    9f76:	4645      	mov	r5, r8
    9f78:	42bd      	cmp	r5, r7
    9f7a:	d028      	beq.n	9fce <_scanf_i+0x1d2>
    9f7c:	6822      	ldr	r2, [r4, #0]
    9f7e:	f012 0210 	ands.w	r2, r2, #16
    9f82:	d113      	bne.n	9fac <_scanf_i+0x1b0>
    9f84:	702a      	strb	r2, [r5, #0]
    9f86:	6863      	ldr	r3, [r4, #4]
    9f88:	9e01      	ldr	r6, [sp, #4]
    9f8a:	4639      	mov	r1, r7
    9f8c:	4650      	mov	r0, sl
    9f8e:	47b0      	blx	r6
    9f90:	f8d9 3000 	ldr.w	r3, [r9]
    9f94:	6821      	ldr	r1, [r4, #0]
    9f96:	1d1a      	adds	r2, r3, #4
    9f98:	f8c9 2000 	str.w	r2, [r9]
    9f9c:	f011 0f20 	tst.w	r1, #32
    9fa0:	681b      	ldr	r3, [r3, #0]
    9fa2:	d00f      	beq.n	9fc4 <_scanf_i+0x1c8>
    9fa4:	6018      	str	r0, [r3, #0]
    9fa6:	68e3      	ldr	r3, [r4, #12]
    9fa8:	3301      	adds	r3, #1
    9faa:	60e3      	str	r3, [r4, #12]
    9fac:	1bed      	subs	r5, r5, r7
    9fae:	44ab      	add	fp, r5
    9fb0:	6925      	ldr	r5, [r4, #16]
    9fb2:	445d      	add	r5, fp
    9fb4:	6125      	str	r5, [r4, #16]
    9fb6:	2000      	movs	r0, #0
    9fb8:	b007      	add	sp, #28
    9fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9fbe:	f04f 0b00 	mov.w	fp, #0
    9fc2:	e7ca      	b.n	9f5a <_scanf_i+0x15e>
    9fc4:	07ca      	lsls	r2, r1, #31
    9fc6:	bf4c      	ite	mi
    9fc8:	8018      	strhmi	r0, [r3, #0]
    9fca:	6018      	strpl	r0, [r3, #0]
    9fcc:	e7eb      	b.n	9fa6 <_scanf_i+0x1aa>
    9fce:	2001      	movs	r0, #1
    9fd0:	e7f2      	b.n	9fb8 <_scanf_i+0x1bc>
    9fd2:	bf00      	nop
    9fd4:	0000bd2c 	.word	0x0000bd2c
    9fd8:	0000a2bd 	.word	0x0000a2bd
    9fdc:	000073c5 	.word	0x000073c5
    9fe0:	0000bd48 	.word	0x0000bd48

00009fe4 <_putc_r>:
_putc_r():
    9fe4:	b570      	push	{r4, r5, r6, lr}
    9fe6:	460d      	mov	r5, r1
    9fe8:	4614      	mov	r4, r2
    9fea:	4606      	mov	r6, r0
    9fec:	b118      	cbz	r0, 9ff6 <_putc_r+0x12>
    9fee:	6983      	ldr	r3, [r0, #24]
    9ff0:	b90b      	cbnz	r3, 9ff6 <_putc_r+0x12>
    9ff2:	f7fe fa8b 	bl	850c <__sinit>
    9ff6:	4b1c      	ldr	r3, [pc, #112]	; (a068 <_putc_r+0x84>)
    9ff8:	429c      	cmp	r4, r3
    9ffa:	d124      	bne.n	a046 <_putc_r+0x62>
    9ffc:	6874      	ldr	r4, [r6, #4]
    9ffe:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a000:	07d8      	lsls	r0, r3, #31
    a002:	d405      	bmi.n	a010 <_putc_r+0x2c>
    a004:	89a3      	ldrh	r3, [r4, #12]
    a006:	0599      	lsls	r1, r3, #22
    a008:	d402      	bmi.n	a010 <_putc_r+0x2c>
    a00a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a00c:	f7fb f8e9 	bl	51e2 <__retarget_lock_acquire_recursive>
    a010:	68a3      	ldr	r3, [r4, #8]
    a012:	3b01      	subs	r3, #1
    a014:	2b00      	cmp	r3, #0
    a016:	60a3      	str	r3, [r4, #8]
    a018:	da05      	bge.n	a026 <_putc_r+0x42>
    a01a:	69a2      	ldr	r2, [r4, #24]
    a01c:	4293      	cmp	r3, r2
    a01e:	db1c      	blt.n	a05a <_putc_r+0x76>
    a020:	b2eb      	uxtb	r3, r5
    a022:	2b0a      	cmp	r3, #10
    a024:	d019      	beq.n	a05a <_putc_r+0x76>
    a026:	6823      	ldr	r3, [r4, #0]
    a028:	1c5a      	adds	r2, r3, #1
    a02a:	6022      	str	r2, [r4, #0]
    a02c:	701d      	strb	r5, [r3, #0]
    a02e:	b2ed      	uxtb	r5, r5
    a030:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a032:	07da      	lsls	r2, r3, #31
    a034:	d405      	bmi.n	a042 <_putc_r+0x5e>
    a036:	89a3      	ldrh	r3, [r4, #12]
    a038:	059b      	lsls	r3, r3, #22
    a03a:	d402      	bmi.n	a042 <_putc_r+0x5e>
    a03c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a03e:	f7fb f8d1 	bl	51e4 <__retarget_lock_release_recursive>
    a042:	4628      	mov	r0, r5
    a044:	bd70      	pop	{r4, r5, r6, pc}
    a046:	4b09      	ldr	r3, [pc, #36]	; (a06c <_putc_r+0x88>)
    a048:	429c      	cmp	r4, r3
    a04a:	d101      	bne.n	a050 <_putc_r+0x6c>
    a04c:	68b4      	ldr	r4, [r6, #8]
    a04e:	e7d6      	b.n	9ffe <_putc_r+0x1a>
    a050:	4b07      	ldr	r3, [pc, #28]	; (a070 <_putc_r+0x8c>)
    a052:	429c      	cmp	r4, r3
    a054:	bf08      	it	eq
    a056:	68f4      	ldreq	r4, [r6, #12]
    a058:	e7d1      	b.n	9ffe <_putc_r+0x1a>
    a05a:	4629      	mov	r1, r5
    a05c:	4622      	mov	r2, r4
    a05e:	4630      	mov	r0, r6
    a060:	f7fd fa24 	bl	74ac <__swbuf_r>
    a064:	4605      	mov	r5, r0
    a066:	e7e3      	b.n	a030 <_putc_r+0x4c>
    a068:	0000bbd8 	.word	0x0000bbd8
    a06c:	0000bbf8 	.word	0x0000bbf8
    a070:	0000bbb8 	.word	0x0000bbb8

0000a074 <__srget_r>:
__srget_r():
    a074:	b538      	push	{r3, r4, r5, lr}
    a076:	460c      	mov	r4, r1
    a078:	4605      	mov	r5, r0
    a07a:	b118      	cbz	r0, a084 <__srget_r+0x10>
    a07c:	6983      	ldr	r3, [r0, #24]
    a07e:	b90b      	cbnz	r3, a084 <__srget_r+0x10>
    a080:	f7fe fa44 	bl	850c <__sinit>
    a084:	4b0e      	ldr	r3, [pc, #56]	; (a0c0 <__srget_r+0x4c>)
    a086:	429c      	cmp	r4, r3
    a088:	d10d      	bne.n	a0a6 <__srget_r+0x32>
    a08a:	686c      	ldr	r4, [r5, #4]
    a08c:	4621      	mov	r1, r4
    a08e:	4628      	mov	r0, r5
    a090:	f000 f9d8 	bl	a444 <__srefill_r>
    a094:	b988      	cbnz	r0, a0ba <__srget_r+0x46>
    a096:	6863      	ldr	r3, [r4, #4]
    a098:	3b01      	subs	r3, #1
    a09a:	6063      	str	r3, [r4, #4]
    a09c:	6823      	ldr	r3, [r4, #0]
    a09e:	1c5a      	adds	r2, r3, #1
    a0a0:	6022      	str	r2, [r4, #0]
    a0a2:	7818      	ldrb	r0, [r3, #0]
    a0a4:	bd38      	pop	{r3, r4, r5, pc}
    a0a6:	4b07      	ldr	r3, [pc, #28]	; (a0c4 <__srget_r+0x50>)
    a0a8:	429c      	cmp	r4, r3
    a0aa:	d101      	bne.n	a0b0 <__srget_r+0x3c>
    a0ac:	68ac      	ldr	r4, [r5, #8]
    a0ae:	e7ed      	b.n	a08c <__srget_r+0x18>
    a0b0:	4b05      	ldr	r3, [pc, #20]	; (a0c8 <__srget_r+0x54>)
    a0b2:	429c      	cmp	r4, r3
    a0b4:	bf08      	it	eq
    a0b6:	68ec      	ldreq	r4, [r5, #12]
    a0b8:	e7e8      	b.n	a08c <__srget_r+0x18>
    a0ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a0be:	e7f1      	b.n	a0a4 <__srget_r+0x30>
    a0c0:	0000bbd8 	.word	0x0000bbd8
    a0c4:	0000bbf8 	.word	0x0000bbf8
    a0c8:	0000bbb8 	.word	0x0000bbb8
    a0cc:	ffffffff 	.word	0xffffffff

0000a0d0 <nan>:
nan():
    a0d0:	ed9f 0b01 	vldr	d0, [pc, #4]	; a0d8 <nan+0x8>
    a0d4:	4770      	bx	lr
    a0d6:	bf00      	nop
    a0d8:	00000000 	.word	0x00000000
    a0dc:	7ff80000 	.word	0x7ff80000

0000a0e0 <__sccl>:
__sccl():
    a0e0:	b570      	push	{r4, r5, r6, lr}
    a0e2:	780b      	ldrb	r3, [r1, #0]
    a0e4:	2b5e      	cmp	r3, #94	; 0x5e
    a0e6:	bf13      	iteet	ne
    a0e8:	1c4a      	addne	r2, r1, #1
    a0ea:	1c8a      	addeq	r2, r1, #2
    a0ec:	784b      	ldrbeq	r3, [r1, #1]
    a0ee:	2100      	movne	r1, #0
    a0f0:	bf08      	it	eq
    a0f2:	2101      	moveq	r1, #1
    a0f4:	1e44      	subs	r4, r0, #1
    a0f6:	f100 05ff 	add.w	r5, r0, #255	; 0xff
    a0fa:	f804 1f01 	strb.w	r1, [r4, #1]!
    a0fe:	42ac      	cmp	r4, r5
    a100:	d1fb      	bne.n	a0fa <__sccl+0x1a>
    a102:	b913      	cbnz	r3, a10a <__sccl+0x2a>
    a104:	3a01      	subs	r2, #1
    a106:	4610      	mov	r0, r2
    a108:	bd70      	pop	{r4, r5, r6, pc}
    a10a:	f081 0401 	eor.w	r4, r1, #1
    a10e:	54c4      	strb	r4, [r0, r3]
    a110:	1c51      	adds	r1, r2, #1
    a112:	f811 5c01 	ldrb.w	r5, [r1, #-1]
    a116:	2d2d      	cmp	r5, #45	; 0x2d
    a118:	f101 36ff 	add.w	r6, r1, #4294967295	; 0xffffffff
    a11c:	460a      	mov	r2, r1
    a11e:	d006      	beq.n	a12e <__sccl+0x4e>
    a120:	2d5d      	cmp	r5, #93	; 0x5d
    a122:	d0f0      	beq.n	a106 <__sccl+0x26>
    a124:	b90d      	cbnz	r5, a12a <__sccl+0x4a>
    a126:	4632      	mov	r2, r6
    a128:	e7ed      	b.n	a106 <__sccl+0x26>
    a12a:	462b      	mov	r3, r5
    a12c:	e7ef      	b.n	a10e <__sccl+0x2e>
    a12e:	780e      	ldrb	r6, [r1, #0]
    a130:	2e5d      	cmp	r6, #93	; 0x5d
    a132:	d0fa      	beq.n	a12a <__sccl+0x4a>
    a134:	42b3      	cmp	r3, r6
    a136:	dcf8      	bgt.n	a12a <__sccl+0x4a>
    a138:	3301      	adds	r3, #1
    a13a:	429e      	cmp	r6, r3
    a13c:	54c4      	strb	r4, [r0, r3]
    a13e:	dcfb      	bgt.n	a138 <__sccl+0x58>
    a140:	3102      	adds	r1, #2
    a142:	e7e6      	b.n	a112 <__sccl+0x32>

0000a144 <__sread>:
__sread():
    a144:	b510      	push	{r4, lr}
    a146:	460c      	mov	r4, r1
    a148:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a14c:	f000 f95e 	bl	a40c <_read_r>
    a150:	2800      	cmp	r0, #0
    a152:	bfab      	itete	ge
    a154:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    a156:	89a3      	ldrhlt	r3, [r4, #12]
    a158:	181b      	addge	r3, r3, r0
    a15a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    a15e:	bfac      	ite	ge
    a160:	6563      	strge	r3, [r4, #84]	; 0x54
    a162:	81a3      	strhlt	r3, [r4, #12]
    a164:	bd10      	pop	{r4, pc}

0000a166 <__seofread>:
__seofread():
    a166:	2000      	movs	r0, #0
    a168:	4770      	bx	lr

0000a16a <__swrite>:
__swrite():
    a16a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a16e:	461f      	mov	r7, r3
    a170:	898b      	ldrh	r3, [r1, #12]
    a172:	05db      	lsls	r3, r3, #23
    a174:	4605      	mov	r5, r0
    a176:	460c      	mov	r4, r1
    a178:	4616      	mov	r6, r2
    a17a:	d505      	bpl.n	a188 <__swrite+0x1e>
    a17c:	2302      	movs	r3, #2
    a17e:	2200      	movs	r2, #0
    a180:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a184:	f000 f928 	bl	a3d8 <_lseek_r>
    a188:	89a3      	ldrh	r3, [r4, #12]
    a18a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    a18e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    a192:	81a3      	strh	r3, [r4, #12]
    a194:	4632      	mov	r2, r6
    a196:	463b      	mov	r3, r7
    a198:	4628      	mov	r0, r5
    a19a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    a19e:	f000 b8d7 	b.w	a350 <_write_r>

0000a1a2 <__sseek>:
__sseek():
    a1a2:	b510      	push	{r4, lr}
    a1a4:	460c      	mov	r4, r1
    a1a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a1aa:	f000 f915 	bl	a3d8 <_lseek_r>
    a1ae:	1c43      	adds	r3, r0, #1
    a1b0:	89a3      	ldrh	r3, [r4, #12]
    a1b2:	bf15      	itete	ne
    a1b4:	6560      	strne	r0, [r4, #84]	; 0x54
    a1b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    a1ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    a1be:	81a3      	strheq	r3, [r4, #12]
    a1c0:	bf18      	it	ne
    a1c2:	81a3      	strhne	r3, [r4, #12]
    a1c4:	bd10      	pop	{r4, pc}

0000a1c6 <__sclose>:
__sclose():
    a1c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a1ca:	f000 b8d3 	b.w	a374 <_close_r>
    a1ce:	Address 0x000000000000a1ce is out of bounds.


0000a1d0 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
    a1d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    a1d4:	4f38      	ldr	r7, [pc, #224]	; (a2b8 <_strtoul_l.isra.0+0xe8>)
    a1d6:	4686      	mov	lr, r0
    a1d8:	4608      	mov	r0, r1
    a1da:	4605      	mov	r5, r0
    a1dc:	f815 4b01 	ldrb.w	r4, [r5], #1
    a1e0:	5de6      	ldrb	r6, [r4, r7]
    a1e2:	f016 0608 	ands.w	r6, r6, #8
    a1e6:	d131      	bne.n	a24c <_strtoul_l.isra.0+0x7c>
    a1e8:	2c2d      	cmp	r4, #45	; 0x2d
    a1ea:	d131      	bne.n	a250 <_strtoul_l.isra.0+0x80>
    a1ec:	782c      	ldrb	r4, [r5, #0]
    a1ee:	f04f 0801 	mov.w	r8, #1
    a1f2:	1c85      	adds	r5, r0, #2
    a1f4:	2b00      	cmp	r3, #0
    a1f6:	d05a      	beq.n	a2ae <_strtoul_l.isra.0+0xde>
    a1f8:	2b10      	cmp	r3, #16
    a1fa:	d109      	bne.n	a210 <_strtoul_l.isra.0+0x40>
    a1fc:	2c30      	cmp	r4, #48	; 0x30
    a1fe:	d107      	bne.n	a210 <_strtoul_l.isra.0+0x40>
    a200:	7828      	ldrb	r0, [r5, #0]
    a202:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    a206:	2858      	cmp	r0, #88	; 0x58
    a208:	d14c      	bne.n	a2a4 <_strtoul_l.isra.0+0xd4>
    a20a:	786c      	ldrb	r4, [r5, #1]
    a20c:	2310      	movs	r3, #16
    a20e:	3502      	adds	r5, #2
    a210:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    a214:	2600      	movs	r6, #0
    a216:	fbbc fcf3 	udiv	ip, ip, r3
    a21a:	fb03 f90c 	mul.w	r9, r3, ip
    a21e:	ea6f 0909 	mvn.w	r9, r9
    a222:	4630      	mov	r0, r6
    a224:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
    a228:	2f09      	cmp	r7, #9
    a22a:	d818      	bhi.n	a25e <_strtoul_l.isra.0+0x8e>
    a22c:	463c      	mov	r4, r7
    a22e:	42a3      	cmp	r3, r4
    a230:	dd24      	ble.n	a27c <_strtoul_l.isra.0+0xac>
    a232:	2e00      	cmp	r6, #0
    a234:	db1f      	blt.n	a276 <_strtoul_l.isra.0+0xa6>
    a236:	4584      	cmp	ip, r0
    a238:	d31d      	bcc.n	a276 <_strtoul_l.isra.0+0xa6>
    a23a:	d101      	bne.n	a240 <_strtoul_l.isra.0+0x70>
    a23c:	45a1      	cmp	r9, r4
    a23e:	db1a      	blt.n	a276 <_strtoul_l.isra.0+0xa6>
    a240:	fb00 4003 	mla	r0, r0, r3, r4
    a244:	2601      	movs	r6, #1
    a246:	f815 4b01 	ldrb.w	r4, [r5], #1
    a24a:	e7eb      	b.n	a224 <_strtoul_l.isra.0+0x54>
    a24c:	4628      	mov	r0, r5
    a24e:	e7c4      	b.n	a1da <_strtoul_l.isra.0+0xa>
    a250:	2c2b      	cmp	r4, #43	; 0x2b
    a252:	bf08      	it	eq
    a254:	782c      	ldrbeq	r4, [r5, #0]
    a256:	46b0      	mov	r8, r6
    a258:	bf08      	it	eq
    a25a:	1c85      	addeq	r5, r0, #2
    a25c:	e7ca      	b.n	a1f4 <_strtoul_l.isra.0+0x24>
    a25e:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
    a262:	2f19      	cmp	r7, #25
    a264:	d801      	bhi.n	a26a <_strtoul_l.isra.0+0x9a>
    a266:	3c37      	subs	r4, #55	; 0x37
    a268:	e7e1      	b.n	a22e <_strtoul_l.isra.0+0x5e>
    a26a:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
    a26e:	2f19      	cmp	r7, #25
    a270:	d804      	bhi.n	a27c <_strtoul_l.isra.0+0xac>
    a272:	3c57      	subs	r4, #87	; 0x57
    a274:	e7db      	b.n	a22e <_strtoul_l.isra.0+0x5e>
    a276:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    a27a:	e7e4      	b.n	a246 <_strtoul_l.isra.0+0x76>
    a27c:	2e00      	cmp	r6, #0
    a27e:	da07      	bge.n	a290 <_strtoul_l.isra.0+0xc0>
    a280:	2322      	movs	r3, #34	; 0x22
    a282:	f8ce 3000 	str.w	r3, [lr]
    a286:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a28a:	b942      	cbnz	r2, a29e <_strtoul_l.isra.0+0xce>
    a28c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a290:	f1b8 0f00 	cmp.w	r8, #0
    a294:	d000      	beq.n	a298 <_strtoul_l.isra.0+0xc8>
    a296:	4240      	negs	r0, r0
    a298:	2a00      	cmp	r2, #0
    a29a:	d0f7      	beq.n	a28c <_strtoul_l.isra.0+0xbc>
    a29c:	b106      	cbz	r6, a2a0 <_strtoul_l.isra.0+0xd0>
    a29e:	1e69      	subs	r1, r5, #1
    a2a0:	6011      	str	r1, [r2, #0]
    a2a2:	e7f3      	b.n	a28c <_strtoul_l.isra.0+0xbc>
    a2a4:	2430      	movs	r4, #48	; 0x30
    a2a6:	2b00      	cmp	r3, #0
    a2a8:	d1b2      	bne.n	a210 <_strtoul_l.isra.0+0x40>
    a2aa:	2308      	movs	r3, #8
    a2ac:	e7b0      	b.n	a210 <_strtoul_l.isra.0+0x40>
    a2ae:	2c30      	cmp	r4, #48	; 0x30
    a2b0:	d0a6      	beq.n	a200 <_strtoul_l.isra.0+0x30>
    a2b2:	230a      	movs	r3, #10
    a2b4:	e7ac      	b.n	a210 <_strtoul_l.isra.0+0x40>
    a2b6:	bf00      	nop
    a2b8:	0000ba05 	.word	0x0000ba05

0000a2bc <_strtoul_r>:
_strtoul_r():
    a2bc:	f7ff bf88 	b.w	a1d0 <_strtoul_l.isra.0>

0000a2c0 <__submore>:
__submore():
    a2c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a2c4:	460c      	mov	r4, r1
    a2c6:	6b49      	ldr	r1, [r1, #52]	; 0x34
    a2c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
    a2cc:	4299      	cmp	r1, r3
    a2ce:	d11d      	bne.n	a30c <__submore+0x4c>
    a2d0:	f44f 6180 	mov.w	r1, #1024	; 0x400
    a2d4:	f7fb f816 	bl	5304 <_malloc_r>
    a2d8:	b918      	cbnz	r0, a2e2 <__submore+0x22>
    a2da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a2de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a2e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
    a2e6:	63a3      	str	r3, [r4, #56]	; 0x38
    a2e8:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
    a2ec:	6360      	str	r0, [r4, #52]	; 0x34
    a2ee:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
    a2f2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    a2f6:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
    a2fa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    a2fe:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
    a302:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
    a306:	6020      	str	r0, [r4, #0]
    a308:	2000      	movs	r0, #0
    a30a:	e7e8      	b.n	a2de <__submore+0x1e>
    a30c:	6ba6      	ldr	r6, [r4, #56]	; 0x38
    a30e:	0077      	lsls	r7, r6, #1
    a310:	463a      	mov	r2, r7
    a312:	f7ff f9ff 	bl	9714 <_realloc_r>
    a316:	4605      	mov	r5, r0
    a318:	2800      	cmp	r0, #0
    a31a:	d0de      	beq.n	a2da <__submore+0x1a>
    a31c:	eb00 0806 	add.w	r8, r0, r6
    a320:	4601      	mov	r1, r0
    a322:	4632      	mov	r2, r6
    a324:	4640      	mov	r0, r8
    a326:	f7fa ff6f 	bl	5208 <memcpy>
    a32a:	f8c4 8000 	str.w	r8, [r4]
    a32e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
    a332:	e7e9      	b.n	a308 <__submore+0x48>

0000a334 <__ascii_wctomb>:
__ascii_wctomb():
    a334:	b149      	cbz	r1, a34a <__ascii_wctomb+0x16>
    a336:	2aff      	cmp	r2, #255	; 0xff
    a338:	bf85      	ittet	hi
    a33a:	238a      	movhi	r3, #138	; 0x8a
    a33c:	6003      	strhi	r3, [r0, #0]
    a33e:	700a      	strbls	r2, [r1, #0]
    a340:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
    a344:	bf98      	it	ls
    a346:	2001      	movls	r0, #1
    a348:	4770      	bx	lr
    a34a:	4608      	mov	r0, r1
    a34c:	4770      	bx	lr
    a34e:	Address 0x000000000000a34e is out of bounds.


0000a350 <_write_r>:
_write_r():
    a350:	b538      	push	{r3, r4, r5, lr}
    a352:	4c07      	ldr	r4, [pc, #28]	; (a370 <_write_r+0x20>)
    a354:	4605      	mov	r5, r0
    a356:	4608      	mov	r0, r1
    a358:	4611      	mov	r1, r2
    a35a:	2200      	movs	r2, #0
    a35c:	6022      	str	r2, [r4, #0]
    a35e:	461a      	mov	r2, r3
    a360:	f7f6 fd2e 	bl	dc0 <_write>
    a364:	1c43      	adds	r3, r0, #1
    a366:	d102      	bne.n	a36e <_write_r+0x1e>
    a368:	6823      	ldr	r3, [r4, #0]
    a36a:	b103      	cbz	r3, a36e <_write_r+0x1e>
    a36c:	602b      	str	r3, [r5, #0]
    a36e:	bd38      	pop	{r3, r4, r5, pc}
    a370:	10001404 	.word	0x10001404

0000a374 <_close_r>:
_close_r():
    a374:	b538      	push	{r3, r4, r5, lr}
    a376:	4c06      	ldr	r4, [pc, #24]	; (a390 <_close_r+0x1c>)
    a378:	2300      	movs	r3, #0
    a37a:	4605      	mov	r5, r0
    a37c:	4608      	mov	r0, r1
    a37e:	6023      	str	r3, [r4, #0]
    a380:	f000 fa38 	bl	a7f4 <_close>
    a384:	1c43      	adds	r3, r0, #1
    a386:	d102      	bne.n	a38e <_close_r+0x1a>
    a388:	6823      	ldr	r3, [r4, #0]
    a38a:	b103      	cbz	r3, a38e <_close_r+0x1a>
    a38c:	602b      	str	r3, [r5, #0]
    a38e:	bd38      	pop	{r3, r4, r5, pc}
    a390:	10001404 	.word	0x10001404

0000a394 <_fstat_r>:
_fstat_r():
    a394:	b538      	push	{r3, r4, r5, lr}
    a396:	4c07      	ldr	r4, [pc, #28]	; (a3b4 <_fstat_r+0x20>)
    a398:	2300      	movs	r3, #0
    a39a:	4605      	mov	r5, r0
    a39c:	4608      	mov	r0, r1
    a39e:	4611      	mov	r1, r2
    a3a0:	6023      	str	r3, [r4, #0]
    a3a2:	f000 fa2f 	bl	a804 <_fstat>
    a3a6:	1c43      	adds	r3, r0, #1
    a3a8:	d102      	bne.n	a3b0 <_fstat_r+0x1c>
    a3aa:	6823      	ldr	r3, [r4, #0]
    a3ac:	b103      	cbz	r3, a3b0 <_fstat_r+0x1c>
    a3ae:	602b      	str	r3, [r5, #0]
    a3b0:	bd38      	pop	{r3, r4, r5, pc}
    a3b2:	bf00      	nop
    a3b4:	10001404 	.word	0x10001404

0000a3b8 <_isatty_r>:
_isatty_r():
    a3b8:	b538      	push	{r3, r4, r5, lr}
    a3ba:	4c06      	ldr	r4, [pc, #24]	; (a3d4 <_isatty_r+0x1c>)
    a3bc:	2300      	movs	r3, #0
    a3be:	4605      	mov	r5, r0
    a3c0:	4608      	mov	r0, r1
    a3c2:	6023      	str	r3, [r4, #0]
    a3c4:	f7f6 fce8 	bl	d98 <_isatty>
    a3c8:	1c43      	adds	r3, r0, #1
    a3ca:	d102      	bne.n	a3d2 <_isatty_r+0x1a>
    a3cc:	6823      	ldr	r3, [r4, #0]
    a3ce:	b103      	cbz	r3, a3d2 <_isatty_r+0x1a>
    a3d0:	602b      	str	r3, [r5, #0]
    a3d2:	bd38      	pop	{r3, r4, r5, pc}
    a3d4:	10001404 	.word	0x10001404

0000a3d8 <_lseek_r>:
_lseek_r():
    a3d8:	b538      	push	{r3, r4, r5, lr}
    a3da:	4c07      	ldr	r4, [pc, #28]	; (a3f8 <_lseek_r+0x20>)
    a3dc:	4605      	mov	r5, r0
    a3de:	4608      	mov	r0, r1
    a3e0:	4611      	mov	r1, r2
    a3e2:	2200      	movs	r2, #0
    a3e4:	6022      	str	r2, [r4, #0]
    a3e6:	461a      	mov	r2, r3
    a3e8:	f000 fa14 	bl	a814 <_lseek>
    a3ec:	1c43      	adds	r3, r0, #1
    a3ee:	d102      	bne.n	a3f6 <_lseek_r+0x1e>
    a3f0:	6823      	ldr	r3, [r4, #0]
    a3f2:	b103      	cbz	r3, a3f6 <_lseek_r+0x1e>
    a3f4:	602b      	str	r3, [r5, #0]
    a3f6:	bd38      	pop	{r3, r4, r5, pc}
    a3f8:	10001404 	.word	0x10001404

0000a3fc <_malloc_usable_size_r>:
_malloc_usable_size_r():
    a3fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
    a400:	1f18      	subs	r0, r3, #4
    a402:	2b00      	cmp	r3, #0
    a404:	bfbc      	itt	lt
    a406:	580b      	ldrlt	r3, [r1, r0]
    a408:	18c0      	addlt	r0, r0, r3
    a40a:	4770      	bx	lr

0000a40c <_read_r>:
_read_r():
    a40c:	b538      	push	{r3, r4, r5, lr}
    a40e:	4c07      	ldr	r4, [pc, #28]	; (a42c <_read_r+0x20>)
    a410:	4605      	mov	r5, r0
    a412:	4608      	mov	r0, r1
    a414:	4611      	mov	r1, r2
    a416:	2200      	movs	r2, #0
    a418:	6022      	str	r2, [r4, #0]
    a41a:	461a      	mov	r2, r3
    a41c:	f7f6 fd08 	bl	e30 <_read>
    a420:	1c43      	adds	r3, r0, #1
    a422:	d102      	bne.n	a42a <_read_r+0x1e>
    a424:	6823      	ldr	r3, [r4, #0]
    a426:	b103      	cbz	r3, a42a <_read_r+0x1e>
    a428:	602b      	str	r3, [r5, #0]
    a42a:	bd38      	pop	{r3, r4, r5, pc}
    a42c:	10001404 	.word	0x10001404

0000a430 <lflush>:
lflush():
    a430:	8983      	ldrh	r3, [r0, #12]
    a432:	f003 0309 	and.w	r3, r3, #9
    a436:	2b09      	cmp	r3, #9
    a438:	d101      	bne.n	a43e <lflush+0xe>
    a43a:	f7fd bffd 	b.w	8438 <fflush>
    a43e:	2000      	movs	r0, #0
    a440:	4770      	bx	lr
    a442:	Address 0x000000000000a442 is out of bounds.


0000a444 <__srefill_r>:
__srefill_r():
    a444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a446:	460c      	mov	r4, r1
    a448:	4605      	mov	r5, r0
    a44a:	b118      	cbz	r0, a454 <__srefill_r+0x10>
    a44c:	6983      	ldr	r3, [r0, #24]
    a44e:	b90b      	cbnz	r3, a454 <__srefill_r+0x10>
    a450:	f7fe f85c 	bl	850c <__sinit>
    a454:	4b3c      	ldr	r3, [pc, #240]	; (a548 <__srefill_r+0x104>)
    a456:	429c      	cmp	r4, r3
    a458:	d10a      	bne.n	a470 <__srefill_r+0x2c>
    a45a:	686c      	ldr	r4, [r5, #4]
    a45c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    a460:	2300      	movs	r3, #0
    a462:	6063      	str	r3, [r4, #4]
    a464:	b293      	uxth	r3, r2
    a466:	069e      	lsls	r6, r3, #26
    a468:	d50c      	bpl.n	a484 <__srefill_r+0x40>
    a46a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a46e:	e067      	b.n	a540 <__srefill_r+0xfc>
    a470:	4b36      	ldr	r3, [pc, #216]	; (a54c <__srefill_r+0x108>)
    a472:	429c      	cmp	r4, r3
    a474:	d101      	bne.n	a47a <__srefill_r+0x36>
    a476:	68ac      	ldr	r4, [r5, #8]
    a478:	e7f0      	b.n	a45c <__srefill_r+0x18>
    a47a:	4b35      	ldr	r3, [pc, #212]	; (a550 <__srefill_r+0x10c>)
    a47c:	429c      	cmp	r4, r3
    a47e:	bf08      	it	eq
    a480:	68ec      	ldreq	r4, [r5, #12]
    a482:	e7eb      	b.n	a45c <__srefill_r+0x18>
    a484:	0758      	lsls	r0, r3, #29
    a486:	d449      	bmi.n	a51c <__srefill_r+0xd8>
    a488:	06d9      	lsls	r1, r3, #27
    a48a:	d405      	bmi.n	a498 <__srefill_r+0x54>
    a48c:	2309      	movs	r3, #9
    a48e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    a492:	602b      	str	r3, [r5, #0]
    a494:	81a2      	strh	r2, [r4, #12]
    a496:	e7e8      	b.n	a46a <__srefill_r+0x26>
    a498:	071a      	lsls	r2, r3, #28
    a49a:	d50b      	bpl.n	a4b4 <__srefill_r+0x70>
    a49c:	4621      	mov	r1, r4
    a49e:	4628      	mov	r0, r5
    a4a0:	f7fd ff8e 	bl	83c0 <_fflush_r>
    a4a4:	2800      	cmp	r0, #0
    a4a6:	d1e0      	bne.n	a46a <__srefill_r+0x26>
    a4a8:	89a3      	ldrh	r3, [r4, #12]
    a4aa:	60a0      	str	r0, [r4, #8]
    a4ac:	f023 0308 	bic.w	r3, r3, #8
    a4b0:	81a3      	strh	r3, [r4, #12]
    a4b2:	61a0      	str	r0, [r4, #24]
    a4b4:	89a3      	ldrh	r3, [r4, #12]
    a4b6:	f043 0304 	orr.w	r3, r3, #4
    a4ba:	81a3      	strh	r3, [r4, #12]
    a4bc:	6923      	ldr	r3, [r4, #16]
    a4be:	b91b      	cbnz	r3, a4c8 <__srefill_r+0x84>
    a4c0:	4621      	mov	r1, r4
    a4c2:	4628      	mov	r0, r5
    a4c4:	f7fe fc6c 	bl	8da0 <__smakebuf_r>
    a4c8:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
    a4cc:	b2be      	uxth	r6, r7
    a4ce:	07b3      	lsls	r3, r6, #30
    a4d0:	d00f      	beq.n	a4f2 <__srefill_r+0xae>
    a4d2:	2301      	movs	r3, #1
    a4d4:	81a3      	strh	r3, [r4, #12]
    a4d6:	4b1f      	ldr	r3, [pc, #124]	; (a554 <__srefill_r+0x110>)
    a4d8:	491f      	ldr	r1, [pc, #124]	; (a558 <__srefill_r+0x114>)
    a4da:	6818      	ldr	r0, [r3, #0]
    a4dc:	f006 0609 	and.w	r6, r6, #9
    a4e0:	f7fe f892 	bl	8608 <_fwalk>
    a4e4:	2e09      	cmp	r6, #9
    a4e6:	81a7      	strh	r7, [r4, #12]
    a4e8:	d103      	bne.n	a4f2 <__srefill_r+0xae>
    a4ea:	4621      	mov	r1, r4
    a4ec:	4628      	mov	r0, r5
    a4ee:	f7fd fee1 	bl	82b4 <__sflush_r>
    a4f2:	6922      	ldr	r2, [r4, #16]
    a4f4:	6022      	str	r2, [r4, #0]
    a4f6:	6a66      	ldr	r6, [r4, #36]	; 0x24
    a4f8:	6963      	ldr	r3, [r4, #20]
    a4fa:	6a21      	ldr	r1, [r4, #32]
    a4fc:	4628      	mov	r0, r5
    a4fe:	47b0      	blx	r6
    a500:	2800      	cmp	r0, #0
    a502:	6060      	str	r0, [r4, #4]
    a504:	dc1d      	bgt.n	a542 <__srefill_r+0xfe>
    a506:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a50a:	bf17      	itett	ne
    a50c:	2200      	movne	r2, #0
    a50e:	f043 0320 	orreq.w	r3, r3, #32
    a512:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
    a516:	6062      	strne	r2, [r4, #4]
    a518:	81a3      	strh	r3, [r4, #12]
    a51a:	e7a6      	b.n	a46a <__srefill_r+0x26>
    a51c:	6b61      	ldr	r1, [r4, #52]	; 0x34
    a51e:	2900      	cmp	r1, #0
    a520:	d0cc      	beq.n	a4bc <__srefill_r+0x78>
    a522:	f104 0344 	add.w	r3, r4, #68	; 0x44
    a526:	4299      	cmp	r1, r3
    a528:	d002      	beq.n	a530 <__srefill_r+0xec>
    a52a:	4628      	mov	r0, r5
    a52c:	f7fa fe9c 	bl	5268 <_free_r>
    a530:	6c23      	ldr	r3, [r4, #64]	; 0x40
    a532:	6063      	str	r3, [r4, #4]
    a534:	2000      	movs	r0, #0
    a536:	6360      	str	r0, [r4, #52]	; 0x34
    a538:	2b00      	cmp	r3, #0
    a53a:	d0bf      	beq.n	a4bc <__srefill_r+0x78>
    a53c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    a53e:	6023      	str	r3, [r4, #0]
    a540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a542:	2000      	movs	r0, #0
    a544:	e7fc      	b.n	a540 <__srefill_r+0xfc>
    a546:	bf00      	nop
    a548:	0000bbd8 	.word	0x0000bbd8
    a54c:	0000bbf8 	.word	0x0000bbf8
    a550:	0000bbb8 	.word	0x0000bbb8
    a554:	0000bb08 	.word	0x0000bb08
    a558:	0000a431 	.word	0x0000a431

0000a55c <__gedf2>:
__gedf2():
    a55c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    a560:	e006      	b.n	a570 <__cmpdf2+0x4>
    a562:	bf00      	nop

0000a564 <__ledf2>:
__ledf2():
    a564:	f04f 0c01 	mov.w	ip, #1
    a568:	e002      	b.n	a570 <__cmpdf2+0x4>
    a56a:	bf00      	nop

0000a56c <__cmpdf2>:
__nedf2():
    a56c:	f04f 0c01 	mov.w	ip, #1
    a570:	f84d cd04 	str.w	ip, [sp, #-4]!
    a574:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a578:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a57c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a580:	bf18      	it	ne
    a582:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    a586:	d01b      	beq.n	a5c0 <__cmpdf2+0x54>
    a588:	b001      	add	sp, #4
    a58a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    a58e:	bf0c      	ite	eq
    a590:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    a594:	ea91 0f03 	teqne	r1, r3
    a598:	bf02      	ittt	eq
    a59a:	ea90 0f02 	teqeq	r0, r2
    a59e:	2000      	moveq	r0, #0
    a5a0:	4770      	bxeq	lr
    a5a2:	f110 0f00 	cmn.w	r0, #0
    a5a6:	ea91 0f03 	teq	r1, r3
    a5aa:	bf58      	it	pl
    a5ac:	4299      	cmppl	r1, r3
    a5ae:	bf08      	it	eq
    a5b0:	4290      	cmpeq	r0, r2
    a5b2:	bf2c      	ite	cs
    a5b4:	17d8      	asrcs	r0, r3, #31
    a5b6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    a5ba:	f040 0001 	orr.w	r0, r0, #1
    a5be:	4770      	bx	lr
    a5c0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a5c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a5c8:	d102      	bne.n	a5d0 <__cmpdf2+0x64>
    a5ca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a5ce:	d107      	bne.n	a5e0 <__cmpdf2+0x74>
    a5d0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a5d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a5d8:	d1d6      	bne.n	a588 <__cmpdf2+0x1c>
    a5da:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a5de:	d0d3      	beq.n	a588 <__cmpdf2+0x1c>
    a5e0:	f85d 0b04 	ldr.w	r0, [sp], #4
    a5e4:	4770      	bx	lr
    a5e6:	bf00      	nop

0000a5e8 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    a5e8:	4684      	mov	ip, r0
    a5ea:	4610      	mov	r0, r2
    a5ec:	4662      	mov	r2, ip
    a5ee:	468c      	mov	ip, r1
    a5f0:	4619      	mov	r1, r3
    a5f2:	4663      	mov	r3, ip
    a5f4:	e000      	b.n	a5f8 <__aeabi_cdcmpeq>
    a5f6:	bf00      	nop

0000a5f8 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    a5f8:	b501      	push	{r0, lr}
    a5fa:	f7ff ffb7 	bl	a56c <__cmpdf2>
    a5fe:	2800      	cmp	r0, #0
    a600:	bf48      	it	mi
    a602:	f110 0f00 	cmnmi.w	r0, #0
    a606:	bd01      	pop	{r0, pc}

0000a608 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    a608:	f84d ed08 	str.w	lr, [sp, #-8]!
    a60c:	f7ff fff4 	bl	a5f8 <__aeabi_cdcmpeq>
    a610:	bf0c      	ite	eq
    a612:	2001      	moveq	r0, #1
    a614:	2000      	movne	r0, #0
    a616:	f85d fb08 	ldr.w	pc, [sp], #8
    a61a:	bf00      	nop

0000a61c <__aeabi_dcmplt>:
__aeabi_dcmplt():
    a61c:	f84d ed08 	str.w	lr, [sp, #-8]!
    a620:	f7ff ffea 	bl	a5f8 <__aeabi_cdcmpeq>
    a624:	bf34      	ite	cc
    a626:	2001      	movcc	r0, #1
    a628:	2000      	movcs	r0, #0
    a62a:	f85d fb08 	ldr.w	pc, [sp], #8
    a62e:	bf00      	nop

0000a630 <__aeabi_dcmple>:
__aeabi_dcmple():
    a630:	f84d ed08 	str.w	lr, [sp, #-8]!
    a634:	f7ff ffe0 	bl	a5f8 <__aeabi_cdcmpeq>
    a638:	bf94      	ite	ls
    a63a:	2001      	movls	r0, #1
    a63c:	2000      	movhi	r0, #0
    a63e:	f85d fb08 	ldr.w	pc, [sp], #8
    a642:	bf00      	nop

0000a644 <__aeabi_dcmpge>:
__aeabi_dcmpge():
    a644:	f84d ed08 	str.w	lr, [sp, #-8]!
    a648:	f7ff ffce 	bl	a5e8 <__aeabi_cdrcmple>
    a64c:	bf94      	ite	ls
    a64e:	2001      	movls	r0, #1
    a650:	2000      	movhi	r0, #0
    a652:	f85d fb08 	ldr.w	pc, [sp], #8
    a656:	bf00      	nop

0000a658 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    a658:	f84d ed08 	str.w	lr, [sp, #-8]!
    a65c:	f7ff ffc4 	bl	a5e8 <__aeabi_cdrcmple>
    a660:	bf34      	ite	cc
    a662:	2001      	movcc	r0, #1
    a664:	2000      	movcs	r0, #0
    a666:	f85d fb08 	ldr.w	pc, [sp], #8
    a66a:	bf00      	nop

0000a66c <__aeabi_dcmpun>:
__unorddf2():
    a66c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a670:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a674:	d102      	bne.n	a67c <__aeabi_dcmpun+0x10>
    a676:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a67a:	d10a      	bne.n	a692 <__aeabi_dcmpun+0x26>
    a67c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a680:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a684:	d102      	bne.n	a68c <__aeabi_dcmpun+0x20>
    a686:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a68a:	d102      	bne.n	a692 <__aeabi_dcmpun+0x26>
    a68c:	f04f 0000 	mov.w	r0, #0
    a690:	4770      	bx	lr
    a692:	f04f 0001 	mov.w	r0, #1
    a696:	4770      	bx	lr

0000a698 <__aeabi_d2iz>:
__aeabi_d2iz():
    a698:	ea4f 0241 	mov.w	r2, r1, lsl #1
    a69c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    a6a0:	d215      	bcs.n	a6ce <__aeabi_d2iz+0x36>
    a6a2:	d511      	bpl.n	a6c8 <__aeabi_d2iz+0x30>
    a6a4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    a6a8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    a6ac:	d912      	bls.n	a6d4 <__aeabi_d2iz+0x3c>
    a6ae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a6b2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    a6b6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    a6ba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    a6be:	fa23 f002 	lsr.w	r0, r3, r2
    a6c2:	bf18      	it	ne
    a6c4:	4240      	negne	r0, r0
    a6c6:	4770      	bx	lr
    a6c8:	f04f 0000 	mov.w	r0, #0
    a6cc:	4770      	bx	lr
    a6ce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    a6d2:	d105      	bne.n	a6e0 <__aeabi_d2iz+0x48>
    a6d4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    a6d8:	bf08      	it	eq
    a6da:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    a6de:	4770      	bx	lr
    a6e0:	f04f 0000 	mov.w	r0, #0
    a6e4:	4770      	bx	lr
    a6e6:	bf00      	nop

0000a6e8 <__aeabi_d2f>:
__truncdfsf2():
    a6e8:	ea4f 0241 	mov.w	r2, r1, lsl #1
    a6ec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    a6f0:	bf24      	itt	cs
    a6f2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    a6f6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    a6fa:	d90d      	bls.n	a718 <__aeabi_d2f+0x30>
    a6fc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a700:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    a704:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    a708:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    a70c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    a710:	bf08      	it	eq
    a712:	f020 0001 	biceq.w	r0, r0, #1
    a716:	4770      	bx	lr
    a718:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    a71c:	d121      	bne.n	a762 <__aeabi_d2f+0x7a>
    a71e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    a722:	bfbc      	itt	lt
    a724:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    a728:	4770      	bxlt	lr
    a72a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    a72e:	ea4f 5252 	mov.w	r2, r2, lsr #21
    a732:	f1c2 0218 	rsb	r2, r2, #24
    a736:	f1c2 0c20 	rsb	ip, r2, #32
    a73a:	fa10 f30c 	lsls.w	r3, r0, ip
    a73e:	fa20 f002 	lsr.w	r0, r0, r2
    a742:	bf18      	it	ne
    a744:	f040 0001 	orrne.w	r0, r0, #1
    a748:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a74c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    a750:	fa03 fc0c 	lsl.w	ip, r3, ip
    a754:	ea40 000c 	orr.w	r0, r0, ip
    a758:	fa23 f302 	lsr.w	r3, r3, r2
    a75c:	ea4f 0343 	mov.w	r3, r3, lsl #1
    a760:	e7cc      	b.n	a6fc <__aeabi_d2f+0x14>
    a762:	ea7f 5362 	mvns.w	r3, r2, asr #21
    a766:	d107      	bne.n	a778 <__aeabi_d2f+0x90>
    a768:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    a76c:	bf1e      	ittt	ne
    a76e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    a772:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    a776:	4770      	bxne	lr
    a778:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    a77c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a780:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a784:	4770      	bx	lr
    a786:	bf00      	nop

0000a788 <__aeabi_d2lz>:
__fixdfdi():
    a788:	b538      	push	{r3, r4, r5, lr}
    a78a:	2200      	movs	r2, #0
    a78c:	2300      	movs	r3, #0
    a78e:	4604      	mov	r4, r0
    a790:	460d      	mov	r5, r1
    a792:	f7ff ff43 	bl	a61c <__aeabi_dcmplt>
    a796:	b928      	cbnz	r0, a7a4 <__aeabi_d2lz+0x1c>
    a798:	4620      	mov	r0, r4
    a79a:	4629      	mov	r1, r5
    a79c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    a7a0:	f000 b80a 	b.w	a7b8 <__aeabi_d2ulz>
    a7a4:	4620      	mov	r0, r4
    a7a6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
    a7aa:	f000 f805 	bl	a7b8 <__aeabi_d2ulz>
    a7ae:	4240      	negs	r0, r0
    a7b0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    a7b4:	bd38      	pop	{r3, r4, r5, pc}
    a7b6:	bf00      	nop

0000a7b8 <__aeabi_d2ulz>:
__fixunsdfdi():
    a7b8:	b5d0      	push	{r4, r6, r7, lr}
    a7ba:	2200      	movs	r2, #0
    a7bc:	4b0b      	ldr	r3, [pc, #44]	; (a7ec <__aeabi_d2ulz+0x34>)
    a7be:	4606      	mov	r6, r0
    a7c0:	460f      	mov	r7, r1
    a7c2:	f7fa f8c3 	bl	494c <__aeabi_dmul>
    a7c6:	f7fa fad3 	bl	4d70 <__aeabi_d2uiz>
    a7ca:	4604      	mov	r4, r0
    a7cc:	f7fa f844 	bl	4858 <__aeabi_ui2d>
    a7d0:	2200      	movs	r2, #0
    a7d2:	4b07      	ldr	r3, [pc, #28]	; (a7f0 <__aeabi_d2ulz+0x38>)
    a7d4:	f7fa f8ba 	bl	494c <__aeabi_dmul>
    a7d8:	4602      	mov	r2, r0
    a7da:	460b      	mov	r3, r1
    a7dc:	4630      	mov	r0, r6
    a7de:	4639      	mov	r1, r7
    a7e0:	f7f9 fefc 	bl	45dc <__aeabi_dsub>
    a7e4:	f7fa fac4 	bl	4d70 <__aeabi_d2uiz>
    a7e8:	4621      	mov	r1, r4
    a7ea:	bdd0      	pop	{r4, r6, r7, pc}
    a7ec:	3df00000 	.word	0x3df00000
    a7f0:	41f00000 	.word	0x41f00000

0000a7f4 <_close>:
_close():
    a7f4:	4b02      	ldr	r3, [pc, #8]	; (a800 <_close+0xc>)
    a7f6:	2258      	movs	r2, #88	; 0x58
    a7f8:	601a      	str	r2, [r3, #0]
    a7fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a7fe:	4770      	bx	lr
    a800:	10001404 	.word	0x10001404

0000a804 <_fstat>:
_fstat():
    a804:	4b02      	ldr	r3, [pc, #8]	; (a810 <_fstat+0xc>)
    a806:	2258      	movs	r2, #88	; 0x58
    a808:	601a      	str	r2, [r3, #0]
    a80a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a80e:	4770      	bx	lr
    a810:	10001404 	.word	0x10001404

0000a814 <_lseek>:
_lseek():
    a814:	4b02      	ldr	r3, [pc, #8]	; (a820 <_lseek+0xc>)
    a816:	2258      	movs	r2, #88	; 0x58
    a818:	601a      	str	r2, [r3, #0]
    a81a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a81e:	4770      	bx	lr
    a820:	10001404 	.word	0x10001404

0000a824 <__FUNCTION__.6167>:
    a824:	72746e65 6f705f79 00746e69 2873250a     entry_point..%s(
    a834:	57203a29 494e5241 203a474e 736e6553     ): WARNING: Sens
    a844:	6520726f 726f7272 6e6f2073 69687420     or errors on thi
    a854:	6f622073 0a647261 73250a00 203a2928     s board...%s(): 
    a864:	65746e45 676e6972 69616d20 0a29286e     Entering main().
    a874:	52524500 203a524f 6e69616d 73202928     .ERROR: main() s
    a884:	6c756f68 656e2064 20726576 75746572     hould never retu
    a894:	202c6e72 676f7270 206d6172 20736168     rn, program has 
    a8a4:	6e656562 6c616820 00646574 78656e55     been halted.Unex
    a8b4:	74636570 43206465 65205550 70656378     pected CPU excep
    a8c4:	6e6f6974 75250020 6e692820 72726574     tion .%u (interr
    a8d4:	29747075 73616820 63636f20 64657275     upt) has occured
    a8e4:	646e6120 65687420 6f727020 6d617267      and the program
    a8f4:	6c697720 6f6e206c 61682077 000a746c      will now halt..
    a904:	65637845 6f697470 7061206e 72616570     Exception appear
    a914:	6f742073 20656220 27732527 6944000a     s to be '%s'..Di
    a924:	6f792064 65722075 74736967 74207265     d you register t
    a934:	69206568 7265746e 74707572 726f6320     he interrupt cor
    a944:	74636572 7520796c 676e6973 63706c20     rectly using lpc
    a954:	7265705f 65687069 736c6172 4120682e     _peripherals.h A
    a964:	003f4950 61747365 72006b63 74657365     PI?.estack.reset
    a974:	494d4e00 72616800 61662064 00746c75     .NMI.hard fault.
    a984:	6f6d656d 66207972 746c7561 73756200     memory fault.bus
    a994:	75616620 7500746c 65676173 75616620      fault.usage fau
    a9a4:	7200746c 72657365 00646576 736f7472     lt.reserved.rtos
    a9b4:	62656400 ff006775                       .debug..

0000a9bc <table.8042>:
    a9bc:	0000a968 0000a96f 0000a975 0000a979     h...o...u...y...
    a9cc:	0000a984 0000a991 0000a99b 0000a9a7     ................
    a9dc:	0000a9a7 0000a9a7 0000a9a7 0000a9b0     ................
    a9ec:	0000a9b5 0000a9a7 0000a9b0 0000a9b0     ................
    a9fc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    aa0c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    aa1c:	2d2d2d2d 2d2d2d2d 2d2d2d0a 4157202d     --------.---- WA
    aa2c:	4e494e52 57203a47 72632065 65687361     RNING: We crashe
    aa3c:	72702064 6f697665 796c7375 2d2d2d20     d previously ---
    aa4c:	20000a2d 3a435020 25783020 586c3830     -..  PC: 0x%08lX
    aa5c:	2020000a 203a524c 30257830 0a586c38     ..  LR: 0x%08lX.
    aa6c:	53502000 30203a52 38302578 000a586c     . PSR: 0x%08lX..
    aa7c:	30522020 7830203a 6c383025 20000a58       R0: 0x%08lX.. 
    aa8c:	3a315220 25783020 586c3830 2020000a      R1: 0x%08lX..  
    aa9c:	203a3252 30257830 0a586c38 52202000     R2: 0x%08lX..  R
    aaac:	30203a33 38302578 000a586c 4620200a     3: 0x%08lX...  F
    aabc:	20646e69 20656874 736c2e2a 69662074     ind the *.lst fi
    aacc:	6920656c 6f79206e 5f207275 6c697562     le in your _buil
    aadc:	69642064 74636572 2c79726f 646e6120     d directory, and
    aaec:	6f6f6c20 0a70756b 68742020 43502065      lookup.  the PC
    aafc:	6c617620 74206575 6f6c206f 65746163      value to locate
    ab0c:	69687720 66206863 74636e75 206e6f69      which function 
    ab1c:	73756163 74206465 2e736968 5420200a     caused this..  T
    ab2c:	4c206568 68732052 646c756f 20656220     he LR should be 
    ab3c:	20656874 65727027 756f6976 66202773     the 'previous' f
    ab4c:	74636e75 206e6f69 74616874 73617720     unction that was
    ab5c:	6e757220 676e696e 20200a2e 522d3052      running..  R0-R
    ab6c:	72612033 61702065 656d6172 73726574     3 are parameters
    ab7c:	206f7420 636e7566 6e6f6974 000a2e73      to functions...
    ab8c:	00544146 33544146 52450032 3a524f52     FAT.FAT32.ERROR:
    ab9c:	6c614320 6f74206c 65725f20 29286461      Call to _read()
    abac:	74697720 6e612068 736e7520 6f707075      with an unsuppo
    abbc:	64657472 6e616820 00656c64 4f525245     rted handle.ERRO
    abcc:	43203a52 206c6c61 5f206f74 74697277     R: Call to _writ
    abdc:	20292865 68746977 206e6120 75736e75     e() with an unsu
    abec:	726f7070 20646574 646e6168 0d00656c     pported handle..
    abfc:	73694c0a 666f2074 6d6f6320 646e616d     .List of command
    ac0c:	75282073 68206573 20706c65 6d616e3c     s (use help <nam
    ac1c:	74203e65 6567206f 75662074 68206c6c     e> to get full h
    ac2c:	20706c65 79206669 7320756f 2e206565     elp if you see .
    ac3c:	3a292e2e 000a0d20 31252020 3a207336     ..): ...  %16s :
    ac4c:	352e2520 2e207330 20002e2e 36312520      %.50s ....  %16
    ac5c:	203a2073 0d007325 6c656800 6f430070     s : %s...help.Co
    ac6c:	6e616d6d 61662064 64656c69 0d00203a     mmand failed: ..
    ac7c:	6d6f430a 646e616d 6c656820 656d2070     .Command help me
    ac8c:	67617373 25203a65 000a0d73 4f525245     ssage: %s...ERRO
    ac9c:	43203a52 646c756f 746f6e20 6e696620     R: Could not fin
    acac:	65682064 6620706c 6320726f 616d6d6f     d help for comma
    acbc:	203a646e 616e5500 20656c62 6d206f74     nd: .Unable to m
    accc:	68637461 796e6120 67657220 65747369     atch any registe
    acdc:	20646572 20494c43 6d6d6f63 20646e61     red CLI command 
    acec:	3a726f66 2d2d0020 2d2d2d2d 2d2d2d2d     for: .----------
    acfc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ad0c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ad1c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ad2c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ad3c:	2d2d2d2d 0a0d2d2d 696c6300 73755300     ------...cli.Sus
    ad4c:	646e6570 74206120 2e6b7361 7365520a     pend a task..Res
    ad5c:	20656d75 61742061 0a2e6b73 6c654400     ume a task...Del
    ad6c:	72656269 6c657461 72632079 65687361     iberately crashe
    ad7c:	68742073 79732065 6d657473 206f7420     s the system to 
    ad8c:	6f6d6564 7274736e 20657461 20776f68     demonstrate how 
    ad9c:	64206f74 67756265 63206120 68736172     to debug a crash
    adac:	63326900 63326900 61657220 78302064     .i2c.i2c read 0x
    adbc:	30204444 20525278 0a3e6e3c 20633269     DD 0xRR <n>.i2c 
    adcc:	74697277 78302065 30204444 20525278     write 0xDD 0xRR 
    addc:	6c61763c 203e6575 6c61763c 203e6575     <value> <value> 
    adec:	002e2e2e 6b736174 7473696c 74754f00     ....tasklist.Out
    adfc:	73747570 73696c20 666f2074 4f545220     puts list of RTO
    ae0c:	61742053 2c736b73 55504320 646e6120     S tasks, CPU and
    ae1c:	61747320 75206b63 65676173 61740a2e      stack usage..ta
    ae2c:	696c6b73 3c207473 656d6974 7720273e     sklist <time>' w
    ae3c:	206c6c69 70736964 2079616c 20555043     ill display CPU 
    ae4c:	6c697475 74617a69 206e6f69 68746977     utilization with
    ae5c:	74206e69 20736968 656d6974 6e697720     in this time win
    ae6c:	2e776f64 61657200 72770064 00657469     dow..read.write.
    ae7c:	78257830 25783020 75252078 43324900     0x%x 0x%x %u.I2C
    ae8c:	61655220 666f2064 616c5320 30206576      Read of Slave 0
    ae9c:	32302578 20000a58 25783020 3a583230     x%02X..  0x%02X:
    aeac:	25783020 20583230 29642528 3249000a      0x%02X (%d)..I2
    aebc:	75622043 72652073 20726f72 69727564     C bus error duri
    aecc:	6920676e 5f5f6332 64616572 616c735f     ng i2c__read_sla
    aedc:	645f6576 28617461 43000a29 616d6d6f     ve_data()..Comma
    aeec:	6520646e 726f7272 6552203a 63206461     nd error: Read c
    aefc:	616d6d6f 7320646e 6c756f68 65622064     ommand should be
    af0c:	32692720 65722063 30206461 20444478      'i2c read 0xDD 
    af1c:	52527830 3e6e3c20 30000a27 20782578     0xRR <n>'..0x%x 
    af2c:	78257830 6f725700 25206574 79622075     0x%x.Wrote %u by
    af3c:	20736574 73206f74 6576616c 25783020     tes to slave 0x%
    af4c:	0a583230 5b202000 5d643325 30203d20     02X..  [%3d] = 0
    af5c:	32302578 25282058 000a2964 20433249     x%02X (%d)..I2C 
    af6c:	20737562 6f727265 75642072 676e6972     bus error during
    af7c:	63326920 72775f5f 5f657469 76616c73      i2c__write_slav
    af8c:	61645f65 29286174 6f43000a 6e616d6d     e_data()..Comman
    af9c:	72652064 3a726f72 69725720 63206574     d error: Write c
    afac:	616d6d6f 7320646e 6c756f68 65622064     ommand should be
    afbc:	32692720 72772063 20657469 44447830      'i2c write 0xDD
    afcc:	52783020 763c2052 65756c61 763c203e      0xRR <value> <v
    afdc:	65756c61 2e2e203e 000a272e 70737573     alue> ...'..susp
    afec:	00646e65 73303225 30322520 65720073     end.%20s %20s.re
    affc:	656d7573 52524500 202c524f 6d6d6f63     sume.ERROR, comm
    b00c:	20646e61 64616572 69616620 2121736c     and read fails!!
    b01c:	4e000a21 00656d61 73303125 74532020     !..Name.%10s  St
    b02c:	73757461 20725020 63617453 5043206b     atus Pr Stack CP
    b03c:	20252555 20202020 20202020 6d695420     U%%          Tim
    b04c:	25000a65 20733031 25207325 25207532     e..%10s %s %2u %
    b05c:	25207535 25207534 20753031 000a7375     5u %4u %10u us..
    b06c:	7265764f 64616568 7525203a 0a537520     Overhead: %u uS.
    b07c:	6e757200 676e696e 65722000 20796461     .running. ready 
    b08c:	6f6c6200 64656b63 6c656400 64657465     .blocked.deleted
    b09c:	ffffff00                                ....

0000b0a0 <task_status_table.7881>:
    b0a0:	0000b07d 0000b085 0000b08d 0000afe8     }...............
    b0b0:	0000b095                                ....

0000b0b4 <__FUNCTION__.9166>:
    b0b4:	69726570 72656870 5f736c61 74696e69     peripherals_init
    b0c4:	2d2d2d00 2d2d2d2d 2d2d2d2d 2d2d2d2d     .---------------
    b0d4:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b0e4:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b0f4:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b104:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b114:	250a002d 73250a73 203a2928 20776f4c     -..%s.%s(): Low 
    b124:	6576656c 7473206c 75747261 49000a70     level startup..I
    b134:	73204332 6576616c 74656420 65746365     2C slave detecte
    b144:	74612064 64646120 73736572 7830203a     d at address: 0x
    b154:	58323025 6163000a 30206573 0a303678     %02X..case 0x60.
    b164:	73616300 78302065 000a3836 65736163     .case 0x68..case
    b174:	38783020 49000a30 7865646e 20736920      0x80..Index is 
    b184:	0a206425 73616300 78302065 000a3838     %d ..case 0x88..
    b194:	65736163 41783020 45000a30 2121444e     case 0xA0..END!!
    b1a4:	63000a21 20657361 38417830 6163000a     !..case 0xA8..ca
    b1b4:	30206573 0a304278 73616300 78302065     se 0xB0..case 0x
    b1c4:	000a3842 65736163 43783020 63000a30     B8..case 0xC0..c
    b1d4:	20657361 38437830 7245000a 21726f72     ase 0xC8..Error!
    b1e4:	73654d20 65676173 5825203a 21212120      Message: %X !!!
    b1f4:	3249000a 616c2043 65622062 216e6967     ..I2C lab begin!
    b204:	46002121 52656572 20534f54 45535341     !!.FreeRTOS ASSE
    b214:	29285452 63636f20 65727275 6e692064     RT() occurred in
    b224:	61636964 676e6974 206e6120 6f727265     dicating an erro
    b234:	6f632072 7469646e 206e6f69 74616874     r condition that
    b244:	6f687320 20646c75 4556454e 61682052      should NEVER ha
    b254:	6e657070 202d2000 20646944 20756f79     ppen. - Did you 
    b264:	6c6c6163 62206120 6b636f6c 20676e69     call a blocking 
    b274:	20495041 6e20726f 46206e6f 496d6f72     API or non FromI
    b284:	29285253 49504120 736e6920 20656469     SR() API inside 
    b294:	49206e61 003f5253 44202d20 79206469     an ISR?. - Did y
    b2a4:	6620756f 6567726f 6f742074 65737520     ou forget to use
    b2b4:	72706620 66746e69 64747328 29727265      fprintf(stderr)
    b2c4:	206e6920 49206e61 003f5253 65726548      in an ISR?.Here
    b2d4:	20736920 20656874 656e696c 20666f20      is the line of 
    b2e4:	65646f63 61687420 61682074 6465746c     code that halted
    b2f4:	65687420 55504320 7600203a 6c707041      the CPU: .vAppl
    b304:	74616369 4d6e6f69 6f6c6c61 69614663     icationMallocFai
    b314:	4864656c 286b6f6f 61632029 64656c6c     ledHook() called
    b324:	6f6e203b 726f6d20 41522065 656d204d     ; no more RAM me
    b334:	79726f6d 61747300 6f206b63 66726576     mory.stack overf
    b344:	20776f6c 74207962 20736968 6b736174     low by this task
    b354:	7875003a 74697243 6c616369 7473654e     :.uxCriticalNest
    b364:	20676e69 7e203d3d 004c5530 6f702028     ing == ~0UL.( po
    b374:	564e7472 495f4349 435f544e 5f4c5254     rtNVIC_INT_CTRL_
    b384:	20474552 6f702026 45567472 43415443     REG & portVECTAC
    b394:	45564954 53414d5f 2029204b 30203d3d     TIVE_MASK ) == 0
    b3a4:	43787500 69746972 4e6c6163 69747365     .uxCriticalNesti
    b3b4:	7500676e 72754363 746e6572 6f697250     ng.ucCurrentPrio
    b3c4:	79746972 203d3e20 614d6375 73795378     rity >= ucMaxSys
    b3d4:	6c6c6143 6f697250 79746972 70202800     CallPriority.( p
    b3e4:	4174726f 52435249 4745525f 70202620     ortAIRCR_REG & p
    b3f4:	5074726f 524f4952 5f595449 554f5247     ortPRIORITY_GROU
    b404:	414d5f50 29204b53 203d3c20 614d6c75     P_MASK ) <= ulMa
    b414:	49525078 554f5247 6c615650 70006575     xPRIGROUPValue.p
    b424:	4374726f 44495550 203d2120 74726f70     ortCPUID != port
    b434:	54524f43 4d5f5845 30725f37 495f3170     CORTEX_M7_r0p1_I
    b444:	6f700044 50437472 20444955 70203d21     D.portCPUID != p
    b454:	4374726f 4554524f 374d5f58 7030725f     ortCORTEX_M7_r0p
    b464:	44495f30 70202800 4d74726f 505f5841     0_ID.( portMAX_P
    b474:	52474952 5f50554f 53544942 75202d20     RIGROUP_BITS - u
    b484:	78614d6c 47495250 50554f52 756c6156     lMaxPRIGROUPValu
    b494:	20292065 5f203d3d 49564e5f 52505f43     e ) == __NVIC_PR
    b4a4:	425f4f49 00535449 75517875 4c657565     IO_BITS.uxQueueL
    b4b4:	74676e65 203e2068 42552028 54657361     ength > ( UBaseT
    b4c4:	5f657079 20292074 78700030 74617453     ype_t ) 0.pxStat
    b4d4:	75516369 20657565 4e203d21 004c4c55     icQueue != NULL.
    b4e4:	28202821 63757020 75657551 6f745365     !( ( pucQueueSto
    b4f4:	65676172 203d2120 4c4c554e 26202920     rage != NULL ) &
    b504:	20282026 74497875 69536d65 3d20657a     & ( uxItemSize =
    b514:	2030203d 00292029 28202821 63757020     = 0 ) ).!( ( puc
    b524:	75657551 6f745365 65676172 203d3d20     QueueStorage == 
    b534:	4c4c554e 26202920 20282026 74497875     NULL ) && ( uxIt
    b544:	69536d65 2120657a 2030203d 00292029     emSize != 0 ) ).
    b554:	7a695378 3d3d2065 7a697320 28666f65     xSize == sizeof(
    b564:	65755120 745f6575 70002920 65755178      Queue_t ).pxQue
    b574:	21006575 20282028 74497670 6f546d65     ue.!( ( pvItemTo
    b584:	75657551 3d3d2065 4c554e20 2029204c     Queue == NULL ) 
    b594:	28202626 51787020 65756575 78753e2d     && ( pxQueue->ux
    b5a4:	6d657449 657a6953 203d2120 42552028     ItemSize != ( UB
    b5b4:	54657361 5f657079 20292074 29205530     aseType_t ) 0U )
    b5c4:	21002920 20282028 706f4378 736f5079      ).!( ( xCopyPos
    b5d4:	6f697469 3d3d206e 65757120 564f6575     ition == queueOV
    b5e4:	52575245 20455449 26262029 70202820     ERWRITE ) && ( p
    b5f4:	65755178 3e2d6575 654c7875 6874676e     xQueue->uxLength
    b604:	203d2120 20292031 28210029 78202820      != 1 ) ).!( ( x
    b614:	6b736154 53746547 64656863 72656c75     TaskGetScheduler
    b624:	74617453 20292865 74203d3d 536b7361     State() == taskS
    b634:	44454843 52454c55 5355535f 444e4550     CHEDULER_SUSPEND
    b644:	29204445 20262620 54782028 736b6369     ED ) && ( xTicks
    b654:	61576f54 21207469 2030203d 00292029     ToWait != 0 ) ).
    b664:	75517870 2d657565 4978753e 536d6574     pxQueue->uxItemS
    b674:	20657a69 30203d3d 20282100 78702028     ize == 0.!( ( px
    b684:	75657551 753e2d65 65755178 79546575     Queue->uxQueueTy
    b694:	3d206570 7571203d 51657565 45554555     pe == queueQUEUE
    b6a4:	5f53495f 4554554d 20292058 28202626     _IS_MUTEX ) && (
    b6b4:	51787020 65756575 2e753e2d 6d655378      pxQueue->u.xSem
    b6c4:	6f687061 782e6572 6574754d 6c6f4878     aphore.xMutexHol
    b6d4:	20726564 4e203d21 204c4c55 00292029     der != NULL ) ).
    b6e4:	78702028 75657551 00292065 28202821     ( pxQueue ).!( (
    b6f4:	70202820 66754276 20726566 3d3d2029      ( pvBuffer ) ==
    b704:	4c554e20 2029204c 28202626 70202820      NULL ) && ( ( p
    b714:	65755178 29206575 78753e2d 6d657449     xQueue )->uxItem
    b724:	657a6953 203d2120 42552028 54657361     Size != ( UBaseT
    b734:	5f657079 20292074 29205530 21002920     ype_t ) 0U ) ).!
    b744:	20282028 75427670 72656666 203d3d20     ( ( pvBuffer == 
    b754:	4c4c554e 26202920 20282026 75517870     NULL ) && ( pxQu
    b764:	2d657565 4978753e 536d6574 20657a69     eue->uxItemSize 
    b774:	28203d21 61425520 79546573 745f6570     != ( UBaseType_t
    b784:	30202920 20292055 49780029 7265686e      ) 0U ) ).xInher
    b794:	6e617469 634f6563 72727563 3d206465     itanceOccurred =
    b7a4:	6470203d 534c4146 78700045 00424354     = pdFALSE.pxTCB.
    b7b4:	73615478 7870006b 76657250 73756f69     xTask.pxPrevious
    b7c4:	656b6157 656d6954 78202800 656d6954     WakeTime.( xTime
    b7d4:	72636e49 6e656d65 203e2074 29205530     Increment > 0U )
    b7e4:	53787500 64656863 72656c75 70737553     .uxSchedulerSusp
    b7f4:	65646e65 3d3d2064 70003020 65764578     ended == 0.pxEve
    b804:	694c746e 70007473 42435478 203d2120     ntList.pxTCB != 
    b814:	75437870 6e657272 42435474 61547800     pxCurrentTCB.xTa
    b824:	6f546b73 75736552 7000656d 6d695478     skToResume.pxTim
    b834:	74754f65 4c444900 696c0045 55437473     eOut.IDLE.listCU
    b844:	4e455252 494c5f54 4c5f5453 54474e45     RRENT_LIST_LENGT
    b854:	26202848 78702028 64616552 73615479     H( &( pxReadyTas
    b864:	694c736b 5b737473 54787520 7250706f     ksLists[ uxTopPr
    b874:	69726f69 5d207974 29202920 30203e20     iority ] ) ) > 0
    b884:	54787000 736b6369 61576f54 70007469     .pxTicksToWait.p
    b894:	74537875 426b6361 65666675 3d212072     uxStackBuffer !=
    b8a4:	4c554e20 7870004c 6b736154 66667542      NULL.pxTaskBuff
    b8b4:	21207265 554e203d 78004c4c 657a6953     er != NULL.xSize
    b8c4:	203d3d20 657a6973 2028666f 5f424354      == sizeof( TCB_
    b8d4:	00292074 6c727473 20286e65 614e6370     t ).strlen( pcNa
    b8e4:	6f54656d 72657551 20292079 6f63203c     meToQuery ) < co
    b8f4:	6769666e 5f58414d 4b534154 4d414e5f     nfigMAX_TASK_NAM
    b904:	454c5f45 2028004e 7473696c 5453494c     E_LEN.( listLIST
    b914:	5f53495f 54504d45 70202859 6c654478     _IS_EMPTY( pxDel
    b924:	64657961 6b736154 7473694c 29202920     ayedTaskList ) )
    b934:	54787000 3d204243 7870203d 72727543     .pxTCB == pxCurr
    b944:	54746e65 70004243 42435478 78753e2d     entTCB.pxTCB->ux
    b954:	6574754d 48736578 00646c65 6e557870     MutexesHeld.pxUn
    b964:	636f6c62 5464656b 75004243 68635378     blockedTCB.uxSch
    b974:	6c756465 75537265 6e657073 00646564     edulerSuspended.

0000b984 <gpio_memory_map>:
    b984:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    b994:	20098080 200980a0                       ... ... 

0000b99c <hw_timers>:
    b99c:	40004000 00000001 40008000 00000002     .@.@.......@....
    b9ac:	40090000 00000003 40094000 00000004     ...@.....@.@....
    b9bc:	00003f1d 00003f11 00003f05              .?...?...?..

0000b9c8 <lpc_peripheral_pconp_bit_map>:
    b9c8:	16020100 18040317 13070619 0a15001a     ................
    b9d8:	00000000 000c0000 001d0000 00000000     ................
    b9e8:	00000000 ffffff14                       ........

0000b9f0 <uart__isrs>:
    b9f0:	00004361 00004355 00004349 0000433d     aC..UC..IC..=C..

0000ba00 <uart_peripheral_ids>:
    ba00:	08070605                                ....

0000ba04 <_ctype_>:
    ba04:	20202000 20202020 28282020 20282828     .         ((((( 
    ba14:	20202020 20202020 20202020 20202020                     
    ba24:	10108820 10101010 10101010 10101010      ...............
    ba34:	04040410 04040404 10040404 10101010     ................
    ba44:	41411010 41414141 01010101 01010101     ..AAAAAA........
    ba54:	01010101 01010101 01010101 10101010     ................
    ba64:	42421010 42424242 02020202 02020202     ..BBBBBB........
    ba74:	02020202 02020202 02020202 10101010     ................
    ba84:	00000020 00000000 00000000 00000000      ...............
	...
    bb04:	ffffff00                                ....

0000bb08 <_global_impure_ptr>:
    bb08:	10000178 2b302d23 6c680020 6665004c     x...#-0+ .hlL.ef
    bb18:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    bb28:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    bb38:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    bb48:	64636261 65006665 00646c25              abcdef.e%ld.

0000bb54 <fpi.7522>:
    bb54:	00000035 fffffbce 000003cb 00000001     5...............
    bb64:	00000000                                ....

0000bb68 <fpinan.7558>:
    bb68:	00000034 fffffbce 000003cb 00000001     4...............
    bb78:	00000000 ffffffff                       ........

0000bb80 <tinytens>:
    bb80:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    bb90:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    bba0:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
    bbb0:	4e614e00 ffffff00                       .NaN....

0000bbb8 <__sf_fake_stderr>:
	...

0000bbd8 <__sf_fake_stdin>:
	...

0000bbf8 <__sf_fake_stdout>:
	...

0000bc18 <_C_numeric_locale>:
    bc18:	0000adee 0000ac43 100001d8 4f500043     ....C.......C.PO
    bc28:	00584953 ffffffff                       SIX.....

0000bc30 <__mprec_bigtens>:
    bc30:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    bc40:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    bc50:	7f73bf3c 75154fdd                       <.s..O.u

0000bc58 <__mprec_tens>:
    bc58:	00000000 3ff00000 00000000 40240000     .......?......$@
    bc68:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    bc78:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    bc88:	00000000 412e8480 00000000 416312d0     .......A......cA
    bc98:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    bca8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    bcb8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    bcc8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    bcd8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    bce8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    bcf8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    bd08:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    bd18:	79d99db4 44ea7843                       ...yCx.D

0000bd20 <p05.7444>:
    bd20:	00000005 00000019 0000007d 0000bd4a     ........}...J...
    bd30:	0000bd4d 0000bd50 61462d41 3938662d     M...P...A-Fa-f89
    bd40:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    bd50:	ff005878                                xX..
